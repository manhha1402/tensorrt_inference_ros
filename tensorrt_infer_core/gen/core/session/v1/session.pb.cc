// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core/session/v1/session.proto
// Protobuf C++ Version: 5.27.2

#include "core/session/v1/session.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace core {
namespace session {
namespace v1 {

inline constexpr UpdateUserSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateUserSessionRequest::UpdateUserSessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateUserSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateUserSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateUserSessionRequestDefaultTypeInternal() {}
  union {
    UpdateUserSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateUserSessionRequestDefaultTypeInternal _UpdateUserSessionRequest_default_instance_;

inline constexpr GetUserSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetUserSessionRequest::GetUserSessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetUserSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserSessionRequestDefaultTypeInternal() {}
  union {
    GetUserSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserSessionRequestDefaultTypeInternal _GetUserSessionRequest_default_instance_;

inline constexpr DeleteUserSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteUserSessionRequest::DeleteUserSessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteUserSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteUserSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteUserSessionRequestDefaultTypeInternal() {}
  union {
    DeleteUserSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteUserSessionRequestDefaultTypeInternal _DeleteUserSessionRequest_default_instance_;

inline constexpr CreateUserSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CreateUserSessionRequest::CreateUserSessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateUserSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUserSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUserSessionRequestDefaultTypeInternal() {}
  union {
    CreateUserSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUserSessionRequestDefaultTypeInternal _CreateUserSessionRequest_default_instance_;

inline constexpr UserSession::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_{nullptr},
        createdat_{::int64_t{0}},
        expires_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR UserSession::UserSession(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSessionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSessionDefaultTypeInternal() {}
  union {
    UserSession _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSessionDefaultTypeInternal _UserSession_default_instance_;
}  // namespace v1
}  // namespace session
}  // namespace core
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_core_2fsession_2fv1_2fsession_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_core_2fsession_2fv1_2fsession_2eproto = nullptr;
const ::uint32_t
    TableStruct_core_2fsession_2fv1_2fsession_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _impl_.createdat_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UserSession, _impl_.expires_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::core::session::v1::GetUserSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::core::session::v1::GetUserSessionRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::CreateUserSessionRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::CreateUserSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::core::session::v1::CreateUserSessionRequest, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::CreateUserSessionRequest, _impl_.email_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UpdateUserSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UpdateUserSessionRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UpdateUserSessionRequest, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::core::session::v1::UpdateUserSessionRequest, _impl_.expires_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::core::session::v1::DeleteUserSessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::core::session::v1::DeleteUserSessionRequest, _impl_.id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::core::session::v1::UserSession)},
        {18, -1, -1, sizeof(::core::session::v1::GetUserSessionRequest)},
        {27, 37, -1, sizeof(::core::session::v1::CreateUserSessionRequest)},
        {39, -1, -1, sizeof(::core::session::v1::UpdateUserSessionRequest)},
        {50, -1, -1, sizeof(::core::session::v1::DeleteUserSessionRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::core::session::v1::_UserSession_default_instance_._instance,
    &::core::session::v1::_GetUserSessionRequest_default_instance_._instance,
    &::core::session::v1::_CreateUserSessionRequest_default_instance_._instance,
    &::core::session::v1::_UpdateUserSessionRequest_default_instance_._instance,
    &::core::session::v1::_DeleteUserSessionRequest_default_instance_._instance,
};
const char descriptor_table_protodef_core_2fsession_2fv1_2fsession_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035core/session/v1/session.proto\022\017core.se"
    "ssion.v1\032\033google/protobuf/empty.proto\032\022c"
    "ore/v1/user.proto\"\220\001\n\013UserSession\022\016\n\002id\030"
    "\001 \001(\tR\002id\022\026\n\006userId\030\002 \001(\tR\006userId\022!\n\004use"
    "r\030\005 \001(\0132\r.core.v1.UserR\004user\022\034\n\tcreatedA"
    "t\030\003 \001(\003R\tcreatedAt\022\030\n\007expires\030\004 \001(\003R\007exp"
    "ires\"\'\n\025GetUserSessionRequest\022\016\n\002id\030\001 \001("
    "\tR\002id\"g\n\030CreateUserSessionRequest\022\033\n\006use"
    "rId\030\001 \001(\tH\000R\006userId\210\001\001\022\031\n\005email\030\002 \001(\tH\001R"
    "\005email\210\001\001B\t\n\007_userIdB\010\n\006_email\"\\\n\030Update"
    "UserSessionRequest\022\016\n\002id\030\001 \001(\tR\002id\022\026\n\006us"
    "erId\030\002 \001(\tR\006userId\022\030\n\007expires\030\003 \001(\003R\007exp"
    "ires\"*\n\030DeleteUserSessionRequest\022\016\n\002id\030\001"
    " \001(\tR\002id2\204\003\n\016SessionService\022X\n\016GetUserSe"
    "ssion\022&.core.session.v1.GetUserSessionRe"
    "quest\032\034.core.session.v1.UserSession\"\000\022^\n"
    "\021CreateUserSession\022).core.session.v1.Cre"
    "ateUserSessionRequest\032\034.core.session.v1."
    "UserSession\"\000\022^\n\021UpdateUserSession\022).cor"
    "e.session.v1.UpdateUserSessionRequest\032\034."
    "core.session.v1.UserSession\"\000\022X\n\021DeleteU"
    "serSession\022).core.session.v1.DeleteUserS"
    "essionRequest\032\026.google.protobuf.Empty\"\000B"
    "\251\001\n\023com.core.session.v1B\014SessionProtoP\001Z"
    "&app/core/gen/core/session/v1;sessionv1\242"
    "\002\003CSX\252\002\017Core.Session.V1\312\002\017Core\\Session\\V"
    "1\342\002\033Core\\Session\\V1\\GPBMetadata\352\002\021Core::"
    "Session::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_core_2fsession_2fv1_2fsession_2eproto_deps[2] =
    {
        &::descriptor_table_core_2fv1_2fuser_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_core_2fsession_2fv1_2fsession_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_core_2fsession_2fv1_2fsession_2eproto = {
    false,
    false,
    1099,
    descriptor_table_protodef_core_2fsession_2fv1_2fsession_2eproto,
    "core/session/v1/session.proto",
    &descriptor_table_core_2fsession_2fv1_2fsession_2eproto_once,
    descriptor_table_core_2fsession_2fv1_2fsession_2eproto_deps,
    2,
    5,
    schemas,
    file_default_instances,
    TableStruct_core_2fsession_2fv1_2fsession_2eproto::offsets,
    file_level_enum_descriptors_core_2fsession_2fv1_2fsession_2eproto,
    file_level_service_descriptors_core_2fsession_2fv1_2fsession_2eproto,
};
namespace core {
namespace session {
namespace v1 {
// ===================================================================

class UserSession::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UserSession>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UserSession, _impl_._has_bits_);
};

void UserSession::clear_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.user_ != nullptr) _impl_.user_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UserSession::UserSession(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core.session.v1.UserSession)
}
inline PROTOBUF_NDEBUG_INLINE UserSession::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::core::session::v1::UserSession& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        userid_(arena, from.userid_) {}

UserSession::UserSession(
    ::google::protobuf::Arena* arena,
    const UserSession& from)
    : ::google::protobuf::Message(arena) {
  UserSession* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::core::v1::User>(
                              arena, *from._impl_.user_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, createdat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, createdat_),
           offsetof(Impl_, expires_) -
               offsetof(Impl_, createdat_) +
               sizeof(Impl_::expires_));

  // @@protoc_insertion_point(copy_constructor:core.session.v1.UserSession)
}
inline PROTOBUF_NDEBUG_INLINE UserSession::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        userid_(arena) {}

inline void UserSession::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_),
           0,
           offsetof(Impl_, expires_) -
               offsetof(Impl_, user_) +
               sizeof(Impl_::expires_));
}
UserSession::~UserSession() {
  // @@protoc_insertion_point(destructor:core.session.v1.UserSession)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserSession::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.userid_.Destroy();
  delete _impl_.user_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserSession::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UserSession, _impl_._cached_size_),
              false,
          },
          &UserSession::MergeImpl,
          &UserSession::kDescriptorMethods,
          &descriptor_table_core_2fsession_2fv1_2fsession_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 44, 2> UserSession::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserSession, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserSession_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core::session::v1::UserSession>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserSession, _impl_.id_)}},
    // string userId = 2 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UserSession, _impl_.userid_)}},
    // int64 createdAt = 3 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UserSession, _impl_.createdat_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UserSession, _impl_.createdat_)}},
    // int64 expires = 4 [json_name = "expires"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UserSession, _impl_.expires_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UserSession, _impl_.expires_)}},
    // .core.v1.User user = 5 [json_name = "user"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(UserSession, _impl_.user_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(UserSession, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string userId = 2 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(UserSession, _impl_.userid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 createdAt = 3 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(UserSession, _impl_.createdat_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 expires = 4 [json_name = "expires"];
    {PROTOBUF_FIELD_OFFSET(UserSession, _impl_.expires_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .core.v1.User user = 5 [json_name = "user"];
    {PROTOBUF_FIELD_OFFSET(UserSession, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::core::v1::User>()},
  }}, {{
    "\33\2\6\0\0\0\0\0"
    "core.session.v1.UserSession"
    "id"
    "userId"
  }},
};

PROTOBUF_NOINLINE void UserSession::Clear() {
// @@protoc_insertion_point(message_clear_start:core.session.v1.UserSession)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.userid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.user_ != nullptr);
    _impl_.user_->Clear();
  }
  ::memset(&_impl_.createdat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.expires_) -
      reinterpret_cast<char*>(&_impl_.createdat_)) + sizeof(_impl_.expires_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UserSession::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:core.session.v1.UserSession)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.UserSession.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string userId = 2 [json_name = "userId"];
  if (!this->_internal_userid().empty()) {
    const std::string& _s = this->_internal_userid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.UserSession.userId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 createdAt = 3 [json_name = "createdAt"];
  if (this->_internal_createdat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_createdat(), target);
  }

  // int64 expires = 4 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_expires(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .core.v1.User user = 5 [json_name = "user"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.user_, _impl_.user_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.session.v1.UserSession)
  return target;
}

::size_t UserSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.session.v1.UserSession)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string userId = 2 [json_name = "userId"];
  if (!this->_internal_userid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_userid());
  }

  // .core.v1.User user = 5 [json_name = "user"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
  }

  // int64 createdAt = 3 [json_name = "createdAt"];
  if (this->_internal_createdat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_createdat());
  }

  // int64 expires = 4 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_expires());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserSession::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserSession*>(&to_msg);
  auto& from = static_cast<const UserSession&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:core.session.v1.UserSession)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.user_ != nullptr);
    if (_this->_impl_.user_ == nullptr) {
      _this->_impl_.user_ =
          ::google::protobuf::Message::CopyConstruct<::core::v1::User>(arena, *from._impl_.user_);
    } else {
      _this->_impl_.user_->MergeFrom(*from._impl_.user_);
    }
  }
  if (from._internal_createdat() != 0) {
    _this->_impl_.createdat_ = from._impl_.createdat_;
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserSession::CopyFrom(const UserSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.session.v1.UserSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UserSession::InternalSwap(UserSession* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserSession, _impl_.expires_)
      + sizeof(UserSession::_impl_.expires_)
      - PROTOBUF_FIELD_OFFSET(UserSession, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata UserSession::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetUserSessionRequest::_Internal {
 public:
};

GetUserSessionRequest::GetUserSessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core.session.v1.GetUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::core::session::v1::GetUserSessionRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetUserSessionRequest::GetUserSessionRequest(
    ::google::protobuf::Arena* arena,
    const GetUserSessionRequest& from)
    : ::google::protobuf::Message(arena) {
  GetUserSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:core.session.v1.GetUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetUserSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetUserSessionRequest::~GetUserSessionRequest() {
  // @@protoc_insertion_point(destructor:core.session.v1.GetUserSessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetUserSessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetUserSessionRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GetUserSessionRequest, _impl_._cached_size_),
              false,
          },
          &GetUserSessionRequest::MergeImpl,
          &GetUserSessionRequest::kDescriptorMethods,
          &descriptor_table_core_2fsession_2fv1_2fsession_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 48, 2> GetUserSessionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetUserSessionRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core::session::v1::GetUserSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserSessionRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GetUserSessionRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\2\0\0\0\0\0\0"
    "core.session.v1.GetUserSessionRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetUserSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.session.v1.GetUserSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GetUserSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:core.session.v1.GetUserSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.GetUserSessionRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.session.v1.GetUserSessionRequest)
  return target;
}

::size_t GetUserSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.session.v1.GetUserSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetUserSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetUserSessionRequest*>(&to_msg);
  auto& from = static_cast<const GetUserSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:core.session.v1.GetUserSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserSessionRequest::CopyFrom(const GetUserSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.session.v1.GetUserSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetUserSessionRequest::InternalSwap(GetUserSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetUserSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateUserSessionRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateUserSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_._has_bits_);
};

CreateUserSessionRequest::CreateUserSessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core.session.v1.CreateUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::core::session::v1::CreateUserSessionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        userid_(arena, from.userid_),
        email_(arena, from.email_) {}

CreateUserSessionRequest::CreateUserSessionRequest(
    ::google::protobuf::Arena* arena,
    const CreateUserSessionRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateUserSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:core.session.v1.CreateUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        userid_(arena),
        email_(arena) {}

inline void CreateUserSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateUserSessionRequest::~CreateUserSessionRequest() {
  // @@protoc_insertion_point(destructor:core.session.v1.CreateUserSessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateUserSessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.userid_.Destroy();
  _impl_.email_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateUserSessionRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_._cached_size_),
              false,
          },
          &CreateUserSessionRequest::MergeImpl,
          &CreateUserSessionRequest::kDescriptorMethods,
          &descriptor_table_core_2fsession_2fv1_2fsession_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2> CreateUserSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CreateUserSessionRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core::session::v1::CreateUserSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string email = 2 [json_name = "email"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_.email_)}},
    // optional string userId = 1 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_.userid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string userId = 1 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_.userid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string email = 2 [json_name = "email"];
    {PROTOBUF_FIELD_OFFSET(CreateUserSessionRequest, _impl_.email_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\6\5\0\0\0\0\0"
    "core.session.v1.CreateUserSessionRequest"
    "userId"
    "email"
  }},
};

PROTOBUF_NOINLINE void CreateUserSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.session.v1.CreateUserSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.userid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CreateUserSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:core.session.v1.CreateUserSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string userId = 1 [json_name = "userId"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_userid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.CreateUserSessionRequest.userId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string email = 2 [json_name = "email"];
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.CreateUserSessionRequest.email");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.session.v1.CreateUserSessionRequest)
  return target;
}

::size_t CreateUserSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.session.v1.CreateUserSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string userId = 1 [json_name = "userId"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_userid());
    }

    // optional string email = 2 [json_name = "email"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_email());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CreateUserSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateUserSessionRequest*>(&to_msg);
  auto& from = static_cast<const CreateUserSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:core.session.v1.CreateUserSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_userid(from._internal_userid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_email(from._internal_email());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUserSessionRequest::CopyFrom(const CreateUserSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.session.v1.CreateUserSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateUserSessionRequest::InternalSwap(CreateUserSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
}

::google::protobuf::Metadata CreateUserSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateUserSessionRequest::_Internal {
 public:
};

UpdateUserSessionRequest::UpdateUserSessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core.session.v1.UpdateUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::core::session::v1::UpdateUserSessionRequest& from_msg)
      : id_(arena, from.id_),
        userid_(arena, from.userid_),
        _cached_size_{0} {}

UpdateUserSessionRequest::UpdateUserSessionRequest(
    ::google::protobuf::Arena* arena,
    const UpdateUserSessionRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateUserSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.expires_ = from._impl_.expires_;

  // @@protoc_insertion_point(copy_constructor:core.session.v1.UpdateUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        userid_(arena),
        _cached_size_{0} {}

inline void UpdateUserSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expires_ = {};
}
UpdateUserSessionRequest::~UpdateUserSessionRequest() {
  // @@protoc_insertion_point(destructor:core.session.v1.UpdateUserSessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateUserSessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.userid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateUserSessionRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_._cached_size_),
              false,
          },
          &UpdateUserSessionRequest::MergeImpl,
          &UpdateUserSessionRequest::kDescriptorMethods,
          &descriptor_table_core_2fsession_2fv1_2fsession_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 57, 2> UpdateUserSessionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateUserSessionRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core::session::v1::UpdateUserSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_.id_)}},
    // string userId = 2 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_.userid_)}},
    // int64 expires = 3 [json_name = "expires"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateUserSessionRequest, _impl_.expires_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_.expires_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string userId = 2 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_.userid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires = 3 [json_name = "expires"];
    {PROTOBUF_FIELD_OFFSET(UpdateUserSessionRequest, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\50\2\6\0\0\0\0\0"
    "core.session.v1.UpdateUserSessionRequest"
    "id"
    "userId"
  }},
};

PROTOBUF_NOINLINE void UpdateUserSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.session.v1.UpdateUserSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.userid_.ClearToEmpty();
  _impl_.expires_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* UpdateUserSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:core.session.v1.UpdateUserSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.UpdateUserSessionRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string userId = 2 [json_name = "userId"];
  if (!this->_internal_userid().empty()) {
    const std::string& _s = this->_internal_userid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.UpdateUserSessionRequest.userId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 expires = 3 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_expires(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.session.v1.UpdateUserSessionRequest)
  return target;
}

::size_t UpdateUserSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.session.v1.UpdateUserSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string userId = 2 [json_name = "userId"];
  if (!this->_internal_userid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_userid());
  }

  // int64 expires = 3 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_expires());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateUserSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateUserSessionRequest*>(&to_msg);
  auto& from = static_cast<const UpdateUserSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:core.session.v1.UpdateUserSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (from._internal_expires() != 0) {
    _this->_impl_.expires_ = from._impl_.expires_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUserSessionRequest::CopyFrom(const UpdateUserSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.session.v1.UpdateUserSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateUserSessionRequest::InternalSwap(UpdateUserSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
        swap(_impl_.expires_, other->_impl_.expires_);
}

::google::protobuf::Metadata UpdateUserSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteUserSessionRequest::_Internal {
 public:
};

DeleteUserSessionRequest::DeleteUserSessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:core.session.v1.DeleteUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::core::session::v1::DeleteUserSessionRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteUserSessionRequest::DeleteUserSessionRequest(
    ::google::protobuf::Arena* arena,
    const DeleteUserSessionRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteUserSessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:core.session.v1.DeleteUserSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteUserSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteUserSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteUserSessionRequest::~DeleteUserSessionRequest() {
  // @@protoc_insertion_point(destructor:core.session.v1.DeleteUserSessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteUserSessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeleteUserSessionRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DeleteUserSessionRequest, _impl_._cached_size_),
              false,
          },
          &DeleteUserSessionRequest::MergeImpl,
          &DeleteUserSessionRequest::kDescriptorMethods,
          &descriptor_table_core_2fsession_2fv1_2fsession_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> DeleteUserSessionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeleteUserSessionRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::core::session::v1::DeleteUserSessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteUserSessionRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeleteUserSessionRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\2\0\0\0\0\0\0"
    "core.session.v1.DeleteUserSessionRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteUserSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.session.v1.DeleteUserSessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DeleteUserSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:core.session.v1.DeleteUserSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "core.session.v1.DeleteUserSessionRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.session.v1.DeleteUserSessionRequest)
  return target;
}

::size_t DeleteUserSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.session.v1.DeleteUserSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeleteUserSessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteUserSessionRequest*>(&to_msg);
  auto& from = static_cast<const DeleteUserSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:core.session.v1.DeleteUserSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUserSessionRequest::CopyFrom(const DeleteUserSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.session.v1.DeleteUserSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteUserSessionRequest::InternalSwap(DeleteUserSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteUserSessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace session
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_core_2fsession_2fv1_2fsession_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
