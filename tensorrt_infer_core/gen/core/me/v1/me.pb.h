// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core/me/v1/me.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_core_2fme_2fv1_2fme_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_core_2fme_2fv1_2fme_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "core/v1/permission.pb.h"
#include "core/v1/user.pb.h"
#include "google/protobuf/empty.pb.h"
#include "api/v1/permissions.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_core_2fme_2fv1_2fme_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2fme_2fv1_2fme_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_core_2fme_2fv1_2fme_2eproto;
namespace core {
namespace me {
namespace v1 {
class CheckPermissionRequest;
struct CheckPermissionRequestDefaultTypeInternal;
extern CheckPermissionRequestDefaultTypeInternal _CheckPermissionRequest_default_instance_;
class CheckPermissionResponse;
struct CheckPermissionResponseDefaultTypeInternal;
extern CheckPermissionResponseDefaultTypeInternal _CheckPermissionResponse_default_instance_;
class GetPermissionsResponse;
struct GetPermissionsResponseDefaultTypeInternal;
extern GetPermissionsResponseDefaultTypeInternal _GetPermissionsResponse_default_instance_;
class GetPermissionsResponse_Group;
struct GetPermissionsResponse_GroupDefaultTypeInternal;
extern GetPermissionsResponse_GroupDefaultTypeInternal _GetPermissionsResponse_Group_default_instance_;
class GetPermissionsResponse_GroupsEntry_DoNotUse;
struct GetPermissionsResponse_GroupsEntry_DoNotUseDefaultTypeInternal;
extern GetPermissionsResponse_GroupsEntry_DoNotUseDefaultTypeInternal _GetPermissionsResponse_GroupsEntry_DoNotUse_default_instance_;
class UpdateAvatarRequest;
struct UpdateAvatarRequestDefaultTypeInternal;
extern UpdateAvatarRequestDefaultTypeInternal _UpdateAvatarRequest_default_instance_;
class UpdateMeRequest;
struct UpdateMeRequestDefaultTypeInternal;
extern UpdateMeRequestDefaultTypeInternal _UpdateMeRequest_default_instance_;
}  // namespace v1
}  // namespace me
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {
namespace me {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class UpdateMeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.me.v1.UpdateMeRequest) */ {
 public:
  inline UpdateMeRequest() : UpdateMeRequest(nullptr) {}
  ~UpdateMeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateMeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateMeRequest(const UpdateMeRequest& from) : UpdateMeRequest(nullptr, from) {}
  inline UpdateMeRequest(UpdateMeRequest&& from) noexcept
      : UpdateMeRequest(nullptr, std::move(from)) {}
  inline UpdateMeRequest& operator=(const UpdateMeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateMeRequest& operator=(UpdateMeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateMeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateMeRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateMeRequest*>(
        &_UpdateMeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(UpdateMeRequest& a, UpdateMeRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateMeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateMeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateMeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateMeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateMeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateMeRequest& from) { UpdateMeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateMeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.me.v1.UpdateMeRequest"; }

 protected:
  explicit UpdateMeRequest(::google::protobuf::Arena* arena);
  UpdateMeRequest(::google::protobuf::Arena* arena, const UpdateMeRequest& from);
  UpdateMeRequest(::google::protobuf::Arena* arena, UpdateMeRequest&& from) noexcept
      : UpdateMeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDisplayNameFieldNumber = 1,
  };
  // string displayName = 1 [json_name = "displayName"];
  void clear_displayname() ;
  const std::string& displayname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_displayname(Arg_&& arg, Args_... args);
  std::string* mutable_displayname();
  PROTOBUF_NODISCARD std::string* release_displayname();
  void set_allocated_displayname(std::string* value);

  private:
  const std::string& _internal_displayname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_displayname(
      const std::string& value);
  std::string* _internal_mutable_displayname();

  public:
  // @@protoc_insertion_point(class_scope:core.me.v1.UpdateMeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateMeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateMeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr displayname_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};
// -------------------------------------------------------------------

class UpdateAvatarRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.me.v1.UpdateAvatarRequest) */ {
 public:
  inline UpdateAvatarRequest() : UpdateAvatarRequest(nullptr) {}
  ~UpdateAvatarRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAvatarRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAvatarRequest(const UpdateAvatarRequest& from) : UpdateAvatarRequest(nullptr, from) {}
  inline UpdateAvatarRequest(UpdateAvatarRequest&& from) noexcept
      : UpdateAvatarRequest(nullptr, std::move(from)) {}
  inline UpdateAvatarRequest& operator=(const UpdateAvatarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAvatarRequest& operator=(UpdateAvatarRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAvatarRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAvatarRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAvatarRequest*>(
        &_UpdateAvatarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(UpdateAvatarRequest& a, UpdateAvatarRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateAvatarRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAvatarRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAvatarRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAvatarRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAvatarRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAvatarRequest& from) { UpdateAvatarRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateAvatarRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.me.v1.UpdateAvatarRequest"; }

 protected:
  explicit UpdateAvatarRequest(::google::protobuf::Arena* arena);
  UpdateAvatarRequest(::google::protobuf::Arena* arena, const UpdateAvatarRequest& from);
  UpdateAvatarRequest(::google::protobuf::Arena* arena, UpdateAvatarRequest&& from) noexcept
      : UpdateAvatarRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBase64ImgFieldNumber = 1,
  };
  // string base64img = 1 [json_name = "base64img"];
  void clear_base64img() ;
  const std::string& base64img() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_base64img(Arg_&& arg, Args_... args);
  std::string* mutable_base64img();
  PROTOBUF_NODISCARD std::string* release_base64img();
  void set_allocated_base64img(std::string* value);

  private:
  const std::string& _internal_base64img() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_base64img(
      const std::string& value);
  std::string* _internal_mutable_base64img();

  public:
  // @@protoc_insertion_point(class_scope:core.me.v1.UpdateAvatarRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateAvatarRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAvatarRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr base64img_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};
// -------------------------------------------------------------------

class GetPermissionsResponse_Group final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.me.v1.GetPermissionsResponse.Group) */ {
 public:
  inline GetPermissionsResponse_Group() : GetPermissionsResponse_Group(nullptr) {}
  ~GetPermissionsResponse_Group() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPermissionsResponse_Group(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetPermissionsResponse_Group(const GetPermissionsResponse_Group& from) : GetPermissionsResponse_Group(nullptr, from) {}
  inline GetPermissionsResponse_Group(GetPermissionsResponse_Group&& from) noexcept
      : GetPermissionsResponse_Group(nullptr, std::move(from)) {}
  inline GetPermissionsResponse_Group& operator=(const GetPermissionsResponse_Group& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPermissionsResponse_Group& operator=(GetPermissionsResponse_Group&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPermissionsResponse_Group& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPermissionsResponse_Group* internal_default_instance() {
    return reinterpret_cast<const GetPermissionsResponse_Group*>(
        &_GetPermissionsResponse_Group_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetPermissionsResponse_Group& a, GetPermissionsResponse_Group& b) { a.Swap(&b); }
  inline void Swap(GetPermissionsResponse_Group* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPermissionsResponse_Group* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPermissionsResponse_Group* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetPermissionsResponse_Group>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPermissionsResponse_Group& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPermissionsResponse_Group& from) { GetPermissionsResponse_Group::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPermissionsResponse_Group* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.me.v1.GetPermissionsResponse.Group"; }

 protected:
  explicit GetPermissionsResponse_Group(::google::protobuf::Arena* arena);
  GetPermissionsResponse_Group(::google::protobuf::Arena* arena, const GetPermissionsResponse_Group& from);
  GetPermissionsResponse_Group(::google::protobuf::Arena* arena, GetPermissionsResponse_Group&& from) noexcept
      : GetPermissionsResponse_Group(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAbilitiesFieldNumber = 1,
  };
  // repeated string abilities = 1 [json_name = "abilities"];
  int abilities_size() const;
  private:
  int _internal_abilities_size() const;

  public:
  void clear_abilities() ;
  const std::string& abilities(int index) const;
  std::string* mutable_abilities(int index);
  void set_abilities(int index, const std::string& value);
  void set_abilities(int index, std::string&& value);
  void set_abilities(int index, const char* value);
  void set_abilities(int index, const char* value, std::size_t size);
  void set_abilities(int index, absl::string_view value);
  std::string* add_abilities();
  void add_abilities(const std::string& value);
  void add_abilities(std::string&& value);
  void add_abilities(const char* value);
  void add_abilities(const char* value, std::size_t size);
  void add_abilities(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& abilities() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_abilities();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_abilities() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_abilities();

  public:
  // @@protoc_insertion_point(class_scope:core.me.v1.GetPermissionsResponse.Group)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetPermissionsResponse_Group_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetPermissionsResponse_Group& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> abilities_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};
// -------------------------------------------------------------------

class CheckPermissionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.me.v1.CheckPermissionResponse) */ {
 public:
  inline CheckPermissionResponse() : CheckPermissionResponse(nullptr) {}
  ~CheckPermissionResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckPermissionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CheckPermissionResponse(const CheckPermissionResponse& from) : CheckPermissionResponse(nullptr, from) {}
  inline CheckPermissionResponse(CheckPermissionResponse&& from) noexcept
      : CheckPermissionResponse(nullptr, std::move(from)) {}
  inline CheckPermissionResponse& operator=(const CheckPermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckPermissionResponse& operator=(CheckPermissionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckPermissionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckPermissionResponse* internal_default_instance() {
    return reinterpret_cast<const CheckPermissionResponse*>(
        &_CheckPermissionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CheckPermissionResponse& a, CheckPermissionResponse& b) { a.Swap(&b); }
  inline void Swap(CheckPermissionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckPermissionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckPermissionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CheckPermissionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckPermissionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckPermissionResponse& from) { CheckPermissionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CheckPermissionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.me.v1.CheckPermissionResponse"; }

 protected:
  explicit CheckPermissionResponse(::google::protobuf::Arena* arena);
  CheckPermissionResponse(::google::protobuf::Arena* arena, const CheckPermissionResponse& from);
  CheckPermissionResponse(::google::protobuf::Arena* arena, CheckPermissionResponse&& from) noexcept
      : CheckPermissionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllowedFieldNumber = 1,
  };
  // bool allowed = 1 [json_name = "allowed"];
  void clear_allowed() ;
  bool allowed() const;
  void set_allowed(bool value);

  private:
  bool _internal_allowed() const;
  void _internal_set_allowed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:core.me.v1.CheckPermissionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CheckPermissionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CheckPermissionResponse& from_msg);
    bool allowed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};
// -------------------------------------------------------------------

class CheckPermissionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.me.v1.CheckPermissionRequest) */ {
 public:
  inline CheckPermissionRequest() : CheckPermissionRequest(nullptr) {}
  ~CheckPermissionRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckPermissionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CheckPermissionRequest(const CheckPermissionRequest& from) : CheckPermissionRequest(nullptr, from) {}
  inline CheckPermissionRequest(CheckPermissionRequest&& from) noexcept
      : CheckPermissionRequest(nullptr, std::move(from)) {}
  inline CheckPermissionRequest& operator=(const CheckPermissionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckPermissionRequest& operator=(CheckPermissionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckPermissionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckPermissionRequest* internal_default_instance() {
    return reinterpret_cast<const CheckPermissionRequest*>(
        &_CheckPermissionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CheckPermissionRequest& a, CheckPermissionRequest& b) { a.Swap(&b); }
  inline void Swap(CheckPermissionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckPermissionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckPermissionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CheckPermissionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckPermissionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckPermissionRequest& from) { CheckPermissionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CheckPermissionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.me.v1.CheckPermissionRequest"; }

 protected:
  explicit CheckPermissionRequest(::google::protobuf::Arena* arena);
  CheckPermissionRequest(::google::protobuf::Arena* arena, const CheckPermissionRequest& from);
  CheckPermissionRequest(::google::protobuf::Arena* arena, CheckPermissionRequest&& from) noexcept
      : CheckPermissionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupFieldNumber = 1,
    kAbilityFieldNumber = 2,
  };
  // string group = 1 [json_name = "group"];
  void clear_group() ;
  const std::string& group() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group(Arg_&& arg, Args_... args);
  std::string* mutable_group();
  PROTOBUF_NODISCARD std::string* release_group();
  void set_allocated_group(std::string* value);

  private:
  const std::string& _internal_group() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group(
      const std::string& value);
  std::string* _internal_mutable_group();

  public:
  // string ability = 2 [json_name = "ability"];
  void clear_ability() ;
  const std::string& ability() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ability(Arg_&& arg, Args_... args);
  std::string* mutable_ability();
  PROTOBUF_NODISCARD std::string* release_ability();
  void set_allocated_ability(std::string* value);

  private:
  const std::string& _internal_ability() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ability(
      const std::string& value);
  std::string* _internal_mutable_ability();

  public:
  // @@protoc_insertion_point(class_scope:core.me.v1.CheckPermissionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CheckPermissionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CheckPermissionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr group_;
    ::google::protobuf::internal::ArenaStringPtr ability_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};
// -------------------------------------------------------------------

class GetPermissionsResponse_GroupsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetPermissionsResponse_GroupsEntry_DoNotUse, std::string, ::core::me::v1::GetPermissionsResponse_Group,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetPermissionsResponse_GroupsEntry_DoNotUse, std::string, ::core::me::v1::GetPermissionsResponse_Group,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetPermissionsResponse_GroupsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPermissionsResponse_GroupsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetPermissionsResponse_GroupsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetPermissionsResponse_GroupsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetPermissionsResponse_GroupsEntry_DoNotUse*>(
        &_GetPermissionsResponse_GroupsEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};
// -------------------------------------------------------------------

class GetPermissionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.me.v1.GetPermissionsResponse) */ {
 public:
  inline GetPermissionsResponse() : GetPermissionsResponse(nullptr) {}
  ~GetPermissionsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPermissionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetPermissionsResponse(const GetPermissionsResponse& from) : GetPermissionsResponse(nullptr, from) {}
  inline GetPermissionsResponse(GetPermissionsResponse&& from) noexcept
      : GetPermissionsResponse(nullptr, std::move(from)) {}
  inline GetPermissionsResponse& operator=(const GetPermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPermissionsResponse& operator=(GetPermissionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPermissionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const GetPermissionsResponse*>(
        &_GetPermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetPermissionsResponse& a, GetPermissionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetPermissionsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPermissionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPermissionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetPermissionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPermissionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetPermissionsResponse& from) { GetPermissionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPermissionsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.me.v1.GetPermissionsResponse"; }

 protected:
  explicit GetPermissionsResponse(::google::protobuf::Arena* arena);
  GetPermissionsResponse(::google::protobuf::Arena* arena, const GetPermissionsResponse& from);
  GetPermissionsResponse(::google::protobuf::Arena* arena, GetPermissionsResponse&& from) noexcept
      : GetPermissionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Group = GetPermissionsResponse_Group;

  // accessors -------------------------------------------------------
  enum : int {
    kGroupsFieldNumber = 1,
    kEnforceFieldNumber = 2,
  };
  // map<string, .core.me.v1.GetPermissionsResponse.Group> groups = 1 [json_name = "groups"];
  int groups_size() const;
  private:
  int _internal_groups_size() const;

  public:
  void clear_groups() ;
  const ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>& groups() const;
  ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>* mutable_groups();

  private:
  const ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>& _internal_groups() const;
  ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>* _internal_mutable_groups();

  public:
  // optional bool Enforce = 2 [json_name = "Enforce"];
  bool has_enforce() const;
  void clear_enforce() ;
  bool enforce() const;
  void set_enforce(bool value);

  private:
  bool _internal_enforce() const;
  void _internal_set_enforce(bool value);

  public:
  // @@protoc_insertion_point(class_scope:core.me.v1.GetPermissionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetPermissionsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetPermissionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<GetPermissionsResponse_GroupsEntry_DoNotUse, std::string, ::core::me::v1::GetPermissionsResponse_Group,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        groups_;
    bool enforce_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fme_2fv1_2fme_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CheckPermissionRequest

// string group = 1 [json_name = "group"];
inline void CheckPermissionRequest::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.ClearToEmpty();
}
inline const std::string& CheckPermissionRequest::group() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.me.v1.CheckPermissionRequest.group)
  return _internal_group();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckPermissionRequest::set_group(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.me.v1.CheckPermissionRequest.group)
}
inline std::string* CheckPermissionRequest::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:core.me.v1.CheckPermissionRequest.group)
  return _s;
}
inline const std::string& CheckPermissionRequest::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_.Get();
}
inline void CheckPermissionRequest::_internal_set_group(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.Set(value, GetArena());
}
inline std::string* CheckPermissionRequest::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_.Mutable( GetArena());
}
inline std::string* CheckPermissionRequest::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.me.v1.CheckPermissionRequest.group)
  return _impl_.group_.Release();
}
inline void CheckPermissionRequest::set_allocated_group(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.group_.IsDefault()) {
          _impl_.group_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.me.v1.CheckPermissionRequest.group)
}

// string ability = 2 [json_name = "ability"];
inline void CheckPermissionRequest::clear_ability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_.ClearToEmpty();
}
inline const std::string& CheckPermissionRequest::ability() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.me.v1.CheckPermissionRequest.ability)
  return _internal_ability();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckPermissionRequest::set_ability(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.me.v1.CheckPermissionRequest.ability)
}
inline std::string* CheckPermissionRequest::mutable_ability() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ability();
  // @@protoc_insertion_point(field_mutable:core.me.v1.CheckPermissionRequest.ability)
  return _s;
}
inline const std::string& CheckPermissionRequest::_internal_ability() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ability_.Get();
}
inline void CheckPermissionRequest::_internal_set_ability(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_.Set(value, GetArena());
}
inline std::string* CheckPermissionRequest::_internal_mutable_ability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ability_.Mutable( GetArena());
}
inline std::string* CheckPermissionRequest::release_ability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.me.v1.CheckPermissionRequest.ability)
  return _impl_.ability_.Release();
}
inline void CheckPermissionRequest::set_allocated_ability(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ability_.IsDefault()) {
          _impl_.ability_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.me.v1.CheckPermissionRequest.ability)
}

// -------------------------------------------------------------------

// CheckPermissionResponse

// bool allowed = 1 [json_name = "allowed"];
inline void CheckPermissionResponse::clear_allowed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allowed_ = false;
}
inline bool CheckPermissionResponse::allowed() const {
  // @@protoc_insertion_point(field_get:core.me.v1.CheckPermissionResponse.allowed)
  return _internal_allowed();
}
inline void CheckPermissionResponse::set_allowed(bool value) {
  _internal_set_allowed(value);
  // @@protoc_insertion_point(field_set:core.me.v1.CheckPermissionResponse.allowed)
}
inline bool CheckPermissionResponse::_internal_allowed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allowed_;
}
inline void CheckPermissionResponse::_internal_set_allowed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allowed_ = value;
}

// -------------------------------------------------------------------

// GetPermissionsResponse_Group

// repeated string abilities = 1 [json_name = "abilities"];
inline int GetPermissionsResponse_Group::_internal_abilities_size() const {
  return _internal_abilities().size();
}
inline int GetPermissionsResponse_Group::abilities_size() const {
  return _internal_abilities_size();
}
inline void GetPermissionsResponse_Group::clear_abilities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.abilities_.Clear();
}
inline std::string* GetPermissionsResponse_Group::add_abilities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_abilities()->Add();
  // @@protoc_insertion_point(field_add_mutable:core.me.v1.GetPermissionsResponse.Group.abilities)
  return _s;
}
inline const std::string& GetPermissionsResponse_Group::abilities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.me.v1.GetPermissionsResponse.Group.abilities)
  return _internal_abilities().Get(index);
}
inline std::string* GetPermissionsResponse_Group::mutable_abilities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:core.me.v1.GetPermissionsResponse.Group.abilities)
  return _internal_mutable_abilities()->Mutable(index);
}
inline void GetPermissionsResponse_Group::set_abilities(int index, const std::string& value) {
  _internal_mutable_abilities()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::set_abilities(int index, std::string&& value) {
  _internal_mutable_abilities()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::set_abilities(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_abilities()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::set_abilities(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_abilities()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::set_abilities(int index, absl::string_view value) {
  _internal_mutable_abilities()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::add_abilities(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_abilities()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::add_abilities(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_abilities()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::add_abilities(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_abilities()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::add_abilities(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_abilities()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline void GetPermissionsResponse_Group::add_abilities(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_abilities()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:core.me.v1.GetPermissionsResponse.Group.abilities)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetPermissionsResponse_Group::abilities() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:core.me.v1.GetPermissionsResponse.Group.abilities)
  return _internal_abilities();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetPermissionsResponse_Group::mutable_abilities() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:core.me.v1.GetPermissionsResponse.Group.abilities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_abilities();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetPermissionsResponse_Group::_internal_abilities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.abilities_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetPermissionsResponse_Group::_internal_mutable_abilities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.abilities_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetPermissionsResponse

// map<string, .core.me.v1.GetPermissionsResponse.Group> groups = 1 [json_name = "groups"];
inline int GetPermissionsResponse::_internal_groups_size() const {
  return _internal_groups().size();
}
inline int GetPermissionsResponse::groups_size() const {
  return _internal_groups_size();
}
inline void GetPermissionsResponse::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>& GetPermissionsResponse::_internal_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groups_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>& GetPermissionsResponse::groups() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:core.me.v1.GetPermissionsResponse.groups)
  return _internal_groups();
}
inline ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>* GetPermissionsResponse::_internal_mutable_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.groups_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::core::me::v1::GetPermissionsResponse_Group>* GetPermissionsResponse::mutable_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:core.me.v1.GetPermissionsResponse.groups)
  return _internal_mutable_groups();
}

// optional bool Enforce = 2 [json_name = "Enforce"];
inline bool GetPermissionsResponse::has_enforce() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GetPermissionsResponse::clear_enforce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enforce_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool GetPermissionsResponse::enforce() const {
  // @@protoc_insertion_point(field_get:core.me.v1.GetPermissionsResponse.Enforce)
  return _internal_enforce();
}
inline void GetPermissionsResponse::set_enforce(bool value) {
  _internal_set_enforce(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:core.me.v1.GetPermissionsResponse.Enforce)
}
inline bool GetPermissionsResponse::_internal_enforce() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enforce_;
}
inline void GetPermissionsResponse::_internal_set_enforce(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enforce_ = value;
}

// -------------------------------------------------------------------

// UpdateMeRequest

// string displayName = 1 [json_name = "displayName"];
inline void UpdateMeRequest::clear_displayname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.displayname_.ClearToEmpty();
}
inline const std::string& UpdateMeRequest::displayname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.me.v1.UpdateMeRequest.displayName)
  return _internal_displayname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateMeRequest::set_displayname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.displayname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.me.v1.UpdateMeRequest.displayName)
}
inline std::string* UpdateMeRequest::mutable_displayname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_displayname();
  // @@protoc_insertion_point(field_mutable:core.me.v1.UpdateMeRequest.displayName)
  return _s;
}
inline const std::string& UpdateMeRequest::_internal_displayname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.displayname_.Get();
}
inline void UpdateMeRequest::_internal_set_displayname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.displayname_.Set(value, GetArena());
}
inline std::string* UpdateMeRequest::_internal_mutable_displayname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.displayname_.Mutable( GetArena());
}
inline std::string* UpdateMeRequest::release_displayname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.me.v1.UpdateMeRequest.displayName)
  return _impl_.displayname_.Release();
}
inline void UpdateMeRequest::set_allocated_displayname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.displayname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.displayname_.IsDefault()) {
          _impl_.displayname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.me.v1.UpdateMeRequest.displayName)
}

// -------------------------------------------------------------------

// UpdateAvatarRequest

// string base64img = 1 [json_name = "base64img"];
inline void UpdateAvatarRequest::clear_base64img() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base64img_.ClearToEmpty();
}
inline const std::string& UpdateAvatarRequest::base64img() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.me.v1.UpdateAvatarRequest.base64img)
  return _internal_base64img();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateAvatarRequest::set_base64img(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base64img_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.me.v1.UpdateAvatarRequest.base64img)
}
inline std::string* UpdateAvatarRequest::mutable_base64img() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_base64img();
  // @@protoc_insertion_point(field_mutable:core.me.v1.UpdateAvatarRequest.base64img)
  return _s;
}
inline const std::string& UpdateAvatarRequest::_internal_base64img() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base64img_.Get();
}
inline void UpdateAvatarRequest::_internal_set_base64img(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base64img_.Set(value, GetArena());
}
inline std::string* UpdateAvatarRequest::_internal_mutable_base64img() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.base64img_.Mutable( GetArena());
}
inline std::string* UpdateAvatarRequest::release_base64img() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.me.v1.UpdateAvatarRequest.base64img)
  return _impl_.base64img_.Release();
}
inline void UpdateAvatarRequest::set_allocated_base64img(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base64img_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.base64img_.IsDefault()) {
          _impl_.base64img_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.me.v1.UpdateAvatarRequest.base64img)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace me
}  // namespace core


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_core_2fme_2fv1_2fme_2eproto_2epb_2eh
