// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core/v1/leave_request_type.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2fleave_5frequest_5ftype_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2fleave_5frequest_5ftype_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "api/v1/base.pb.h"
#include "api/v1/permissions.pb.h"
#include "buf/validate/validate.pb.h"
#include "google/protobuf/empty.pb.h"
#include "api/v1/generators.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_core_2fv1_2fleave_5frequest_5ftype_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2fv1_2fleave_5frequest_5ftype_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_core_2fv1_2fleave_5frequest_5ftype_2eproto;
namespace core {
namespace v1 {
class LeaveRequestType;
struct LeaveRequestTypeDefaultTypeInternal;
extern LeaveRequestTypeDefaultTypeInternal _LeaveRequestType_default_instance_;
class ListLeaveRequestTypeResponse;
struct ListLeaveRequestTypeResponseDefaultTypeInternal;
extern ListLeaveRequestTypeResponseDefaultTypeInternal _ListLeaveRequestTypeResponse_default_instance_;
class SaveLeaveRequestTypeRequest;
struct SaveLeaveRequestTypeRequestDefaultTypeInternal;
extern SaveLeaveRequestTypeRequestDefaultTypeInternal _SaveLeaveRequestTypeRequest_default_instance_;
}  // namespace v1
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SaveLeaveRequestTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.SaveLeaveRequestTypeRequest) */ {
 public:
  inline SaveLeaveRequestTypeRequest() : SaveLeaveRequestTypeRequest(nullptr) {}
  ~SaveLeaveRequestTypeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveLeaveRequestTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveLeaveRequestTypeRequest(const SaveLeaveRequestTypeRequest& from) : SaveLeaveRequestTypeRequest(nullptr, from) {}
  inline SaveLeaveRequestTypeRequest(SaveLeaveRequestTypeRequest&& from) noexcept
      : SaveLeaveRequestTypeRequest(nullptr, std::move(from)) {}
  inline SaveLeaveRequestTypeRequest& operator=(const SaveLeaveRequestTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveLeaveRequestTypeRequest& operator=(SaveLeaveRequestTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveLeaveRequestTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveLeaveRequestTypeRequest* internal_default_instance() {
    return reinterpret_cast<const SaveLeaveRequestTypeRequest*>(
        &_SaveLeaveRequestTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SaveLeaveRequestTypeRequest& a, SaveLeaveRequestTypeRequest& b) { a.Swap(&b); }
  inline void Swap(SaveLeaveRequestTypeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveLeaveRequestTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveLeaveRequestTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SaveLeaveRequestTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveLeaveRequestTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveLeaveRequestTypeRequest& from) { SaveLeaveRequestTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SaveLeaveRequestTypeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.SaveLeaveRequestTypeRequest"; }

 protected:
  explicit SaveLeaveRequestTypeRequest(::google::protobuf::Arena* arena);
  SaveLeaveRequestTypeRequest(::google::protobuf::Arena* arena, const SaveLeaveRequestTypeRequest& from);
  SaveLeaveRequestTypeRequest(::google::protobuf::Arena* arena, SaveLeaveRequestTypeRequest&& from) noexcept
      : SaveLeaveRequestTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kDayLeaveBonusFieldNumber = 4,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description"];
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // optional int32 dayLeaveBonus = 4 [json_name = "dayLeaveBonus"];
  bool has_dayleavebonus() const;
  void clear_dayleavebonus() ;
  ::int32_t dayleavebonus() const;
  void set_dayleavebonus(::int32_t value);

  private:
  ::int32_t _internal_dayleavebonus() const;
  void _internal_set_dayleavebonus(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.SaveLeaveRequestTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SaveLeaveRequestTypeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveLeaveRequestTypeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::int32_t dayleavebonus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2fleave_5frequest_5ftype_2eproto;
};
// -------------------------------------------------------------------

class LeaveRequestType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.LeaveRequestType) */ {
 public:
  inline LeaveRequestType() : LeaveRequestType(nullptr) {}
  ~LeaveRequestType() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveRequestType(
      ::google::protobuf::internal::ConstantInitialized);

  inline LeaveRequestType(const LeaveRequestType& from) : LeaveRequestType(nullptr, from) {}
  inline LeaveRequestType(LeaveRequestType&& from) noexcept
      : LeaveRequestType(nullptr, std::move(from)) {}
  inline LeaveRequestType& operator=(const LeaveRequestType& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveRequestType& operator=(LeaveRequestType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveRequestType& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveRequestType* internal_default_instance() {
    return reinterpret_cast<const LeaveRequestType*>(
        &_LeaveRequestType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LeaveRequestType& a, LeaveRequestType& b) { a.Swap(&b); }
  inline void Swap(LeaveRequestType* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveRequestType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveRequestType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LeaveRequestType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaveRequestType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaveRequestType& from) { LeaveRequestType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaveRequestType* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.LeaveRequestType"; }

 protected:
  explicit LeaveRequestType(::google::protobuf::Arena* arena);
  LeaveRequestType(::google::protobuf::Arena* arena, const LeaveRequestType& from);
  LeaveRequestType(::google::protobuf::Arena* arena, LeaveRequestType&& from) noexcept
      : LeaveRequestType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCreatedByFieldNumber = 101,
    kCreatedByLabelFieldNumber = 102,
    kUpdatedByFieldNumber = 104,
    kUpdatedByLabelFieldNumber = 105,
    kDeletedByFieldNumber = 107,
    kDeletedByLabelFieldNumber = 108,
    kCreatedAtFieldNumber = 100,
    kUpdatedAtFieldNumber = 103,
    kDeletedAtFieldNumber = 106,
    kDayLeaveBonusFieldNumber = 4,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description"];
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string createdBy = 101 [json_name = "createdBy"];
  void clear_createdby() ;
  const std::string& createdby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdby(Arg_&& arg, Args_... args);
  std::string* mutable_createdby();
  PROTOBUF_NODISCARD std::string* release_createdby();
  void set_allocated_createdby(std::string* value);

  private:
  const std::string& _internal_createdby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdby(
      const std::string& value);
  std::string* _internal_mutable_createdby();

  public:
  // optional string createdByLabel = 102 [json_name = "createdByLabel"];
  bool has_createdbylabel() const;
  void clear_createdbylabel() ;
  const std::string& createdbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_createdbylabel();
  PROTOBUF_NODISCARD std::string* release_createdbylabel();
  void set_allocated_createdbylabel(std::string* value);

  private:
  const std::string& _internal_createdbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdbylabel(
      const std::string& value);
  std::string* _internal_mutable_createdbylabel();

  public:
  // optional string updatedBy = 104 [json_name = "updatedBy"];
  bool has_updatedby() const;
  void clear_updatedby() ;
  const std::string& updatedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedby(Arg_&& arg, Args_... args);
  std::string* mutable_updatedby();
  PROTOBUF_NODISCARD std::string* release_updatedby();
  void set_allocated_updatedby(std::string* value);

  private:
  const std::string& _internal_updatedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedby(
      const std::string& value);
  std::string* _internal_mutable_updatedby();

  public:
  // optional string updatedByLabel = 105 [json_name = "updatedByLabel"];
  bool has_updatedbylabel() const;
  void clear_updatedbylabel() ;
  const std::string& updatedbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_updatedbylabel();
  PROTOBUF_NODISCARD std::string* release_updatedbylabel();
  void set_allocated_updatedbylabel(std::string* value);

  private:
  const std::string& _internal_updatedbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedbylabel(
      const std::string& value);
  std::string* _internal_mutable_updatedbylabel();

  public:
  // optional string deletedBy = 107 [json_name = "deletedBy"];
  bool has_deletedby() const;
  void clear_deletedby() ;
  const std::string& deletedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedby(Arg_&& arg, Args_... args);
  std::string* mutable_deletedby();
  PROTOBUF_NODISCARD std::string* release_deletedby();
  void set_allocated_deletedby(std::string* value);

  private:
  const std::string& _internal_deletedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedby(
      const std::string& value);
  std::string* _internal_mutable_deletedby();

  public:
  // optional string deletedByLabel = 108 [json_name = "deletedByLabel"];
  bool has_deletedbylabel() const;
  void clear_deletedbylabel() ;
  const std::string& deletedbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_deletedbylabel();
  PROTOBUF_NODISCARD std::string* release_deletedbylabel();
  void set_allocated_deletedbylabel(std::string* value);

  private:
  const std::string& _internal_deletedbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedbylabel(
      const std::string& value);
  std::string* _internal_mutable_deletedbylabel();

  public:
  // int64 createdAt = 100 [json_name = "createdAt"];
  void clear_createdat() ;
  ::int64_t createdat() const;
  void set_createdat(::int64_t value);

  private:
  ::int64_t _internal_createdat() const;
  void _internal_set_createdat(::int64_t value);

  public:
  // optional int64 updatedAt = 103 [json_name = "updatedAt"];
  bool has_updatedat() const;
  void clear_updatedat() ;
  ::int64_t updatedat() const;
  void set_updatedat(::int64_t value);

  private:
  ::int64_t _internal_updatedat() const;
  void _internal_set_updatedat(::int64_t value);

  public:
  // optional int64 deletedAt = 106 [json_name = "deletedAt"];
  bool has_deletedat() const;
  void clear_deletedat() ;
  ::int64_t deletedat() const;
  void set_deletedat(::int64_t value);

  private:
  ::int64_t _internal_deletedat() const;
  void _internal_set_deletedat(::int64_t value);

  public:
  // optional int32 dayLeaveBonus = 4 [json_name = "dayLeaveBonus"];
  bool has_dayleavebonus() const;
  void clear_dayleavebonus() ;
  ::int32_t dayleavebonus() const;
  void set_dayleavebonus(::int32_t value);

  private:
  ::int32_t _internal_dayleavebonus() const;
  void _internal_set_dayleavebonus(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.LeaveRequestType)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 0,
      127, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LeaveRequestType_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LeaveRequestType& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr createdby_;
    ::google::protobuf::internal::ArenaStringPtr createdbylabel_;
    ::google::protobuf::internal::ArenaStringPtr updatedby_;
    ::google::protobuf::internal::ArenaStringPtr updatedbylabel_;
    ::google::protobuf::internal::ArenaStringPtr deletedby_;
    ::google::protobuf::internal::ArenaStringPtr deletedbylabel_;
    ::int64_t createdat_;
    ::int64_t updatedat_;
    ::int64_t deletedat_;
    ::int32_t dayleavebonus_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2fleave_5frequest_5ftype_2eproto;
};
// -------------------------------------------------------------------

class ListLeaveRequestTypeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.ListLeaveRequestTypeResponse) */ {
 public:
  inline ListLeaveRequestTypeResponse() : ListLeaveRequestTypeResponse(nullptr) {}
  ~ListLeaveRequestTypeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListLeaveRequestTypeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListLeaveRequestTypeResponse(const ListLeaveRequestTypeResponse& from) : ListLeaveRequestTypeResponse(nullptr, from) {}
  inline ListLeaveRequestTypeResponse(ListLeaveRequestTypeResponse&& from) noexcept
      : ListLeaveRequestTypeResponse(nullptr, std::move(from)) {}
  inline ListLeaveRequestTypeResponse& operator=(const ListLeaveRequestTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListLeaveRequestTypeResponse& operator=(ListLeaveRequestTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListLeaveRequestTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListLeaveRequestTypeResponse* internal_default_instance() {
    return reinterpret_cast<const ListLeaveRequestTypeResponse*>(
        &_ListLeaveRequestTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListLeaveRequestTypeResponse& a, ListLeaveRequestTypeResponse& b) { a.Swap(&b); }
  inline void Swap(ListLeaveRequestTypeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListLeaveRequestTypeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListLeaveRequestTypeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListLeaveRequestTypeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListLeaveRequestTypeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListLeaveRequestTypeResponse& from) { ListLeaveRequestTypeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListLeaveRequestTypeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.ListLeaveRequestTypeResponse"; }

 protected:
  explicit ListLeaveRequestTypeResponse(::google::protobuf::Arena* arena);
  ListLeaveRequestTypeResponse(::google::protobuf::Arena* arena, const ListLeaveRequestTypeResponse& from);
  ListLeaveRequestTypeResponse(::google::protobuf::Arena* arena, ListLeaveRequestTypeResponse&& from) noexcept
      : ListLeaveRequestTypeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .core.v1.LeaveRequestType items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::core::v1::LeaveRequestType* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>* _internal_mutable_items();
  public:
  const ::core::v1::LeaveRequestType& items(int index) const;
  ::core::v1::LeaveRequestType* add_items();
  const ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>& items() const;
  // .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::PaginationResponse& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::PaginationResponse* release_pagination();
  ::api::v1::PaginationResponse* mutable_pagination();
  void set_allocated_pagination(::api::v1::PaginationResponse* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value);
  ::api::v1::PaginationResponse* unsafe_arena_release_pagination();

  private:
  const ::api::v1::PaginationResponse& _internal_pagination() const;
  ::api::v1::PaginationResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:core.v1.ListLeaveRequestTypeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListLeaveRequestTypeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListLeaveRequestTypeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::core::v1::LeaveRequestType > items_;
    ::api::v1::PaginationResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2fleave_5frequest_5ftype_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LeaveRequestType

// string id = 1 [json_name = "id"];
inline void LeaveRequestType::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& LeaveRequestType::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.id)
}
inline std::string* LeaveRequestType::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.id)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void LeaveRequestType::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.id)
  return _impl_.id_.Release();
}
inline void LeaveRequestType::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.id)
}

// string name = 2 [json_name = "name"];
inline void LeaveRequestType::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& LeaveRequestType::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.name)
}
inline std::string* LeaveRequestType::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.name)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void LeaveRequestType::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.name)
  return _impl_.name_.Release();
}
inline void LeaveRequestType::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.name)
}

// string description = 3 [json_name = "description"];
inline void LeaveRequestType::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& LeaveRequestType::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.description)
}
inline std::string* LeaveRequestType::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.description)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void LeaveRequestType::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.description)
  return _impl_.description_.Release();
}
inline void LeaveRequestType::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.description)
}

// optional int32 dayLeaveBonus = 4 [json_name = "dayLeaveBonus"];
inline bool LeaveRequestType::has_dayleavebonus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void LeaveRequestType::clear_dayleavebonus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayleavebonus_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t LeaveRequestType::dayleavebonus() const {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.dayLeaveBonus)
  return _internal_dayleavebonus();
}
inline void LeaveRequestType::set_dayleavebonus(::int32_t value) {
  _internal_set_dayleavebonus(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.dayLeaveBonus)
}
inline ::int32_t LeaveRequestType::_internal_dayleavebonus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dayleavebonus_;
}
inline void LeaveRequestType::_internal_set_dayleavebonus(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayleavebonus_ = value;
}

// int64 createdAt = 100 [json_name = "createdAt"];
inline void LeaveRequestType::clear_createdat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = ::int64_t{0};
}
inline ::int64_t LeaveRequestType::createdat() const {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.createdAt)
  return _internal_createdat();
}
inline void LeaveRequestType::set_createdat(::int64_t value) {
  _internal_set_createdat(value);
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.createdAt)
}
inline ::int64_t LeaveRequestType::_internal_createdat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdat_;
}
inline void LeaveRequestType::_internal_set_createdat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = value;
}

// string createdBy = 101 [json_name = "createdBy"];
inline void LeaveRequestType::clear_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.ClearToEmpty();
}
inline const std::string& LeaveRequestType::createdby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.createdBy)
  return _internal_createdby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_createdby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.createdBy)
}
inline std::string* LeaveRequestType::mutable_createdby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdby();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.createdBy)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_createdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdby_.Get();
}
inline void LeaveRequestType::_internal_set_createdby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.createdby_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.createdBy)
  return _impl_.createdby_.Release();
}
inline void LeaveRequestType::set_allocated_createdby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdby_.IsDefault()) {
          _impl_.createdby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.createdBy)
}

// optional string createdByLabel = 102 [json_name = "createdByLabel"];
inline bool LeaveRequestType::has_createdbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void LeaveRequestType::clear_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LeaveRequestType::createdbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.createdByLabel)
  return _internal_createdbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_createdbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.createdbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.createdByLabel)
}
inline std::string* LeaveRequestType::mutable_createdbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.createdByLabel)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_createdbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdbylabel_.Get();
}
inline void LeaveRequestType::_internal_set_createdbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.createdbylabel_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.createdbylabel_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.createdByLabel)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.createdbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.createdbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void LeaveRequestType::set_allocated_createdbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.createdbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdbylabel_.IsDefault()) {
          _impl_.createdbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.createdByLabel)
}

// optional int64 updatedAt = 103 [json_name = "updatedAt"];
inline bool LeaveRequestType::has_updatedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void LeaveRequestType::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t LeaveRequestType::updatedat() const {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.updatedAt)
  return _internal_updatedat();
}
inline void LeaveRequestType::set_updatedat(::int64_t value) {
  _internal_set_updatedat(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.updatedAt)
}
inline ::int64_t LeaveRequestType::_internal_updatedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedat_;
}
inline void LeaveRequestType::_internal_set_updatedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = value;
}

// optional string updatedBy = 104 [json_name = "updatedBy"];
inline bool LeaveRequestType::has_updatedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void LeaveRequestType::clear_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LeaveRequestType::updatedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.updatedBy)
  return _internal_updatedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_updatedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updatedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.updatedBy)
}
inline std::string* LeaveRequestType::mutable_updatedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedby();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.updatedBy)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_updatedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedby_.Get();
}
inline void LeaveRequestType::_internal_set_updatedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.updatedby_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.updatedby_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.updatedBy)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.updatedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void LeaveRequestType::set_allocated_updatedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.updatedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedby_.IsDefault()) {
          _impl_.updatedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.updatedBy)
}

// optional string updatedByLabel = 105 [json_name = "updatedByLabel"];
inline bool LeaveRequestType::has_updatedbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void LeaveRequestType::clear_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& LeaveRequestType::updatedbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.updatedByLabel)
  return _internal_updatedbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_updatedbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updatedbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.updatedByLabel)
}
inline std::string* LeaveRequestType::mutable_updatedbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.updatedByLabel)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_updatedbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedbylabel_.Get();
}
inline void LeaveRequestType::_internal_set_updatedbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updatedbylabel_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.updatedbylabel_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.updatedByLabel)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.updatedbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void LeaveRequestType::set_allocated_updatedbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.updatedbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedbylabel_.IsDefault()) {
          _impl_.updatedbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.updatedByLabel)
}

// optional int64 deletedAt = 106 [json_name = "deletedAt"];
inline bool LeaveRequestType::has_deletedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void LeaveRequestType::clear_deletedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t LeaveRequestType::deletedat() const {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.deletedAt)
  return _internal_deletedat();
}
inline void LeaveRequestType::set_deletedat(::int64_t value) {
  _internal_set_deletedat(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.deletedAt)
}
inline ::int64_t LeaveRequestType::_internal_deletedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedat_;
}
inline void LeaveRequestType::_internal_set_deletedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = value;
}

// optional string deletedBy = 107 [json_name = "deletedBy"];
inline bool LeaveRequestType::has_deletedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void LeaveRequestType::clear_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& LeaveRequestType::deletedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.deletedBy)
  return _internal_deletedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_deletedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.deletedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.deletedBy)
}
inline std::string* LeaveRequestType::mutable_deletedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedby();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.deletedBy)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_deletedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedby_.Get();
}
inline void LeaveRequestType::_internal_set_deletedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.deletedby_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.deletedby_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.deletedBy)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.deletedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void LeaveRequestType::set_allocated_deletedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.deletedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedby_.IsDefault()) {
          _impl_.deletedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.deletedBy)
}

// optional string deletedByLabel = 108 [json_name = "deletedByLabel"];
inline bool LeaveRequestType::has_deletedbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void LeaveRequestType::clear_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& LeaveRequestType::deletedbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.LeaveRequestType.deletedByLabel)
  return _internal_deletedbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveRequestType::set_deletedbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.deletedbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.LeaveRequestType.deletedByLabel)
}
inline std::string* LeaveRequestType::mutable_deletedbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.LeaveRequestType.deletedByLabel)
  return _s;
}
inline const std::string& LeaveRequestType::_internal_deletedbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedbylabel_.Get();
}
inline void LeaveRequestType::_internal_set_deletedbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.deletedbylabel_.Set(value, GetArena());
}
inline std::string* LeaveRequestType::_internal_mutable_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.deletedbylabel_.Mutable( GetArena());
}
inline std::string* LeaveRequestType::release_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.LeaveRequestType.deletedByLabel)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.deletedbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void LeaveRequestType::set_allocated_deletedbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.deletedbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedbylabel_.IsDefault()) {
          _impl_.deletedbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.LeaveRequestType.deletedByLabel)
}

// -------------------------------------------------------------------

// SaveLeaveRequestTypeRequest

// string id = 1 [json_name = "id"];
inline void SaveLeaveRequestTypeRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SaveLeaveRequestTypeRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveLeaveRequestTypeRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveLeaveRequestTypeRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveLeaveRequestTypeRequest.id)
}
inline std::string* SaveLeaveRequestTypeRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveLeaveRequestTypeRequest.id)
  return _s;
}
inline const std::string& SaveLeaveRequestTypeRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SaveLeaveRequestTypeRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SaveLeaveRequestTypeRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SaveLeaveRequestTypeRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveLeaveRequestTypeRequest.id)
  return _impl_.id_.Release();
}
inline void SaveLeaveRequestTypeRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveLeaveRequestTypeRequest.id)
}

// string name = 2 [json_name = "name"];
inline void SaveLeaveRequestTypeRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SaveLeaveRequestTypeRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveLeaveRequestTypeRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveLeaveRequestTypeRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveLeaveRequestTypeRequest.name)
}
inline std::string* SaveLeaveRequestTypeRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveLeaveRequestTypeRequest.name)
  return _s;
}
inline const std::string& SaveLeaveRequestTypeRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SaveLeaveRequestTypeRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SaveLeaveRequestTypeRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SaveLeaveRequestTypeRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveLeaveRequestTypeRequest.name)
  return _impl_.name_.Release();
}
inline void SaveLeaveRequestTypeRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveLeaveRequestTypeRequest.name)
}

// string description = 3 [json_name = "description"];
inline void SaveLeaveRequestTypeRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SaveLeaveRequestTypeRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveLeaveRequestTypeRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveLeaveRequestTypeRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveLeaveRequestTypeRequest.description)
}
inline std::string* SaveLeaveRequestTypeRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveLeaveRequestTypeRequest.description)
  return _s;
}
inline const std::string& SaveLeaveRequestTypeRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void SaveLeaveRequestTypeRequest::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SaveLeaveRequestTypeRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SaveLeaveRequestTypeRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveLeaveRequestTypeRequest.description)
  return _impl_.description_.Release();
}
inline void SaveLeaveRequestTypeRequest::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveLeaveRequestTypeRequest.description)
}

// optional int32 dayLeaveBonus = 4 [json_name = "dayLeaveBonus"];
inline bool SaveLeaveRequestTypeRequest::has_dayleavebonus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SaveLeaveRequestTypeRequest::clear_dayleavebonus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayleavebonus_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t SaveLeaveRequestTypeRequest::dayleavebonus() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveLeaveRequestTypeRequest.dayLeaveBonus)
  return _internal_dayleavebonus();
}
inline void SaveLeaveRequestTypeRequest::set_dayleavebonus(::int32_t value) {
  _internal_set_dayleavebonus(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:core.v1.SaveLeaveRequestTypeRequest.dayLeaveBonus)
}
inline ::int32_t SaveLeaveRequestTypeRequest::_internal_dayleavebonus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dayleavebonus_;
}
inline void SaveLeaveRequestTypeRequest::_internal_set_dayleavebonus(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayleavebonus_ = value;
}

// -------------------------------------------------------------------

// ListLeaveRequestTypeResponse

// repeated .core.v1.LeaveRequestType items = 1 [json_name = "items"];
inline int ListLeaveRequestTypeResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ListLeaveRequestTypeResponse::items_size() const {
  return _internal_items_size();
}
inline void ListLeaveRequestTypeResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::core::v1::LeaveRequestType* ListLeaveRequestTypeResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:core.v1.ListLeaveRequestTypeResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>* ListLeaveRequestTypeResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:core.v1.ListLeaveRequestTypeResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::core::v1::LeaveRequestType& ListLeaveRequestTypeResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListLeaveRequestTypeResponse.items)
  return _internal_items().Get(index);
}
inline ::core::v1::LeaveRequestType* ListLeaveRequestTypeResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::core::v1::LeaveRequestType* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:core.v1.ListLeaveRequestTypeResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>& ListLeaveRequestTypeResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:core.v1.ListLeaveRequestTypeResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>&
ListLeaveRequestTypeResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::LeaveRequestType>*
ListLeaveRequestTypeResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
inline bool ListLeaveRequestTypeResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::api::v1::PaginationResponse& ListLeaveRequestTypeResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::PaginationResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::PaginationResponse&>(::api::v1::_PaginationResponse_default_instance_);
}
inline const ::api::v1::PaginationResponse& ListLeaveRequestTypeResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListLeaveRequestTypeResponse.pagination)
  return _internal_pagination();
}
inline void ListLeaveRequestTypeResponse::unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.v1.ListLeaveRequestTypeResponse.pagination)
}
inline ::api::v1::PaginationResponse* ListLeaveRequestTypeResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::PaginationResponse* ListLeaveRequestTypeResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.ListLeaveRequestTypeResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::PaginationResponse* ListLeaveRequestTypeResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::PaginationResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::PaginationResponse* ListLeaveRequestTypeResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::PaginationResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:core.v1.ListLeaveRequestTypeResponse.pagination)
  return _msg;
}
inline void ListLeaveRequestTypeResponse::set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.v1.ListLeaveRequestTypeResponse.pagination)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace core


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2fleave_5frequest_5ftype_2eproto_2epb_2eh
