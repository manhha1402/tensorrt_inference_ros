// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core/v1/time_keeping.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2ftime_5fkeeping_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2ftime_5fkeeping_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "api/v1/base.pb.h"
#include "api/v1/permissions.pb.h"
#include "buf/validate/validate.pb.h"
#include "google/protobuf/empty.pb.h"
#include "api/v1/generators.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_core_2fv1_2ftime_5fkeeping_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2fv1_2ftime_5fkeeping_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_core_2fv1_2ftime_5fkeeping_2eproto;
namespace core {
namespace v1 {
class ListTimeKeepingCalRequest;
struct ListTimeKeepingCalRequestDefaultTypeInternal;
extern ListTimeKeepingCalRequestDefaultTypeInternal _ListTimeKeepingCalRequest_default_instance_;
class ListTimeKeepingCalResponse;
struct ListTimeKeepingCalResponseDefaultTypeInternal;
extern ListTimeKeepingCalResponseDefaultTypeInternal _ListTimeKeepingCalResponse_default_instance_;
class ListTimeKeepingResponse;
struct ListTimeKeepingResponseDefaultTypeInternal;
extern ListTimeKeepingResponseDefaultTypeInternal _ListTimeKeepingResponse_default_instance_;
class SaveTimeKeepingRequest;
struct SaveTimeKeepingRequestDefaultTypeInternal;
extern SaveTimeKeepingRequestDefaultTypeInternal _SaveTimeKeepingRequest_default_instance_;
class TimeKeeping;
struct TimeKeepingDefaultTypeInternal;
extern TimeKeepingDefaultTypeInternal _TimeKeeping_default_instance_;
}  // namespace v1
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class TimeKeeping final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.TimeKeeping) */ {
 public:
  inline TimeKeeping() : TimeKeeping(nullptr) {}
  ~TimeKeeping() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimeKeeping(
      ::google::protobuf::internal::ConstantInitialized);

  inline TimeKeeping(const TimeKeeping& from) : TimeKeeping(nullptr, from) {}
  inline TimeKeeping(TimeKeeping&& from) noexcept
      : TimeKeeping(nullptr, std::move(from)) {}
  inline TimeKeeping& operator=(const TimeKeeping& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeKeeping& operator=(TimeKeeping&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeKeeping& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimeKeeping* internal_default_instance() {
    return reinterpret_cast<const TimeKeeping*>(
        &_TimeKeeping_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TimeKeeping& a, TimeKeeping& b) { a.Swap(&b); }
  inline void Swap(TimeKeeping* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeKeeping* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeKeeping* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TimeKeeping>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimeKeeping& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimeKeeping& from) { TimeKeeping::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TimeKeeping* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.TimeKeeping"; }

 protected:
  explicit TimeKeeping(::google::protobuf::Arena* arena);
  TimeKeeping(::google::protobuf::Arena* arena, const TimeKeeping& from);
  TimeKeeping(::google::protobuf::Arena* arena, TimeKeeping&& from) noexcept
      : TimeKeeping(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kEmployeeIdFieldNumber = 2,
    kEmployeeLabelFieldNumber = 3,
    kCreatedByFieldNumber = 101,
    kCreatedByLabelFieldNumber = 102,
    kUpdatedByFieldNumber = 104,
    kUpdatedByLabelFieldNumber = 105,
    kDeletedByFieldNumber = 107,
    kDeletedByLabelFieldNumber = 108,
    kWorkDaysFieldNumber = 4,
    kWorkHoursFieldNumber = 5,
    kTimesInLateFieldNumber = 6,
    kTimesOutEarlyFieldNumber = 7,
    kTimesOtFieldNumber = 8,
    kDaysOffAuthFieldNumber = 9,
    kCreatedAtFieldNumber = 100,
    kUpdatedAtFieldNumber = 103,
    kDeletedAtFieldNumber = 106,
    kDaysOffNotAuthFieldNumber = 10,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string employeeId = 2 [json_name = "employeeId"];
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // optional string employeeLabel = 3 [json_name = "employeeLabel"];
  bool has_employeelabel() const;
  void clear_employeelabel() ;
  const std::string& employeelabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeelabel(Arg_&& arg, Args_... args);
  std::string* mutable_employeelabel();
  PROTOBUF_NODISCARD std::string* release_employeelabel();
  void set_allocated_employeelabel(std::string* value);

  private:
  const std::string& _internal_employeelabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeelabel(
      const std::string& value);
  std::string* _internal_mutable_employeelabel();

  public:
  // string createdBy = 101 [json_name = "createdBy"];
  void clear_createdby() ;
  const std::string& createdby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdby(Arg_&& arg, Args_... args);
  std::string* mutable_createdby();
  PROTOBUF_NODISCARD std::string* release_createdby();
  void set_allocated_createdby(std::string* value);

  private:
  const std::string& _internal_createdby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdby(
      const std::string& value);
  std::string* _internal_mutable_createdby();

  public:
  // optional string createdByLabel = 102 [json_name = "createdByLabel"];
  bool has_createdbylabel() const;
  void clear_createdbylabel() ;
  const std::string& createdbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_createdbylabel();
  PROTOBUF_NODISCARD std::string* release_createdbylabel();
  void set_allocated_createdbylabel(std::string* value);

  private:
  const std::string& _internal_createdbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdbylabel(
      const std::string& value);
  std::string* _internal_mutable_createdbylabel();

  public:
  // optional string updatedBy = 104 [json_name = "updatedBy"];
  bool has_updatedby() const;
  void clear_updatedby() ;
  const std::string& updatedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedby(Arg_&& arg, Args_... args);
  std::string* mutable_updatedby();
  PROTOBUF_NODISCARD std::string* release_updatedby();
  void set_allocated_updatedby(std::string* value);

  private:
  const std::string& _internal_updatedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedby(
      const std::string& value);
  std::string* _internal_mutable_updatedby();

  public:
  // optional string updatedByLabel = 105 [json_name = "updatedByLabel"];
  bool has_updatedbylabel() const;
  void clear_updatedbylabel() ;
  const std::string& updatedbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_updatedbylabel();
  PROTOBUF_NODISCARD std::string* release_updatedbylabel();
  void set_allocated_updatedbylabel(std::string* value);

  private:
  const std::string& _internal_updatedbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedbylabel(
      const std::string& value);
  std::string* _internal_mutable_updatedbylabel();

  public:
  // optional string deletedBy = 107 [json_name = "deletedBy"];
  bool has_deletedby() const;
  void clear_deletedby() ;
  const std::string& deletedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedby(Arg_&& arg, Args_... args);
  std::string* mutable_deletedby();
  PROTOBUF_NODISCARD std::string* release_deletedby();
  void set_allocated_deletedby(std::string* value);

  private:
  const std::string& _internal_deletedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedby(
      const std::string& value);
  std::string* _internal_mutable_deletedby();

  public:
  // optional string deletedByLabel = 108 [json_name = "deletedByLabel"];
  bool has_deletedbylabel() const;
  void clear_deletedbylabel() ;
  const std::string& deletedbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_deletedbylabel();
  PROTOBUF_NODISCARD std::string* release_deletedbylabel();
  void set_allocated_deletedbylabel(std::string* value);

  private:
  const std::string& _internal_deletedbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedbylabel(
      const std::string& value);
  std::string* _internal_mutable_deletedbylabel();

  public:
  // optional int32 workDays = 4 [json_name = "workDays"];
  bool has_workdays() const;
  void clear_workdays() ;
  ::int32_t workdays() const;
  void set_workdays(::int32_t value);

  private:
  ::int32_t _internal_workdays() const;
  void _internal_set_workdays(::int32_t value);

  public:
  // optional int32 workHours = 5 [json_name = "workHours"];
  bool has_workhours() const;
  void clear_workhours() ;
  ::int32_t workhours() const;
  void set_workhours(::int32_t value);

  private:
  ::int32_t _internal_workhours() const;
  void _internal_set_workhours(::int32_t value);

  public:
  // optional int32 timesInLate = 6 [json_name = "timesInLate"];
  bool has_timesinlate() const;
  void clear_timesinlate() ;
  ::int32_t timesinlate() const;
  void set_timesinlate(::int32_t value);

  private:
  ::int32_t _internal_timesinlate() const;
  void _internal_set_timesinlate(::int32_t value);

  public:
  // optional int32 timesOutEarly = 7 [json_name = "timesOutEarly"];
  bool has_timesoutearly() const;
  void clear_timesoutearly() ;
  ::int32_t timesoutearly() const;
  void set_timesoutearly(::int32_t value);

  private:
  ::int32_t _internal_timesoutearly() const;
  void _internal_set_timesoutearly(::int32_t value);

  public:
  // optional int32 timesOt = 8 [json_name = "timesOt"];
  bool has_timesot() const;
  void clear_timesot() ;
  ::int32_t timesot() const;
  void set_timesot(::int32_t value);

  private:
  ::int32_t _internal_timesot() const;
  void _internal_set_timesot(::int32_t value);

  public:
  // optional int32 daysOffAuth = 9 [json_name = "daysOffAuth"];
  bool has_daysoffauth() const;
  void clear_daysoffauth() ;
  ::int32_t daysoffauth() const;
  void set_daysoffauth(::int32_t value);

  private:
  ::int32_t _internal_daysoffauth() const;
  void _internal_set_daysoffauth(::int32_t value);

  public:
  // int64 createdAt = 100 [json_name = "createdAt"];
  void clear_createdat() ;
  ::int64_t createdat() const;
  void set_createdat(::int64_t value);

  private:
  ::int64_t _internal_createdat() const;
  void _internal_set_createdat(::int64_t value);

  public:
  // optional int64 updatedAt = 103 [json_name = "updatedAt"];
  bool has_updatedat() const;
  void clear_updatedat() ;
  ::int64_t updatedat() const;
  void set_updatedat(::int64_t value);

  private:
  ::int64_t _internal_updatedat() const;
  void _internal_set_updatedat(::int64_t value);

  public:
  // optional int64 deletedAt = 106 [json_name = "deletedAt"];
  bool has_deletedat() const;
  void clear_deletedat() ;
  ::int64_t deletedat() const;
  void set_deletedat(::int64_t value);

  private:
  ::int64_t _internal_deletedat() const;
  void _internal_set_deletedat(::int64_t value);

  public:
  // optional int32 daysOffNotAuth = 10 [json_name = "daysOffNotAuth"];
  bool has_daysoffnotauth() const;
  void clear_daysoffnotauth() ;
  ::int32_t daysoffnotauth() const;
  void set_daysoffnotauth(::int32_t value);

  private:
  ::int32_t _internal_daysoffnotauth() const;
  void _internal_set_daysoffnotauth(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.TimeKeeping)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 19, 0,
      138, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TimeKeeping_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TimeKeeping& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    ::google::protobuf::internal::ArenaStringPtr employeelabel_;
    ::google::protobuf::internal::ArenaStringPtr createdby_;
    ::google::protobuf::internal::ArenaStringPtr createdbylabel_;
    ::google::protobuf::internal::ArenaStringPtr updatedby_;
    ::google::protobuf::internal::ArenaStringPtr updatedbylabel_;
    ::google::protobuf::internal::ArenaStringPtr deletedby_;
    ::google::protobuf::internal::ArenaStringPtr deletedbylabel_;
    ::int32_t workdays_;
    ::int32_t workhours_;
    ::int32_t timesinlate_;
    ::int32_t timesoutearly_;
    ::int32_t timesot_;
    ::int32_t daysoffauth_;
    ::int64_t createdat_;
    ::int64_t updatedat_;
    ::int64_t deletedat_;
    ::int32_t daysoffnotauth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2ftime_5fkeeping_2eproto;
};
// -------------------------------------------------------------------

class SaveTimeKeepingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.SaveTimeKeepingRequest) */ {
 public:
  inline SaveTimeKeepingRequest() : SaveTimeKeepingRequest(nullptr) {}
  ~SaveTimeKeepingRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveTimeKeepingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveTimeKeepingRequest(const SaveTimeKeepingRequest& from) : SaveTimeKeepingRequest(nullptr, from) {}
  inline SaveTimeKeepingRequest(SaveTimeKeepingRequest&& from) noexcept
      : SaveTimeKeepingRequest(nullptr, std::move(from)) {}
  inline SaveTimeKeepingRequest& operator=(const SaveTimeKeepingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveTimeKeepingRequest& operator=(SaveTimeKeepingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveTimeKeepingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveTimeKeepingRequest* internal_default_instance() {
    return reinterpret_cast<const SaveTimeKeepingRequest*>(
        &_SaveTimeKeepingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SaveTimeKeepingRequest& a, SaveTimeKeepingRequest& b) { a.Swap(&b); }
  inline void Swap(SaveTimeKeepingRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveTimeKeepingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveTimeKeepingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SaveTimeKeepingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveTimeKeepingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveTimeKeepingRequest& from) { SaveTimeKeepingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SaveTimeKeepingRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.SaveTimeKeepingRequest"; }

 protected:
  explicit SaveTimeKeepingRequest(::google::protobuf::Arena* arena);
  SaveTimeKeepingRequest(::google::protobuf::Arena* arena, const SaveTimeKeepingRequest& from);
  SaveTimeKeepingRequest(::google::protobuf::Arena* arena, SaveTimeKeepingRequest&& from) noexcept
      : SaveTimeKeepingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kEmployeeIdFieldNumber = 2,
    kWorkDaysFieldNumber = 4,
    kWorkHoursFieldNumber = 5,
    kTimesInLateFieldNumber = 6,
    kTimesOutEarlyFieldNumber = 7,
    kTimesOtFieldNumber = 8,
    kDaysOffAuthFieldNumber = 9,
    kDaysOffNotAuthFieldNumber = 10,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string employeeId = 2 [json_name = "employeeId"];
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // optional int32 workDays = 4 [json_name = "workDays"];
  bool has_workdays() const;
  void clear_workdays() ;
  ::int32_t workdays() const;
  void set_workdays(::int32_t value);

  private:
  ::int32_t _internal_workdays() const;
  void _internal_set_workdays(::int32_t value);

  public:
  // optional int32 workHours = 5 [json_name = "workHours"];
  bool has_workhours() const;
  void clear_workhours() ;
  ::int32_t workhours() const;
  void set_workhours(::int32_t value);

  private:
  ::int32_t _internal_workhours() const;
  void _internal_set_workhours(::int32_t value);

  public:
  // optional int32 timesInLate = 6 [json_name = "timesInLate"];
  bool has_timesinlate() const;
  void clear_timesinlate() ;
  ::int32_t timesinlate() const;
  void set_timesinlate(::int32_t value);

  private:
  ::int32_t _internal_timesinlate() const;
  void _internal_set_timesinlate(::int32_t value);

  public:
  // optional int32 timesOutEarly = 7 [json_name = "timesOutEarly"];
  bool has_timesoutearly() const;
  void clear_timesoutearly() ;
  ::int32_t timesoutearly() const;
  void set_timesoutearly(::int32_t value);

  private:
  ::int32_t _internal_timesoutearly() const;
  void _internal_set_timesoutearly(::int32_t value);

  public:
  // optional int32 timesOt = 8 [json_name = "timesOt"];
  bool has_timesot() const;
  void clear_timesot() ;
  ::int32_t timesot() const;
  void set_timesot(::int32_t value);

  private:
  ::int32_t _internal_timesot() const;
  void _internal_set_timesot(::int32_t value);

  public:
  // optional int32 daysOffAuth = 9 [json_name = "daysOffAuth"];
  bool has_daysoffauth() const;
  void clear_daysoffauth() ;
  ::int32_t daysoffauth() const;
  void set_daysoffauth(::int32_t value);

  private:
  ::int32_t _internal_daysoffauth() const;
  void _internal_set_daysoffauth(::int32_t value);

  public:
  // optional int32 daysOffNotAuth = 10 [json_name = "daysOffNotAuth"];
  bool has_daysoffnotauth() const;
  void clear_daysoffnotauth() ;
  ::int32_t daysoffnotauth() const;
  void set_daysoffnotauth(::int32_t value);

  private:
  ::int32_t _internal_daysoffnotauth() const;
  void _internal_set_daysoffnotauth(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.SaveTimeKeepingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SaveTimeKeepingRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveTimeKeepingRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    ::int32_t workdays_;
    ::int32_t workhours_;
    ::int32_t timesinlate_;
    ::int32_t timesoutearly_;
    ::int32_t timesot_;
    ::int32_t daysoffauth_;
    ::int32_t daysoffnotauth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2ftime_5fkeeping_2eproto;
};
// -------------------------------------------------------------------

class ListTimeKeepingCalResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.ListTimeKeepingCalResponse) */ {
 public:
  inline ListTimeKeepingCalResponse() : ListTimeKeepingCalResponse(nullptr) {}
  ~ListTimeKeepingCalResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTimeKeepingCalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTimeKeepingCalResponse(const ListTimeKeepingCalResponse& from) : ListTimeKeepingCalResponse(nullptr, from) {}
  inline ListTimeKeepingCalResponse(ListTimeKeepingCalResponse&& from) noexcept
      : ListTimeKeepingCalResponse(nullptr, std::move(from)) {}
  inline ListTimeKeepingCalResponse& operator=(const ListTimeKeepingCalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTimeKeepingCalResponse& operator=(ListTimeKeepingCalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTimeKeepingCalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTimeKeepingCalResponse* internal_default_instance() {
    return reinterpret_cast<const ListTimeKeepingCalResponse*>(
        &_ListTimeKeepingCalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListTimeKeepingCalResponse& a, ListTimeKeepingCalResponse& b) { a.Swap(&b); }
  inline void Swap(ListTimeKeepingCalResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTimeKeepingCalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTimeKeepingCalResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTimeKeepingCalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTimeKeepingCalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTimeKeepingCalResponse& from) { ListTimeKeepingCalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTimeKeepingCalResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.ListTimeKeepingCalResponse"; }

 protected:
  explicit ListTimeKeepingCalResponse(::google::protobuf::Arena* arena);
  ListTimeKeepingCalResponse(::google::protobuf::Arena* arena, const ListTimeKeepingCalResponse& from);
  ListTimeKeepingCalResponse(::google::protobuf::Arena* arena, ListTimeKeepingCalResponse&& from) noexcept
      : ListTimeKeepingCalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kRowsAffectedFieldNumber = 1,
  };
  // string message = 2 [json_name = "message"];
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 rowsAffected = 1 [json_name = "rowsAffected"];
  void clear_rowsaffected() ;
  ::int32_t rowsaffected() const;
  void set_rowsaffected(::int32_t value);

  private:
  ::int32_t _internal_rowsaffected() const;
  void _internal_set_rowsaffected(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.ListTimeKeepingCalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTimeKeepingCalResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTimeKeepingCalResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t rowsaffected_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2ftime_5fkeeping_2eproto;
};
// -------------------------------------------------------------------

class ListTimeKeepingCalRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.ListTimeKeepingCalRequest) */ {
 public:
  inline ListTimeKeepingCalRequest() : ListTimeKeepingCalRequest(nullptr) {}
  ~ListTimeKeepingCalRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTimeKeepingCalRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTimeKeepingCalRequest(const ListTimeKeepingCalRequest& from) : ListTimeKeepingCalRequest(nullptr, from) {}
  inline ListTimeKeepingCalRequest(ListTimeKeepingCalRequest&& from) noexcept
      : ListTimeKeepingCalRequest(nullptr, std::move(from)) {}
  inline ListTimeKeepingCalRequest& operator=(const ListTimeKeepingCalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTimeKeepingCalRequest& operator=(ListTimeKeepingCalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTimeKeepingCalRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTimeKeepingCalRequest* internal_default_instance() {
    return reinterpret_cast<const ListTimeKeepingCalRequest*>(
        &_ListTimeKeepingCalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListTimeKeepingCalRequest& a, ListTimeKeepingCalRequest& b) { a.Swap(&b); }
  inline void Swap(ListTimeKeepingCalRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTimeKeepingCalRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTimeKeepingCalRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTimeKeepingCalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTimeKeepingCalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTimeKeepingCalRequest& from) { ListTimeKeepingCalRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTimeKeepingCalRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.ListTimeKeepingCalRequest"; }

 protected:
  explicit ListTimeKeepingCalRequest(::google::protobuf::Arena* arena);
  ListTimeKeepingCalRequest(::google::protobuf::Arena* arena, const ListTimeKeepingCalRequest& from);
  ListTimeKeepingCalRequest(::google::protobuf::Arena* arena, ListTimeKeepingCalRequest&& from) noexcept
      : ListTimeKeepingCalRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmployeeIdFieldNumber = 1,
  };
  // string employeeId = 1 [json_name = "employeeId"];
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // @@protoc_insertion_point(class_scope:core.v1.ListTimeKeepingCalRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTimeKeepingCalRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTimeKeepingCalRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2ftime_5fkeeping_2eproto;
};
// -------------------------------------------------------------------

class ListTimeKeepingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.ListTimeKeepingResponse) */ {
 public:
  inline ListTimeKeepingResponse() : ListTimeKeepingResponse(nullptr) {}
  ~ListTimeKeepingResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTimeKeepingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTimeKeepingResponse(const ListTimeKeepingResponse& from) : ListTimeKeepingResponse(nullptr, from) {}
  inline ListTimeKeepingResponse(ListTimeKeepingResponse&& from) noexcept
      : ListTimeKeepingResponse(nullptr, std::move(from)) {}
  inline ListTimeKeepingResponse& operator=(const ListTimeKeepingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTimeKeepingResponse& operator=(ListTimeKeepingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTimeKeepingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTimeKeepingResponse* internal_default_instance() {
    return reinterpret_cast<const ListTimeKeepingResponse*>(
        &_ListTimeKeepingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListTimeKeepingResponse& a, ListTimeKeepingResponse& b) { a.Swap(&b); }
  inline void Swap(ListTimeKeepingResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTimeKeepingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTimeKeepingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListTimeKeepingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTimeKeepingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTimeKeepingResponse& from) { ListTimeKeepingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTimeKeepingResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.ListTimeKeepingResponse"; }

 protected:
  explicit ListTimeKeepingResponse(::google::protobuf::Arena* arena);
  ListTimeKeepingResponse(::google::protobuf::Arena* arena, const ListTimeKeepingResponse& from);
  ListTimeKeepingResponse(::google::protobuf::Arena* arena, ListTimeKeepingResponse&& from) noexcept
      : ListTimeKeepingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .core.v1.TimeKeeping items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::core::v1::TimeKeeping* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>* _internal_mutable_items();
  public:
  const ::core::v1::TimeKeeping& items(int index) const;
  ::core::v1::TimeKeeping* add_items();
  const ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>& items() const;
  // .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::PaginationResponse& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::PaginationResponse* release_pagination();
  ::api::v1::PaginationResponse* mutable_pagination();
  void set_allocated_pagination(::api::v1::PaginationResponse* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value);
  ::api::v1::PaginationResponse* unsafe_arena_release_pagination();

  private:
  const ::api::v1::PaginationResponse& _internal_pagination() const;
  ::api::v1::PaginationResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:core.v1.ListTimeKeepingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListTimeKeepingResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTimeKeepingResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::core::v1::TimeKeeping > items_;
    ::api::v1::PaginationResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2ftime_5fkeeping_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TimeKeeping

// string id = 1 [json_name = "id"];
inline void TimeKeeping::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& TimeKeeping::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.id)
}
inline std::string* TimeKeeping::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.id)
  return _s;
}
inline const std::string& TimeKeeping::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void TimeKeeping::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.id)
  return _impl_.id_.Release();
}
inline void TimeKeeping::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.id)
}

// string employeeId = 2 [json_name = "employeeId"];
inline void TimeKeeping::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& TimeKeeping::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.employeeId)
}
inline std::string* TimeKeeping::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.employeeId)
  return _s;
}
inline const std::string& TimeKeeping::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void TimeKeeping::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.employeeId)
  return _impl_.employeeid_.Release();
}
inline void TimeKeeping::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.employeeId)
}

// optional string employeeLabel = 3 [json_name = "employeeLabel"];
inline bool TimeKeeping::has_employeelabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TimeKeeping::clear_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeelabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TimeKeeping::employeelabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.employeeLabel)
  return _internal_employeelabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_employeelabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.employeelabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.employeeLabel)
}
inline std::string* TimeKeeping::mutable_employeelabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeelabel();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.employeeLabel)
  return _s;
}
inline const std::string& TimeKeeping::_internal_employeelabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeelabel_.Get();
}
inline void TimeKeeping::_internal_set_employeelabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.employeelabel_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.employeelabel_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.employeeLabel)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.employeelabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.employeelabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TimeKeeping::set_allocated_employeelabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.employeelabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeelabel_.IsDefault()) {
          _impl_.employeelabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.employeeLabel)
}

// optional int32 workDays = 4 [json_name = "workDays"];
inline bool TimeKeeping::has_workdays() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void TimeKeeping::clear_workdays() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workdays_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t TimeKeeping::workdays() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.workDays)
  return _internal_workdays();
}
inline void TimeKeeping::set_workdays(::int32_t value) {
  _internal_set_workdays(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.workDays)
}
inline ::int32_t TimeKeeping::_internal_workdays() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workdays_;
}
inline void TimeKeeping::_internal_set_workdays(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workdays_ = value;
}

// optional int32 workHours = 5 [json_name = "workHours"];
inline bool TimeKeeping::has_workhours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void TimeKeeping::clear_workhours() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workhours_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t TimeKeeping::workhours() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.workHours)
  return _internal_workhours();
}
inline void TimeKeeping::set_workhours(::int32_t value) {
  _internal_set_workhours(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.workHours)
}
inline ::int32_t TimeKeeping::_internal_workhours() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workhours_;
}
inline void TimeKeeping::_internal_set_workhours(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workhours_ = value;
}

// optional int32 timesInLate = 6 [json_name = "timesInLate"];
inline bool TimeKeeping::has_timesinlate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void TimeKeeping::clear_timesinlate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesinlate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t TimeKeeping::timesinlate() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.timesInLate)
  return _internal_timesinlate();
}
inline void TimeKeeping::set_timesinlate(::int32_t value) {
  _internal_set_timesinlate(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.timesInLate)
}
inline ::int32_t TimeKeeping::_internal_timesinlate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timesinlate_;
}
inline void TimeKeeping::_internal_set_timesinlate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesinlate_ = value;
}

// optional int32 timesOutEarly = 7 [json_name = "timesOutEarly"];
inline bool TimeKeeping::has_timesoutearly() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void TimeKeeping::clear_timesoutearly() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesoutearly_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t TimeKeeping::timesoutearly() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.timesOutEarly)
  return _internal_timesoutearly();
}
inline void TimeKeeping::set_timesoutearly(::int32_t value) {
  _internal_set_timesoutearly(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.timesOutEarly)
}
inline ::int32_t TimeKeeping::_internal_timesoutearly() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timesoutearly_;
}
inline void TimeKeeping::_internal_set_timesoutearly(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesoutearly_ = value;
}

// optional int32 timesOt = 8 [json_name = "timesOt"];
inline bool TimeKeeping::has_timesot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void TimeKeeping::clear_timesot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesot_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t TimeKeeping::timesot() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.timesOt)
  return _internal_timesot();
}
inline void TimeKeeping::set_timesot(::int32_t value) {
  _internal_set_timesot(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.timesOt)
}
inline ::int32_t TimeKeeping::_internal_timesot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timesot_;
}
inline void TimeKeeping::_internal_set_timesot(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesot_ = value;
}

// optional int32 daysOffAuth = 9 [json_name = "daysOffAuth"];
inline bool TimeKeeping::has_daysoffauth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void TimeKeeping::clear_daysoffauth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffauth_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t TimeKeeping::daysoffauth() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.daysOffAuth)
  return _internal_daysoffauth();
}
inline void TimeKeeping::set_daysoffauth(::int32_t value) {
  _internal_set_daysoffauth(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.daysOffAuth)
}
inline ::int32_t TimeKeeping::_internal_daysoffauth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.daysoffauth_;
}
inline void TimeKeeping::_internal_set_daysoffauth(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffauth_ = value;
}

// optional int32 daysOffNotAuth = 10 [json_name = "daysOffNotAuth"];
inline bool TimeKeeping::has_daysoffnotauth() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void TimeKeeping::clear_daysoffnotauth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffnotauth_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t TimeKeeping::daysoffnotauth() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.daysOffNotAuth)
  return _internal_daysoffnotauth();
}
inline void TimeKeeping::set_daysoffnotauth(::int32_t value) {
  _internal_set_daysoffnotauth(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.daysOffNotAuth)
}
inline ::int32_t TimeKeeping::_internal_daysoffnotauth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.daysoffnotauth_;
}
inline void TimeKeeping::_internal_set_daysoffnotauth(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffnotauth_ = value;
}

// int64 createdAt = 100 [json_name = "createdAt"];
inline void TimeKeeping::clear_createdat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = ::int64_t{0};
}
inline ::int64_t TimeKeeping::createdat() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.createdAt)
  return _internal_createdat();
}
inline void TimeKeeping::set_createdat(::int64_t value) {
  _internal_set_createdat(value);
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.createdAt)
}
inline ::int64_t TimeKeeping::_internal_createdat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdat_;
}
inline void TimeKeeping::_internal_set_createdat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = value;
}

// string createdBy = 101 [json_name = "createdBy"];
inline void TimeKeeping::clear_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.ClearToEmpty();
}
inline const std::string& TimeKeeping::createdby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.createdBy)
  return _internal_createdby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_createdby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.createdBy)
}
inline std::string* TimeKeeping::mutable_createdby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdby();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.createdBy)
  return _s;
}
inline const std::string& TimeKeeping::_internal_createdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdby_.Get();
}
inline void TimeKeeping::_internal_set_createdby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.createdby_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.createdBy)
  return _impl_.createdby_.Release();
}
inline void TimeKeeping::set_allocated_createdby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdby_.IsDefault()) {
          _impl_.createdby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.createdBy)
}

// optional string createdByLabel = 102 [json_name = "createdByLabel"];
inline bool TimeKeeping::has_createdbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TimeKeeping::clear_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& TimeKeeping::createdbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.createdByLabel)
  return _internal_createdbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_createdbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.createdbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.createdByLabel)
}
inline std::string* TimeKeeping::mutable_createdbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.createdByLabel)
  return _s;
}
inline const std::string& TimeKeeping::_internal_createdbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdbylabel_.Get();
}
inline void TimeKeeping::_internal_set_createdbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.createdbylabel_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.createdbylabel_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.createdByLabel)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.createdbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.createdbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TimeKeeping::set_allocated_createdbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.createdbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdbylabel_.IsDefault()) {
          _impl_.createdbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.createdByLabel)
}

// optional int64 updatedAt = 103 [json_name = "updatedAt"];
inline bool TimeKeeping::has_updatedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void TimeKeeping::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t TimeKeeping::updatedat() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.updatedAt)
  return _internal_updatedat();
}
inline void TimeKeeping::set_updatedat(::int64_t value) {
  _internal_set_updatedat(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.updatedAt)
}
inline ::int64_t TimeKeeping::_internal_updatedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedat_;
}
inline void TimeKeeping::_internal_set_updatedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = value;
}

// optional string updatedBy = 104 [json_name = "updatedBy"];
inline bool TimeKeeping::has_updatedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void TimeKeeping::clear_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& TimeKeeping::updatedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.updatedBy)
  return _internal_updatedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_updatedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updatedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.updatedBy)
}
inline std::string* TimeKeeping::mutable_updatedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedby();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.updatedBy)
  return _s;
}
inline const std::string& TimeKeeping::_internal_updatedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedby_.Get();
}
inline void TimeKeeping::_internal_set_updatedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.updatedby_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.updatedby_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.updatedBy)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.updatedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TimeKeeping::set_allocated_updatedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.updatedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedby_.IsDefault()) {
          _impl_.updatedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.updatedBy)
}

// optional string updatedByLabel = 105 [json_name = "updatedByLabel"];
inline bool TimeKeeping::has_updatedbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TimeKeeping::clear_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& TimeKeeping::updatedbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.updatedByLabel)
  return _internal_updatedbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_updatedbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.updatedbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.updatedByLabel)
}
inline std::string* TimeKeeping::mutable_updatedbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.updatedByLabel)
  return _s;
}
inline const std::string& TimeKeeping::_internal_updatedbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedbylabel_.Get();
}
inline void TimeKeeping::_internal_set_updatedbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.updatedbylabel_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.updatedbylabel_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.updatedByLabel)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.updatedbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TimeKeeping::set_allocated_updatedbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.updatedbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedbylabel_.IsDefault()) {
          _impl_.updatedbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.updatedByLabel)
}

// optional int64 deletedAt = 106 [json_name = "deletedAt"];
inline bool TimeKeeping::has_deletedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void TimeKeeping::clear_deletedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t TimeKeeping::deletedat() const {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.deletedAt)
  return _internal_deletedat();
}
inline void TimeKeeping::set_deletedat(::int64_t value) {
  _internal_set_deletedat(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.deletedAt)
}
inline ::int64_t TimeKeeping::_internal_deletedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedat_;
}
inline void TimeKeeping::_internal_set_deletedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = value;
}

// optional string deletedBy = 107 [json_name = "deletedBy"];
inline bool TimeKeeping::has_deletedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TimeKeeping::clear_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& TimeKeeping::deletedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.deletedBy)
  return _internal_deletedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_deletedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.deletedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.deletedBy)
}
inline std::string* TimeKeeping::mutable_deletedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedby();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.deletedBy)
  return _s;
}
inline const std::string& TimeKeeping::_internal_deletedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedby_.Get();
}
inline void TimeKeeping::_internal_set_deletedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.deletedby_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.deletedby_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.deletedBy)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.deletedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TimeKeeping::set_allocated_deletedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.deletedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedby_.IsDefault()) {
          _impl_.deletedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.deletedBy)
}

// optional string deletedByLabel = 108 [json_name = "deletedByLabel"];
inline bool TimeKeeping::has_deletedbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void TimeKeeping::clear_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& TimeKeeping::deletedbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.TimeKeeping.deletedByLabel)
  return _internal_deletedbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimeKeeping::set_deletedbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.deletedbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.TimeKeeping.deletedByLabel)
}
inline std::string* TimeKeeping::mutable_deletedbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.TimeKeeping.deletedByLabel)
  return _s;
}
inline const std::string& TimeKeeping::_internal_deletedbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedbylabel_.Get();
}
inline void TimeKeeping::_internal_set_deletedbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.deletedbylabel_.Set(value, GetArena());
}
inline std::string* TimeKeeping::_internal_mutable_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.deletedbylabel_.Mutable( GetArena());
}
inline std::string* TimeKeeping::release_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.TimeKeeping.deletedByLabel)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.deletedbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TimeKeeping::set_allocated_deletedbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.deletedbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedbylabel_.IsDefault()) {
          _impl_.deletedbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.TimeKeeping.deletedByLabel)
}

// -------------------------------------------------------------------

// SaveTimeKeepingRequest

// string id = 1 [json_name = "id"];
inline void SaveTimeKeepingRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SaveTimeKeepingRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveTimeKeepingRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.id)
}
inline std::string* SaveTimeKeepingRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveTimeKeepingRequest.id)
  return _s;
}
inline const std::string& SaveTimeKeepingRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SaveTimeKeepingRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SaveTimeKeepingRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SaveTimeKeepingRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveTimeKeepingRequest.id)
  return _impl_.id_.Release();
}
inline void SaveTimeKeepingRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveTimeKeepingRequest.id)
}

// string employeeId = 2 [json_name = "employeeId"];
inline void SaveTimeKeepingRequest::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& SaveTimeKeepingRequest::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveTimeKeepingRequest::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.employeeId)
}
inline std::string* SaveTimeKeepingRequest::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveTimeKeepingRequest.employeeId)
  return _s;
}
inline const std::string& SaveTimeKeepingRequest::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void SaveTimeKeepingRequest::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* SaveTimeKeepingRequest::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* SaveTimeKeepingRequest::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveTimeKeepingRequest.employeeId)
  return _impl_.employeeid_.Release();
}
inline void SaveTimeKeepingRequest::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveTimeKeepingRequest.employeeId)
}

// optional int32 workDays = 4 [json_name = "workDays"];
inline bool SaveTimeKeepingRequest::has_workdays() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_workdays() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workdays_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t SaveTimeKeepingRequest::workdays() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.workDays)
  return _internal_workdays();
}
inline void SaveTimeKeepingRequest::set_workdays(::int32_t value) {
  _internal_set_workdays(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.workDays)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_workdays() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workdays_;
}
inline void SaveTimeKeepingRequest::_internal_set_workdays(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workdays_ = value;
}

// optional int32 workHours = 5 [json_name = "workHours"];
inline bool SaveTimeKeepingRequest::has_workhours() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_workhours() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workhours_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SaveTimeKeepingRequest::workhours() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.workHours)
  return _internal_workhours();
}
inline void SaveTimeKeepingRequest::set_workhours(::int32_t value) {
  _internal_set_workhours(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.workHours)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_workhours() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workhours_;
}
inline void SaveTimeKeepingRequest::_internal_set_workhours(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workhours_ = value;
}

// optional int32 timesInLate = 6 [json_name = "timesInLate"];
inline bool SaveTimeKeepingRequest::has_timesinlate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_timesinlate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesinlate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t SaveTimeKeepingRequest::timesinlate() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.timesInLate)
  return _internal_timesinlate();
}
inline void SaveTimeKeepingRequest::set_timesinlate(::int32_t value) {
  _internal_set_timesinlate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.timesInLate)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_timesinlate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timesinlate_;
}
inline void SaveTimeKeepingRequest::_internal_set_timesinlate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesinlate_ = value;
}

// optional int32 timesOutEarly = 7 [json_name = "timesOutEarly"];
inline bool SaveTimeKeepingRequest::has_timesoutearly() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_timesoutearly() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesoutearly_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t SaveTimeKeepingRequest::timesoutearly() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.timesOutEarly)
  return _internal_timesoutearly();
}
inline void SaveTimeKeepingRequest::set_timesoutearly(::int32_t value) {
  _internal_set_timesoutearly(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.timesOutEarly)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_timesoutearly() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timesoutearly_;
}
inline void SaveTimeKeepingRequest::_internal_set_timesoutearly(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesoutearly_ = value;
}

// optional int32 timesOt = 8 [json_name = "timesOt"];
inline bool SaveTimeKeepingRequest::has_timesot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_timesot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesot_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t SaveTimeKeepingRequest::timesot() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.timesOt)
  return _internal_timesot();
}
inline void SaveTimeKeepingRequest::set_timesot(::int32_t value) {
  _internal_set_timesot(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.timesOt)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_timesot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timesot_;
}
inline void SaveTimeKeepingRequest::_internal_set_timesot(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timesot_ = value;
}

// optional int32 daysOffAuth = 9 [json_name = "daysOffAuth"];
inline bool SaveTimeKeepingRequest::has_daysoffauth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_daysoffauth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffauth_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t SaveTimeKeepingRequest::daysoffauth() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.daysOffAuth)
  return _internal_daysoffauth();
}
inline void SaveTimeKeepingRequest::set_daysoffauth(::int32_t value) {
  _internal_set_daysoffauth(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.daysOffAuth)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_daysoffauth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.daysoffauth_;
}
inline void SaveTimeKeepingRequest::_internal_set_daysoffauth(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffauth_ = value;
}

// optional int32 daysOffNotAuth = 10 [json_name = "daysOffNotAuth"];
inline bool SaveTimeKeepingRequest::has_daysoffnotauth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void SaveTimeKeepingRequest::clear_daysoffnotauth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffnotauth_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t SaveTimeKeepingRequest::daysoffnotauth() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveTimeKeepingRequest.daysOffNotAuth)
  return _internal_daysoffnotauth();
}
inline void SaveTimeKeepingRequest::set_daysoffnotauth(::int32_t value) {
  _internal_set_daysoffnotauth(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:core.v1.SaveTimeKeepingRequest.daysOffNotAuth)
}
inline ::int32_t SaveTimeKeepingRequest::_internal_daysoffnotauth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.daysoffnotauth_;
}
inline void SaveTimeKeepingRequest::_internal_set_daysoffnotauth(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.daysoffnotauth_ = value;
}

// -------------------------------------------------------------------

// ListTimeKeepingResponse

// repeated .core.v1.TimeKeeping items = 1 [json_name = "items"];
inline int ListTimeKeepingResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ListTimeKeepingResponse::items_size() const {
  return _internal_items_size();
}
inline void ListTimeKeepingResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::core::v1::TimeKeeping* ListTimeKeepingResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:core.v1.ListTimeKeepingResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>* ListTimeKeepingResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:core.v1.ListTimeKeepingResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::core::v1::TimeKeeping& ListTimeKeepingResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListTimeKeepingResponse.items)
  return _internal_items().Get(index);
}
inline ::core::v1::TimeKeeping* ListTimeKeepingResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::core::v1::TimeKeeping* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:core.v1.ListTimeKeepingResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>& ListTimeKeepingResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:core.v1.ListTimeKeepingResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>&
ListTimeKeepingResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::TimeKeeping>*
ListTimeKeepingResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
inline bool ListTimeKeepingResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::api::v1::PaginationResponse& ListTimeKeepingResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::PaginationResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::PaginationResponse&>(::api::v1::_PaginationResponse_default_instance_);
}
inline const ::api::v1::PaginationResponse& ListTimeKeepingResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListTimeKeepingResponse.pagination)
  return _internal_pagination();
}
inline void ListTimeKeepingResponse::unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.v1.ListTimeKeepingResponse.pagination)
}
inline ::api::v1::PaginationResponse* ListTimeKeepingResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::PaginationResponse* ListTimeKeepingResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.ListTimeKeepingResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::PaginationResponse* ListTimeKeepingResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::PaginationResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::PaginationResponse* ListTimeKeepingResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::PaginationResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:core.v1.ListTimeKeepingResponse.pagination)
  return _msg;
}
inline void ListTimeKeepingResponse::set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.v1.ListTimeKeepingResponse.pagination)
}

// -------------------------------------------------------------------

// ListTimeKeepingCalRequest

// string employeeId = 1 [json_name = "employeeId"];
inline void ListTimeKeepingCalRequest::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& ListTimeKeepingCalRequest::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListTimeKeepingCalRequest.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListTimeKeepingCalRequest::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.ListTimeKeepingCalRequest.employeeId)
}
inline std::string* ListTimeKeepingCalRequest::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.ListTimeKeepingCalRequest.employeeId)
  return _s;
}
inline const std::string& ListTimeKeepingCalRequest::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void ListTimeKeepingCalRequest::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* ListTimeKeepingCalRequest::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* ListTimeKeepingCalRequest::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.ListTimeKeepingCalRequest.employeeId)
  return _impl_.employeeid_.Release();
}
inline void ListTimeKeepingCalRequest::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.ListTimeKeepingCalRequest.employeeId)
}

// -------------------------------------------------------------------

// ListTimeKeepingCalResponse

// int32 rowsAffected = 1 [json_name = "rowsAffected"];
inline void ListTimeKeepingCalResponse::clear_rowsaffected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rowsaffected_ = 0;
}
inline ::int32_t ListTimeKeepingCalResponse::rowsaffected() const {
  // @@protoc_insertion_point(field_get:core.v1.ListTimeKeepingCalResponse.rowsAffected)
  return _internal_rowsaffected();
}
inline void ListTimeKeepingCalResponse::set_rowsaffected(::int32_t value) {
  _internal_set_rowsaffected(value);
  // @@protoc_insertion_point(field_set:core.v1.ListTimeKeepingCalResponse.rowsAffected)
}
inline ::int32_t ListTimeKeepingCalResponse::_internal_rowsaffected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rowsaffected_;
}
inline void ListTimeKeepingCalResponse::_internal_set_rowsaffected(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rowsaffected_ = value;
}

// string message = 2 [json_name = "message"];
inline void ListTimeKeepingCalResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ListTimeKeepingCalResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListTimeKeepingCalResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListTimeKeepingCalResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.ListTimeKeepingCalResponse.message)
}
inline std::string* ListTimeKeepingCalResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:core.v1.ListTimeKeepingCalResponse.message)
  return _s;
}
inline const std::string& ListTimeKeepingCalResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ListTimeKeepingCalResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ListTimeKeepingCalResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ListTimeKeepingCalResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.ListTimeKeepingCalResponse.message)
  return _impl_.message_.Release();
}
inline void ListTimeKeepingCalResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.ListTimeKeepingCalResponse.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace core


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2ftime_5fkeeping_2eproto_2epb_2eh
