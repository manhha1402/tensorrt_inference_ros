// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core/v1/employee_family.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2femployee_5ffamily_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2femployee_5ffamily_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "api/v1/base.pb.h"
#include "api/v1/generators.pb.h"
#include "api/v1/permissions.pb.h"
#include "buf/validate/validate.pb.h"
#include "google/protobuf/empty.pb.h"
#include "core/v1/employee.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_core_2fv1_2femployee_5ffamily_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2fv1_2femployee_5ffamily_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_core_2fv1_2femployee_5ffamily_2eproto;
namespace core {
namespace v1 {
class EmployeeFamily;
struct EmployeeFamilyDefaultTypeInternal;
extern EmployeeFamilyDefaultTypeInternal _EmployeeFamily_default_instance_;
class ListEmployeeFamilyResponse;
struct ListEmployeeFamilyResponseDefaultTypeInternal;
extern ListEmployeeFamilyResponseDefaultTypeInternal _ListEmployeeFamilyResponse_default_instance_;
class SaveEmployeeFamilyRequest;
struct SaveEmployeeFamilyRequestDefaultTypeInternal;
extern SaveEmployeeFamilyRequestDefaultTypeInternal _SaveEmployeeFamilyRequest_default_instance_;
}  // namespace v1
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {
namespace v1 {
enum Relation : int {
  SPOUSE = 0,
  PARENT = 1,
  CHILDREN = 2,
  SIBLING = 3,
  Relation_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Relation_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Relation_IsValid(int value);
extern const uint32_t Relation_internal_data_[];
constexpr Relation Relation_MIN = static_cast<Relation>(0);
constexpr Relation Relation_MAX = static_cast<Relation>(3);
constexpr int Relation_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Relation_descriptor();
template <typename T>
const std::string& Relation_Name(T value) {
  static_assert(std::is_same<T, Relation>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Relation_Name().");
  return Relation_Name(static_cast<Relation>(value));
}
template <>
inline const std::string& Relation_Name(Relation value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Relation_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Relation_Parse(absl::string_view name, Relation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Relation>(
      Relation_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SaveEmployeeFamilyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.SaveEmployeeFamilyRequest) */ {
 public:
  inline SaveEmployeeFamilyRequest() : SaveEmployeeFamilyRequest(nullptr) {}
  ~SaveEmployeeFamilyRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveEmployeeFamilyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveEmployeeFamilyRequest(const SaveEmployeeFamilyRequest& from) : SaveEmployeeFamilyRequest(nullptr, from) {}
  inline SaveEmployeeFamilyRequest(SaveEmployeeFamilyRequest&& from) noexcept
      : SaveEmployeeFamilyRequest(nullptr, std::move(from)) {}
  inline SaveEmployeeFamilyRequest& operator=(const SaveEmployeeFamilyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveEmployeeFamilyRequest& operator=(SaveEmployeeFamilyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveEmployeeFamilyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveEmployeeFamilyRequest* internal_default_instance() {
    return reinterpret_cast<const SaveEmployeeFamilyRequest*>(
        &_SaveEmployeeFamilyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SaveEmployeeFamilyRequest& a, SaveEmployeeFamilyRequest& b) { a.Swap(&b); }
  inline void Swap(SaveEmployeeFamilyRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveEmployeeFamilyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveEmployeeFamilyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SaveEmployeeFamilyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveEmployeeFamilyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveEmployeeFamilyRequest& from) { SaveEmployeeFamilyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SaveEmployeeFamilyRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.SaveEmployeeFamilyRequest"; }

 protected:
  explicit SaveEmployeeFamilyRequest(::google::protobuf::Arena* arena);
  SaveEmployeeFamilyRequest(::google::protobuf::Arena* arena, const SaveEmployeeFamilyRequest& from);
  SaveEmployeeFamilyRequest(::google::protobuf::Arena* arena, SaveEmployeeFamilyRequest&& from) noexcept
      : SaveEmployeeFamilyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kFullNameFieldNumber = 2,
    kEmployeeIdFieldNumber = 3,
    kSocialInsuranceNumberFieldNumber = 5,
    kIdentificationCardNumberFieldNumber = 6,
    kBirthCityIdFieldNumber = 9,
    kBirthDistrictIdFieldNumber = 11,
    kBirthCommuneIdFieldNumber = 13,
    kBirthAddressFieldNumber = 15,
    kNationalityCountryIdFieldNumber = 17,
    kEthnicityIdFieldNumber = 18,
    kNoteFieldNumber = 20,
    kDateOfBirthFieldNumber = 7,
    kGenderFieldNumber = 8,
    kRelationFieldNumber = 19,
    kIsDependencyFieldNumber = 21,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string fullName = 2 [json_name = "fullName"];
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // string employeeId = 3 [json_name = "employeeId"];
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // optional string socialInsuranceNumber = 5 [json_name = "socialInsuranceNumber"];
  bool has_socialinsurancenumber() const;
  void clear_socialinsurancenumber() ;
  const std::string& socialinsurancenumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_socialinsurancenumber(Arg_&& arg, Args_... args);
  std::string* mutable_socialinsurancenumber();
  PROTOBUF_NODISCARD std::string* release_socialinsurancenumber();
  void set_allocated_socialinsurancenumber(std::string* value);

  private:
  const std::string& _internal_socialinsurancenumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_socialinsurancenumber(
      const std::string& value);
  std::string* _internal_mutable_socialinsurancenumber();

  public:
  // optional string identificationCardNumber = 6 [json_name = "identificationCardNumber"];
  bool has_identificationcardnumber() const;
  void clear_identificationcardnumber() ;
  const std::string& identificationcardnumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identificationcardnumber(Arg_&& arg, Args_... args);
  std::string* mutable_identificationcardnumber();
  PROTOBUF_NODISCARD std::string* release_identificationcardnumber();
  void set_allocated_identificationcardnumber(std::string* value);

  private:
  const std::string& _internal_identificationcardnumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identificationcardnumber(
      const std::string& value);
  std::string* _internal_mutable_identificationcardnumber();

  public:
  // string birthCityId = 9 [json_name = "birthCityId"];
  void clear_birthcityid() ;
  const std::string& birthcityid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthcityid(Arg_&& arg, Args_... args);
  std::string* mutable_birthcityid();
  PROTOBUF_NODISCARD std::string* release_birthcityid();
  void set_allocated_birthcityid(std::string* value);

  private:
  const std::string& _internal_birthcityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthcityid(
      const std::string& value);
  std::string* _internal_mutable_birthcityid();

  public:
  // string birthDistrictId = 11 [json_name = "birthDistrictId"];
  void clear_birthdistrictid() ;
  const std::string& birthdistrictid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthdistrictid(Arg_&& arg, Args_... args);
  std::string* mutable_birthdistrictid();
  PROTOBUF_NODISCARD std::string* release_birthdistrictid();
  void set_allocated_birthdistrictid(std::string* value);

  private:
  const std::string& _internal_birthdistrictid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthdistrictid(
      const std::string& value);
  std::string* _internal_mutable_birthdistrictid();

  public:
  // string birthCommuneId = 13 [json_name = "birthCommuneId"];
  void clear_birthcommuneid() ;
  const std::string& birthcommuneid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthcommuneid(Arg_&& arg, Args_... args);
  std::string* mutable_birthcommuneid();
  PROTOBUF_NODISCARD std::string* release_birthcommuneid();
  void set_allocated_birthcommuneid(std::string* value);

  private:
  const std::string& _internal_birthcommuneid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthcommuneid(
      const std::string& value);
  std::string* _internal_mutable_birthcommuneid();

  public:
  // string birthAddress = 15 [json_name = "birthAddress"];
  void clear_birthaddress() ;
  const std::string& birthaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthaddress(Arg_&& arg, Args_... args);
  std::string* mutable_birthaddress();
  PROTOBUF_NODISCARD std::string* release_birthaddress();
  void set_allocated_birthaddress(std::string* value);

  private:
  const std::string& _internal_birthaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthaddress(
      const std::string& value);
  std::string* _internal_mutable_birthaddress();

  public:
  // string nationalityCountryId = 17 [json_name = "nationalityCountryId"];
  void clear_nationalitycountryid() ;
  const std::string& nationalitycountryid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nationalitycountryid(Arg_&& arg, Args_... args);
  std::string* mutable_nationalitycountryid();
  PROTOBUF_NODISCARD std::string* release_nationalitycountryid();
  void set_allocated_nationalitycountryid(std::string* value);

  private:
  const std::string& _internal_nationalitycountryid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nationalitycountryid(
      const std::string& value);
  std::string* _internal_mutable_nationalitycountryid();

  public:
  // string ethnicityId = 18 [json_name = "ethnicityId"];
  void clear_ethnicityid() ;
  const std::string& ethnicityid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ethnicityid(Arg_&& arg, Args_... args);
  std::string* mutable_ethnicityid();
  PROTOBUF_NODISCARD std::string* release_ethnicityid();
  void set_allocated_ethnicityid(std::string* value);

  private:
  const std::string& _internal_ethnicityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ethnicityid(
      const std::string& value);
  std::string* _internal_mutable_ethnicityid();

  public:
  // optional string note = 20 [json_name = "note"];
  bool has_note() const;
  void clear_note() ;
  const std::string& note() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_note(Arg_&& arg, Args_... args);
  std::string* mutable_note();
  PROTOBUF_NODISCARD std::string* release_note();
  void set_allocated_note(std::string* value);

  private:
  const std::string& _internal_note() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_note(
      const std::string& value);
  std::string* _internal_mutable_note();

  public:
  // int64 dateOfBirth = 7 [json_name = "dateOfBirth"];
  void clear_dateofbirth() ;
  ::int64_t dateofbirth() const;
  void set_dateofbirth(::int64_t value);

  private:
  ::int64_t _internal_dateofbirth() const;
  void _internal_set_dateofbirth(::int64_t value);

  public:
  // .core.v1.Gender gender = 8 [json_name = "gender"];
  void clear_gender() ;
  ::core::v1::Gender gender() const;
  void set_gender(::core::v1::Gender value);

  private:
  ::core::v1::Gender _internal_gender() const;
  void _internal_set_gender(::core::v1::Gender value);

  public:
  // .core.v1.Relation relation = 19 [json_name = "relation"];
  void clear_relation() ;
  ::core::v1::Relation relation() const;
  void set_relation(::core::v1::Relation value);

  private:
  ::core::v1::Relation _internal_relation() const;
  void _internal_set_relation(::core::v1::Relation value);

  public:
  // optional bool isDependency = 21 [json_name = "isDependency"];
  bool has_isdependency() const;
  void clear_isdependency() ;
  bool isdependency() const;
  void set_isdependency(bool value);

  private:
  bool _internal_isdependency() const;
  void _internal_set_isdependency(bool value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.SaveEmployeeFamilyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 16, 0,
      210, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SaveEmployeeFamilyRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveEmployeeFamilyRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    ::google::protobuf::internal::ArenaStringPtr socialinsurancenumber_;
    ::google::protobuf::internal::ArenaStringPtr identificationcardnumber_;
    ::google::protobuf::internal::ArenaStringPtr birthcityid_;
    ::google::protobuf::internal::ArenaStringPtr birthdistrictid_;
    ::google::protobuf::internal::ArenaStringPtr birthcommuneid_;
    ::google::protobuf::internal::ArenaStringPtr birthaddress_;
    ::google::protobuf::internal::ArenaStringPtr nationalitycountryid_;
    ::google::protobuf::internal::ArenaStringPtr ethnicityid_;
    ::google::protobuf::internal::ArenaStringPtr note_;
    ::int64_t dateofbirth_;
    int gender_;
    int relation_;
    bool isdependency_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2femployee_5ffamily_2eproto;
};
// -------------------------------------------------------------------

class EmployeeFamily final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.EmployeeFamily) */ {
 public:
  inline EmployeeFamily() : EmployeeFamily(nullptr) {}
  ~EmployeeFamily() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EmployeeFamily(
      ::google::protobuf::internal::ConstantInitialized);

  inline EmployeeFamily(const EmployeeFamily& from) : EmployeeFamily(nullptr, from) {}
  inline EmployeeFamily(EmployeeFamily&& from) noexcept
      : EmployeeFamily(nullptr, std::move(from)) {}
  inline EmployeeFamily& operator=(const EmployeeFamily& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmployeeFamily& operator=(EmployeeFamily&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmployeeFamily& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmployeeFamily* internal_default_instance() {
    return reinterpret_cast<const EmployeeFamily*>(
        &_EmployeeFamily_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EmployeeFamily& a, EmployeeFamily& b) { a.Swap(&b); }
  inline void Swap(EmployeeFamily* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmployeeFamily* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmployeeFamily* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EmployeeFamily>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmployeeFamily& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EmployeeFamily& from) { EmployeeFamily::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmployeeFamily* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.EmployeeFamily"; }

 protected:
  explicit EmployeeFamily(::google::protobuf::Arena* arena);
  EmployeeFamily(::google::protobuf::Arena* arena, const EmployeeFamily& from);
  EmployeeFamily(::google::protobuf::Arena* arena, EmployeeFamily&& from) noexcept
      : EmployeeFamily(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kFullNameFieldNumber = 2,
    kEmployeeIdFieldNumber = 3,
    kEmployeeLabelFieldNumber = 4,
    kSocialInsuranceNumberFieldNumber = 5,
    kIdentificationCardNumberFieldNumber = 6,
    kBirthCityIdFieldNumber = 9,
    kBirthCityLabelFieldNumber = 10,
    kBirthDistrictIdFieldNumber = 11,
    kBirthDistrictLabelFieldNumber = 12,
    kBirthCommuneIdFieldNumber = 13,
    kBirthCommuneLabelFieldNumber = 14,
    kBirthAddressFieldNumber = 15,
    kNationalityCountryIdFieldNumber = 17,
    kEthnicityIdFieldNumber = 18,
    kNoteFieldNumber = 20,
    kCreatedByFieldNumber = 101,
    kCreatedByLabelFieldNumber = 102,
    kUpdatedByFieldNumber = 104,
    kUpdatedByLabelFieldNumber = 105,
    kDeletedByFieldNumber = 107,
    kDeletedByLabelFieldNumber = 108,
    kDateOfBirthFieldNumber = 7,
    kGenderFieldNumber = 8,
    kRelationFieldNumber = 19,
    kCreatedAtFieldNumber = 100,
    kUpdatedAtFieldNumber = 103,
    kDeletedAtFieldNumber = 106,
    kIsDependencyFieldNumber = 21,
  };
  // string id = 1 [json_name = "id", (.api.v1.ts_grid_opts) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string fullName = 2 [json_name = "fullName", (.api.v1.ts_grid_opts) = {
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // string employeeId = 3 [json_name = "employeeId", (.api.v1.ts_grid_opts) = {
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // optional string employeeLabel = 4 [json_name = "employeeLabel", (.api.v1.ts_grid_opts) = {
  bool has_employeelabel() const;
  void clear_employeelabel() ;
  const std::string& employeelabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeelabel(Arg_&& arg, Args_... args);
  std::string* mutable_employeelabel();
  PROTOBUF_NODISCARD std::string* release_employeelabel();
  void set_allocated_employeelabel(std::string* value);

  private:
  const std::string& _internal_employeelabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeelabel(
      const std::string& value);
  std::string* _internal_mutable_employeelabel();

  public:
  // optional string socialInsuranceNumber = 5 [json_name = "socialInsuranceNumber", (.api.v1.ts_grid_opts) = {
  bool has_socialinsurancenumber() const;
  void clear_socialinsurancenumber() ;
  const std::string& socialinsurancenumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_socialinsurancenumber(Arg_&& arg, Args_... args);
  std::string* mutable_socialinsurancenumber();
  PROTOBUF_NODISCARD std::string* release_socialinsurancenumber();
  void set_allocated_socialinsurancenumber(std::string* value);

  private:
  const std::string& _internal_socialinsurancenumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_socialinsurancenumber(
      const std::string& value);
  std::string* _internal_mutable_socialinsurancenumber();

  public:
  // optional string identificationCardNumber = 6 [json_name = "identificationCardNumber", (.api.v1.ts_grid_opts) = {
  bool has_identificationcardnumber() const;
  void clear_identificationcardnumber() ;
  const std::string& identificationcardnumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identificationcardnumber(Arg_&& arg, Args_... args);
  std::string* mutable_identificationcardnumber();
  PROTOBUF_NODISCARD std::string* release_identificationcardnumber();
  void set_allocated_identificationcardnumber(std::string* value);

  private:
  const std::string& _internal_identificationcardnumber() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identificationcardnumber(
      const std::string& value);
  std::string* _internal_mutable_identificationcardnumber();

  public:
  // string birthCityId = 9 [json_name = "birthCityId", (.api.v1.ts_grid_opts) = {
  void clear_birthcityid() ;
  const std::string& birthcityid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthcityid(Arg_&& arg, Args_... args);
  std::string* mutable_birthcityid();
  PROTOBUF_NODISCARD std::string* release_birthcityid();
  void set_allocated_birthcityid(std::string* value);

  private:
  const std::string& _internal_birthcityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthcityid(
      const std::string& value);
  std::string* _internal_mutable_birthcityid();

  public:
  // optional string birthCityLabel = 10 [json_name = "birthCityLabel", (.api.v1.ts_grid_opts) = {
  bool has_birthcitylabel() const;
  void clear_birthcitylabel() ;
  const std::string& birthcitylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthcitylabel(Arg_&& arg, Args_... args);
  std::string* mutable_birthcitylabel();
  PROTOBUF_NODISCARD std::string* release_birthcitylabel();
  void set_allocated_birthcitylabel(std::string* value);

  private:
  const std::string& _internal_birthcitylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthcitylabel(
      const std::string& value);
  std::string* _internal_mutable_birthcitylabel();

  public:
  // string birthDistrictId = 11 [json_name = "birthDistrictId", (.api.v1.ts_grid_opts) = {
  void clear_birthdistrictid() ;
  const std::string& birthdistrictid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthdistrictid(Arg_&& arg, Args_... args);
  std::string* mutable_birthdistrictid();
  PROTOBUF_NODISCARD std::string* release_birthdistrictid();
  void set_allocated_birthdistrictid(std::string* value);

  private:
  const std::string& _internal_birthdistrictid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthdistrictid(
      const std::string& value);
  std::string* _internal_mutable_birthdistrictid();

  public:
  // optional string birthDistrictLabel = 12 [json_name = "birthDistrictLabel", (.api.v1.ts_grid_opts) = {
  bool has_birthdistrictlabel() const;
  void clear_birthdistrictlabel() ;
  const std::string& birthdistrictlabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthdistrictlabel(Arg_&& arg, Args_... args);
  std::string* mutable_birthdistrictlabel();
  PROTOBUF_NODISCARD std::string* release_birthdistrictlabel();
  void set_allocated_birthdistrictlabel(std::string* value);

  private:
  const std::string& _internal_birthdistrictlabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthdistrictlabel(
      const std::string& value);
  std::string* _internal_mutable_birthdistrictlabel();

  public:
  // string birthCommuneId = 13 [json_name = "birthCommuneId", (.api.v1.ts_grid_opts) = {
  void clear_birthcommuneid() ;
  const std::string& birthcommuneid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthcommuneid(Arg_&& arg, Args_... args);
  std::string* mutable_birthcommuneid();
  PROTOBUF_NODISCARD std::string* release_birthcommuneid();
  void set_allocated_birthcommuneid(std::string* value);

  private:
  const std::string& _internal_birthcommuneid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthcommuneid(
      const std::string& value);
  std::string* _internal_mutable_birthcommuneid();

  public:
  // optional string birthCommuneLabel = 14 [json_name = "birthCommuneLabel", (.api.v1.ts_grid_opts) = {
  bool has_birthcommunelabel() const;
  void clear_birthcommunelabel() ;
  const std::string& birthcommunelabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthcommunelabel(Arg_&& arg, Args_... args);
  std::string* mutable_birthcommunelabel();
  PROTOBUF_NODISCARD std::string* release_birthcommunelabel();
  void set_allocated_birthcommunelabel(std::string* value);

  private:
  const std::string& _internal_birthcommunelabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthcommunelabel(
      const std::string& value);
  std::string* _internal_mutable_birthcommunelabel();

  public:
  // string birthAddress = 15 [json_name = "birthAddress", (.api.v1.ts_grid_opts) = {
  void clear_birthaddress() ;
  const std::string& birthaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_birthaddress(Arg_&& arg, Args_... args);
  std::string* mutable_birthaddress();
  PROTOBUF_NODISCARD std::string* release_birthaddress();
  void set_allocated_birthaddress(std::string* value);

  private:
  const std::string& _internal_birthaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_birthaddress(
      const std::string& value);
  std::string* _internal_mutable_birthaddress();

  public:
  // string nationalityCountryId = 17 [json_name = "nationalityCountryId", (.api.v1.ts_grid_opts) = {
  void clear_nationalitycountryid() ;
  const std::string& nationalitycountryid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nationalitycountryid(Arg_&& arg, Args_... args);
  std::string* mutable_nationalitycountryid();
  PROTOBUF_NODISCARD std::string* release_nationalitycountryid();
  void set_allocated_nationalitycountryid(std::string* value);

  private:
  const std::string& _internal_nationalitycountryid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nationalitycountryid(
      const std::string& value);
  std::string* _internal_mutable_nationalitycountryid();

  public:
  // string ethnicityId = 18 [json_name = "ethnicityId", (.api.v1.ts_grid_opts) = {
  void clear_ethnicityid() ;
  const std::string& ethnicityid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ethnicityid(Arg_&& arg, Args_... args);
  std::string* mutable_ethnicityid();
  PROTOBUF_NODISCARD std::string* release_ethnicityid();
  void set_allocated_ethnicityid(std::string* value);

  private:
  const std::string& _internal_ethnicityid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ethnicityid(
      const std::string& value);
  std::string* _internal_mutable_ethnicityid();

  public:
  // optional string note = 20 [json_name = "note", (.api.v1.ts_grid_opts) = {
  bool has_note() const;
  void clear_note() ;
  const std::string& note() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_note(Arg_&& arg, Args_... args);
  std::string* mutable_note();
  PROTOBUF_NODISCARD std::string* release_note();
  void set_allocated_note(std::string* value);

  private:
  const std::string& _internal_note() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_note(
      const std::string& value);
  std::string* _internal_mutable_note();

  public:
  // string createdBy = 101 [json_name = "createdBy"];
  void clear_createdby() ;
  const std::string& createdby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdby(Arg_&& arg, Args_... args);
  std::string* mutable_createdby();
  PROTOBUF_NODISCARD std::string* release_createdby();
  void set_allocated_createdby(std::string* value);

  private:
  const std::string& _internal_createdby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdby(
      const std::string& value);
  std::string* _internal_mutable_createdby();

  public:
  // optional string createdByLabel = 102 [json_name = "createdByLabel"];
  bool has_createdbylabel() const;
  void clear_createdbylabel() ;
  const std::string& createdbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_createdbylabel();
  PROTOBUF_NODISCARD std::string* release_createdbylabel();
  void set_allocated_createdbylabel(std::string* value);

  private:
  const std::string& _internal_createdbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdbylabel(
      const std::string& value);
  std::string* _internal_mutable_createdbylabel();

  public:
  // optional string updatedBy = 104 [json_name = "updatedBy"];
  bool has_updatedby() const;
  void clear_updatedby() ;
  const std::string& updatedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedby(Arg_&& arg, Args_... args);
  std::string* mutable_updatedby();
  PROTOBUF_NODISCARD std::string* release_updatedby();
  void set_allocated_updatedby(std::string* value);

  private:
  const std::string& _internal_updatedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedby(
      const std::string& value);
  std::string* _internal_mutable_updatedby();

  public:
  // optional string updatedByLabel = 105 [json_name = "updatedByLabel"];
  bool has_updatedbylabel() const;
  void clear_updatedbylabel() ;
  const std::string& updatedbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_updatedbylabel();
  PROTOBUF_NODISCARD std::string* release_updatedbylabel();
  void set_allocated_updatedbylabel(std::string* value);

  private:
  const std::string& _internal_updatedbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedbylabel(
      const std::string& value);
  std::string* _internal_mutable_updatedbylabel();

  public:
  // optional string deletedBy = 107 [json_name = "deletedBy"];
  bool has_deletedby() const;
  void clear_deletedby() ;
  const std::string& deletedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedby(Arg_&& arg, Args_... args);
  std::string* mutable_deletedby();
  PROTOBUF_NODISCARD std::string* release_deletedby();
  void set_allocated_deletedby(std::string* value);

  private:
  const std::string& _internal_deletedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedby(
      const std::string& value);
  std::string* _internal_mutable_deletedby();

  public:
  // optional string deletedByLabel = 108 [json_name = "deletedByLabel"];
  bool has_deletedbylabel() const;
  void clear_deletedbylabel() ;
  const std::string& deletedbylabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedbylabel(Arg_&& arg, Args_... args);
  std::string* mutable_deletedbylabel();
  PROTOBUF_NODISCARD std::string* release_deletedbylabel();
  void set_allocated_deletedbylabel(std::string* value);

  private:
  const std::string& _internal_deletedbylabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedbylabel(
      const std::string& value);
  std::string* _internal_mutable_deletedbylabel();

  public:
  // int64 dateOfBirth = 7 [json_name = "dateOfBirth", (.api.v1.ts_grid_opts) = {
  void clear_dateofbirth() ;
  ::int64_t dateofbirth() const;
  void set_dateofbirth(::int64_t value);

  private:
  ::int64_t _internal_dateofbirth() const;
  void _internal_set_dateofbirth(::int64_t value);

  public:
  // .core.v1.Gender gender = 8 [json_name = "gender", (.api.v1.ts_grid_opts) = {
  void clear_gender() ;
  ::core::v1::Gender gender() const;
  void set_gender(::core::v1::Gender value);

  private:
  ::core::v1::Gender _internal_gender() const;
  void _internal_set_gender(::core::v1::Gender value);

  public:
  // .core.v1.Relation relation = 19 [json_name = "relation"];
  void clear_relation() ;
  ::core::v1::Relation relation() const;
  void set_relation(::core::v1::Relation value);

  private:
  ::core::v1::Relation _internal_relation() const;
  void _internal_set_relation(::core::v1::Relation value);

  public:
  // int64 createdAt = 100 [json_name = "createdAt"];
  void clear_createdat() ;
  ::int64_t createdat() const;
  void set_createdat(::int64_t value);

  private:
  ::int64_t _internal_createdat() const;
  void _internal_set_createdat(::int64_t value);

  public:
  // optional int64 updatedAt = 103 [json_name = "updatedAt"];
  bool has_updatedat() const;
  void clear_updatedat() ;
  ::int64_t updatedat() const;
  void set_updatedat(::int64_t value);

  private:
  ::int64_t _internal_updatedat() const;
  void _internal_set_updatedat(::int64_t value);

  public:
  // optional int64 deletedAt = 106 [json_name = "deletedAt"];
  bool has_deletedat() const;
  void clear_deletedat() ;
  ::int64_t deletedat() const;
  void set_deletedat(::int64_t value);

  private:
  ::int64_t _internal_deletedat() const;
  void _internal_set_deletedat(::int64_t value);

  public:
  // optional bool isDependency = 21 [json_name = "isDependency", (.api.v1.ts_grid_opts) = {
  bool has_isdependency() const;
  void clear_isdependency() ;
  bool isdependency() const;
  void set_isdependency(bool value);

  private:
  bool _internal_isdependency() const;
  void _internal_set_isdependency(bool value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.EmployeeFamily)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 29, 0,
      338, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EmployeeFamily_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EmployeeFamily& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    ::google::protobuf::internal::ArenaStringPtr employeelabel_;
    ::google::protobuf::internal::ArenaStringPtr socialinsurancenumber_;
    ::google::protobuf::internal::ArenaStringPtr identificationcardnumber_;
    ::google::protobuf::internal::ArenaStringPtr birthcityid_;
    ::google::protobuf::internal::ArenaStringPtr birthcitylabel_;
    ::google::protobuf::internal::ArenaStringPtr birthdistrictid_;
    ::google::protobuf::internal::ArenaStringPtr birthdistrictlabel_;
    ::google::protobuf::internal::ArenaStringPtr birthcommuneid_;
    ::google::protobuf::internal::ArenaStringPtr birthcommunelabel_;
    ::google::protobuf::internal::ArenaStringPtr birthaddress_;
    ::google::protobuf::internal::ArenaStringPtr nationalitycountryid_;
    ::google::protobuf::internal::ArenaStringPtr ethnicityid_;
    ::google::protobuf::internal::ArenaStringPtr note_;
    ::google::protobuf::internal::ArenaStringPtr createdby_;
    ::google::protobuf::internal::ArenaStringPtr createdbylabel_;
    ::google::protobuf::internal::ArenaStringPtr updatedby_;
    ::google::protobuf::internal::ArenaStringPtr updatedbylabel_;
    ::google::protobuf::internal::ArenaStringPtr deletedby_;
    ::google::protobuf::internal::ArenaStringPtr deletedbylabel_;
    ::int64_t dateofbirth_;
    int gender_;
    int relation_;
    ::int64_t createdat_;
    ::int64_t updatedat_;
    ::int64_t deletedat_;
    bool isdependency_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2femployee_5ffamily_2eproto;
};
// -------------------------------------------------------------------

class ListEmployeeFamilyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.ListEmployeeFamilyResponse) */ {
 public:
  inline ListEmployeeFamilyResponse() : ListEmployeeFamilyResponse(nullptr) {}
  ~ListEmployeeFamilyResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListEmployeeFamilyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListEmployeeFamilyResponse(const ListEmployeeFamilyResponse& from) : ListEmployeeFamilyResponse(nullptr, from) {}
  inline ListEmployeeFamilyResponse(ListEmployeeFamilyResponse&& from) noexcept
      : ListEmployeeFamilyResponse(nullptr, std::move(from)) {}
  inline ListEmployeeFamilyResponse& operator=(const ListEmployeeFamilyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListEmployeeFamilyResponse& operator=(ListEmployeeFamilyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListEmployeeFamilyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListEmployeeFamilyResponse* internal_default_instance() {
    return reinterpret_cast<const ListEmployeeFamilyResponse*>(
        &_ListEmployeeFamilyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListEmployeeFamilyResponse& a, ListEmployeeFamilyResponse& b) { a.Swap(&b); }
  inline void Swap(ListEmployeeFamilyResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListEmployeeFamilyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListEmployeeFamilyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListEmployeeFamilyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListEmployeeFamilyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListEmployeeFamilyResponse& from) { ListEmployeeFamilyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListEmployeeFamilyResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.ListEmployeeFamilyResponse"; }

 protected:
  explicit ListEmployeeFamilyResponse(::google::protobuf::Arena* arena);
  ListEmployeeFamilyResponse(::google::protobuf::Arena* arena, const ListEmployeeFamilyResponse& from);
  ListEmployeeFamilyResponse(::google::protobuf::Arena* arena, ListEmployeeFamilyResponse&& from) noexcept
      : ListEmployeeFamilyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .core.v1.EmployeeFamily items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::core::v1::EmployeeFamily* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>* _internal_mutable_items();
  public:
  const ::core::v1::EmployeeFamily& items(int index) const;
  ::core::v1::EmployeeFamily* add_items();
  const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>& items() const;
  // .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::PaginationResponse& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::PaginationResponse* release_pagination();
  ::api::v1::PaginationResponse* mutable_pagination();
  void set_allocated_pagination(::api::v1::PaginationResponse* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value);
  ::api::v1::PaginationResponse* unsafe_arena_release_pagination();

  private:
  const ::api::v1::PaginationResponse& _internal_pagination() const;
  ::api::v1::PaginationResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:core.v1.ListEmployeeFamilyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListEmployeeFamilyResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListEmployeeFamilyResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::core::v1::EmployeeFamily > items_;
    ::api::v1::PaginationResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2femployee_5ffamily_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EmployeeFamily

// string id = 1 [json_name = "id", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.id)
}
inline std::string* EmployeeFamily::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.id)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void EmployeeFamily::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.id)
  return _impl_.id_.Release();
}
inline void EmployeeFamily::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.id)
}

// string fullName = 2 [json_name = "fullName", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.fullName)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.fullName)
}
inline std::string* EmployeeFamily::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.fullName)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void EmployeeFamily::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.fullName)
  return _impl_.fullname_.Release();
}
inline void EmployeeFamily::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fullname_.IsDefault()) {
          _impl_.fullname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.fullName)
}

// string employeeId = 3 [json_name = "employeeId", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.employeeId)
}
inline std::string* EmployeeFamily::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.employeeId)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void EmployeeFamily::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.employeeId)
  return _impl_.employeeid_.Release();
}
inline void EmployeeFamily::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.employeeId)
}

// optional string employeeLabel = 4 [json_name = "employeeLabel", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_employeelabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EmployeeFamily::clear_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeelabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EmployeeFamily::employeelabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.employeeLabel)
  return _internal_employeelabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_employeelabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.employeelabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.employeeLabel)
}
inline std::string* EmployeeFamily::mutable_employeelabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeelabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.employeeLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_employeelabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeelabel_.Get();
}
inline void EmployeeFamily::_internal_set_employeelabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.employeelabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.employeelabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.employeeLabel)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.employeelabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.employeelabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_employeelabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.employeelabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeelabel_.IsDefault()) {
          _impl_.employeelabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.employeeLabel)
}

// optional string socialInsuranceNumber = 5 [json_name = "socialInsuranceNumber", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_socialinsurancenumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EmployeeFamily::clear_socialinsurancenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.socialinsurancenumber_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EmployeeFamily::socialinsurancenumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.socialInsuranceNumber)
  return _internal_socialinsurancenumber();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_socialinsurancenumber(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.socialinsurancenumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.socialInsuranceNumber)
}
inline std::string* EmployeeFamily::mutable_socialinsurancenumber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_socialinsurancenumber();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.socialInsuranceNumber)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_socialinsurancenumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.socialinsurancenumber_.Get();
}
inline void EmployeeFamily::_internal_set_socialinsurancenumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.socialinsurancenumber_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_socialinsurancenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.socialinsurancenumber_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_socialinsurancenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.socialInsuranceNumber)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.socialinsurancenumber_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.socialinsurancenumber_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_socialinsurancenumber(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.socialinsurancenumber_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.socialinsurancenumber_.IsDefault()) {
          _impl_.socialinsurancenumber_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.socialInsuranceNumber)
}

// optional string identificationCardNumber = 6 [json_name = "identificationCardNumber", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_identificationcardnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EmployeeFamily::clear_identificationcardnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identificationcardnumber_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& EmployeeFamily::identificationcardnumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.identificationCardNumber)
  return _internal_identificationcardnumber();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_identificationcardnumber(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.identificationcardnumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.identificationCardNumber)
}
inline std::string* EmployeeFamily::mutable_identificationcardnumber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identificationcardnumber();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.identificationCardNumber)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_identificationcardnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identificationcardnumber_.Get();
}
inline void EmployeeFamily::_internal_set_identificationcardnumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.identificationcardnumber_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_identificationcardnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.identificationcardnumber_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_identificationcardnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.identificationCardNumber)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.identificationcardnumber_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.identificationcardnumber_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_identificationcardnumber(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.identificationcardnumber_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.identificationcardnumber_.IsDefault()) {
          _impl_.identificationcardnumber_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.identificationCardNumber)
}

// int64 dateOfBirth = 7 [json_name = "dateOfBirth", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_dateofbirth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dateofbirth_ = ::int64_t{0};
}
inline ::int64_t EmployeeFamily::dateofbirth() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.dateOfBirth)
  return _internal_dateofbirth();
}
inline void EmployeeFamily::set_dateofbirth(::int64_t value) {
  _internal_set_dateofbirth(value);
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.dateOfBirth)
}
inline ::int64_t EmployeeFamily::_internal_dateofbirth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dateofbirth_;
}
inline void EmployeeFamily::_internal_set_dateofbirth(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dateofbirth_ = value;
}

// .core.v1.Gender gender = 8 [json_name = "gender", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0;
}
inline ::core::v1::Gender EmployeeFamily::gender() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.gender)
  return _internal_gender();
}
inline void EmployeeFamily::set_gender(::core::v1::Gender value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.gender)
}
inline ::core::v1::Gender EmployeeFamily::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::core::v1::Gender>(_impl_.gender_);
}
inline void EmployeeFamily::_internal_set_gender(::core::v1::Gender value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// string birthCityId = 9 [json_name = "birthCityId", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_birthcityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::birthcityid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthCityId)
  return _internal_birthcityid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthcityid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthCityId)
}
inline std::string* EmployeeFamily::mutable_birthcityid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthcityid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthCityId)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthcityid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthcityid_.Get();
}
inline void EmployeeFamily::_internal_set_birthcityid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthcityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthcityid_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthcityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthCityId)
  return _impl_.birthcityid_.Release();
}
inline void EmployeeFamily::set_allocated_birthcityid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthcityid_.IsDefault()) {
          _impl_.birthcityid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthCityId)
}

// optional string birthCityLabel = 10 [json_name = "birthCityLabel", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_birthcitylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EmployeeFamily::clear_birthcitylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcitylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& EmployeeFamily::birthcitylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthCityLabel)
  return _internal_birthcitylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthcitylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.birthcitylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthCityLabel)
}
inline std::string* EmployeeFamily::mutable_birthcitylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthcitylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthCityLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthcitylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthcitylabel_.Get();
}
inline void EmployeeFamily::_internal_set_birthcitylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.birthcitylabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthcitylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.birthcitylabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthcitylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthCityLabel)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.birthcitylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.birthcitylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_birthcitylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.birthcitylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthcitylabel_.IsDefault()) {
          _impl_.birthcitylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthCityLabel)
}

// string birthDistrictId = 11 [json_name = "birthDistrictId", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_birthdistrictid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::birthdistrictid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthDistrictId)
  return _internal_birthdistrictid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthdistrictid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthDistrictId)
}
inline std::string* EmployeeFamily::mutable_birthdistrictid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthdistrictid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthDistrictId)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthdistrictid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthdistrictid_.Get();
}
inline void EmployeeFamily::_internal_set_birthdistrictid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthdistrictid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthdistrictid_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthdistrictid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthDistrictId)
  return _impl_.birthdistrictid_.Release();
}
inline void EmployeeFamily::set_allocated_birthdistrictid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthdistrictid_.IsDefault()) {
          _impl_.birthdistrictid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthDistrictId)
}

// optional string birthDistrictLabel = 12 [json_name = "birthDistrictLabel", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_birthdistrictlabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EmployeeFamily::clear_birthdistrictlabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictlabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& EmployeeFamily::birthdistrictlabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthDistrictLabel)
  return _internal_birthdistrictlabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthdistrictlabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.birthdistrictlabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthDistrictLabel)
}
inline std::string* EmployeeFamily::mutable_birthdistrictlabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthdistrictlabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthDistrictLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthdistrictlabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthdistrictlabel_.Get();
}
inline void EmployeeFamily::_internal_set_birthdistrictlabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.birthdistrictlabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthdistrictlabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.birthdistrictlabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthdistrictlabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthDistrictLabel)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.birthdistrictlabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.birthdistrictlabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_birthdistrictlabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.birthdistrictlabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthdistrictlabel_.IsDefault()) {
          _impl_.birthdistrictlabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthDistrictLabel)
}

// string birthCommuneId = 13 [json_name = "birthCommuneId", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_birthcommuneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::birthcommuneid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthCommuneId)
  return _internal_birthcommuneid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthcommuneid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthCommuneId)
}
inline std::string* EmployeeFamily::mutable_birthcommuneid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthcommuneid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthCommuneId)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthcommuneid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthcommuneid_.Get();
}
inline void EmployeeFamily::_internal_set_birthcommuneid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthcommuneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthcommuneid_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthcommuneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthCommuneId)
  return _impl_.birthcommuneid_.Release();
}
inline void EmployeeFamily::set_allocated_birthcommuneid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthcommuneid_.IsDefault()) {
          _impl_.birthcommuneid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthCommuneId)
}

// optional string birthCommuneLabel = 14 [json_name = "birthCommuneLabel", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_birthcommunelabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EmployeeFamily::clear_birthcommunelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommunelabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& EmployeeFamily::birthcommunelabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthCommuneLabel)
  return _internal_birthcommunelabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthcommunelabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.birthcommunelabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthCommuneLabel)
}
inline std::string* EmployeeFamily::mutable_birthcommunelabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthcommunelabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthCommuneLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthcommunelabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthcommunelabel_.Get();
}
inline void EmployeeFamily::_internal_set_birthcommunelabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.birthcommunelabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthcommunelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.birthcommunelabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthcommunelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthCommuneLabel)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.birthcommunelabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.birthcommunelabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_birthcommunelabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.birthcommunelabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthcommunelabel_.IsDefault()) {
          _impl_.birthcommunelabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthCommuneLabel)
}

// string birthAddress = 15 [json_name = "birthAddress", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_birthaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::birthaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.birthAddress)
  return _internal_birthaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_birthaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.birthAddress)
}
inline std::string* EmployeeFamily::mutable_birthaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthaddress();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.birthAddress)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_birthaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthaddress_.Get();
}
inline void EmployeeFamily::_internal_set_birthaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_birthaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthaddress_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_birthaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.birthAddress)
  return _impl_.birthaddress_.Release();
}
inline void EmployeeFamily::set_allocated_birthaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthaddress_.IsDefault()) {
          _impl_.birthaddress_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.birthAddress)
}

// string nationalityCountryId = 17 [json_name = "nationalityCountryId", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_nationalitycountryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::nationalitycountryid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.nationalityCountryId)
  return _internal_nationalitycountryid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_nationalitycountryid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.nationalityCountryId)
}
inline std::string* EmployeeFamily::mutable_nationalitycountryid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nationalitycountryid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.nationalityCountryId)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_nationalitycountryid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nationalitycountryid_.Get();
}
inline void EmployeeFamily::_internal_set_nationalitycountryid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_nationalitycountryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nationalitycountryid_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_nationalitycountryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.nationalityCountryId)
  return _impl_.nationalitycountryid_.Release();
}
inline void EmployeeFamily::set_allocated_nationalitycountryid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nationalitycountryid_.IsDefault()) {
          _impl_.nationalitycountryid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.nationalityCountryId)
}

// string ethnicityId = 18 [json_name = "ethnicityId", (.api.v1.ts_grid_opts) = {
inline void EmployeeFamily::clear_ethnicityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::ethnicityid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.ethnicityId)
  return _internal_ethnicityid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_ethnicityid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.ethnicityId)
}
inline std::string* EmployeeFamily::mutable_ethnicityid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ethnicityid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.ethnicityId)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_ethnicityid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ethnicityid_.Get();
}
inline void EmployeeFamily::_internal_set_ethnicityid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_ethnicityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ethnicityid_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_ethnicityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.ethnicityId)
  return _impl_.ethnicityid_.Release();
}
inline void EmployeeFamily::set_allocated_ethnicityid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ethnicityid_.IsDefault()) {
          _impl_.ethnicityid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.ethnicityId)
}

// .core.v1.Relation relation = 19 [json_name = "relation"];
inline void EmployeeFamily::clear_relation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_ = 0;
}
inline ::core::v1::Relation EmployeeFamily::relation() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.relation)
  return _internal_relation();
}
inline void EmployeeFamily::set_relation(::core::v1::Relation value) {
  _internal_set_relation(value);
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.relation)
}
inline ::core::v1::Relation EmployeeFamily::_internal_relation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::core::v1::Relation>(_impl_.relation_);
}
inline void EmployeeFamily::_internal_set_relation(::core::v1::Relation value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_ = value;
}

// optional string note = 20 [json_name = "note", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_note() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EmployeeFamily::clear_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& EmployeeFamily::note() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.note)
  return _internal_note();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_note(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.note_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.note)
}
inline std::string* EmployeeFamily::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.note)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_note() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_.Get();
}
inline void EmployeeFamily::_internal_set_note(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.note_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.note_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.note)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.note_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.note_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_note(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.note_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.note_.IsDefault()) {
          _impl_.note_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.note)
}

// optional bool isDependency = 21 [json_name = "isDependency", (.api.v1.ts_grid_opts) = {
inline bool EmployeeFamily::has_isdependency() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void EmployeeFamily::clear_isdependency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isdependency_ = false;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline bool EmployeeFamily::isdependency() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.isDependency)
  return _internal_isdependency();
}
inline void EmployeeFamily::set_isdependency(bool value) {
  _internal_set_isdependency(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.isDependency)
}
inline bool EmployeeFamily::_internal_isdependency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isdependency_;
}
inline void EmployeeFamily::_internal_set_isdependency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isdependency_ = value;
}

// int64 createdAt = 100 [json_name = "createdAt"];
inline void EmployeeFamily::clear_createdat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = ::int64_t{0};
}
inline ::int64_t EmployeeFamily::createdat() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.createdAt)
  return _internal_createdat();
}
inline void EmployeeFamily::set_createdat(::int64_t value) {
  _internal_set_createdat(value);
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.createdAt)
}
inline ::int64_t EmployeeFamily::_internal_createdat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdat_;
}
inline void EmployeeFamily::_internal_set_createdat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = value;
}

// string createdBy = 101 [json_name = "createdBy"];
inline void EmployeeFamily::clear_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.ClearToEmpty();
}
inline const std::string& EmployeeFamily::createdby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.createdBy)
  return _internal_createdby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_createdby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.createdBy)
}
inline std::string* EmployeeFamily::mutable_createdby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdby();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.createdBy)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_createdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdby_.Get();
}
inline void EmployeeFamily::_internal_set_createdby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.createdby_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.createdBy)
  return _impl_.createdby_.Release();
}
inline void EmployeeFamily::set_allocated_createdby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdby_.IsDefault()) {
          _impl_.createdby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.createdBy)
}

// optional string createdByLabel = 102 [json_name = "createdByLabel"];
inline bool EmployeeFamily::has_createdbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void EmployeeFamily::clear_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& EmployeeFamily::createdbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.createdByLabel)
  return _internal_createdbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_createdbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.createdbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.createdByLabel)
}
inline std::string* EmployeeFamily::mutable_createdbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.createdByLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_createdbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdbylabel_.Get();
}
inline void EmployeeFamily::_internal_set_createdbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.createdbylabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.createdbylabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_createdbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.createdByLabel)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.createdbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.createdbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_createdbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.createdbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdbylabel_.IsDefault()) {
          _impl_.createdbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.createdByLabel)
}

// optional int64 updatedAt = 103 [json_name = "updatedAt"];
inline bool EmployeeFamily::has_updatedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void EmployeeFamily::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t EmployeeFamily::updatedat() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.updatedAt)
  return _internal_updatedat();
}
inline void EmployeeFamily::set_updatedat(::int64_t value) {
  _internal_set_updatedat(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.updatedAt)
}
inline ::int64_t EmployeeFamily::_internal_updatedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedat_;
}
inline void EmployeeFamily::_internal_set_updatedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = value;
}

// optional string updatedBy = 104 [json_name = "updatedBy"];
inline bool EmployeeFamily::has_updatedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void EmployeeFamily::clear_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& EmployeeFamily::updatedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.updatedBy)
  return _internal_updatedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_updatedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.updatedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.updatedBy)
}
inline std::string* EmployeeFamily::mutable_updatedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedby();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.updatedBy)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_updatedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedby_.Get();
}
inline void EmployeeFamily::_internal_set_updatedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.updatedby_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.updatedby_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.updatedBy)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.updatedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_updatedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.updatedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedby_.IsDefault()) {
          _impl_.updatedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.updatedBy)
}

// optional string updatedByLabel = 105 [json_name = "updatedByLabel"];
inline bool EmployeeFamily::has_updatedbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void EmployeeFamily::clear_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& EmployeeFamily::updatedbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.updatedByLabel)
  return _internal_updatedbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_updatedbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.updatedbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.updatedByLabel)
}
inline std::string* EmployeeFamily::mutable_updatedbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.updatedByLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_updatedbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedbylabel_.Get();
}
inline void EmployeeFamily::_internal_set_updatedbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.updatedbylabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.updatedbylabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_updatedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.updatedByLabel)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.updatedbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_updatedbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.updatedbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedbylabel_.IsDefault()) {
          _impl_.updatedbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.updatedByLabel)
}

// optional int64 deletedAt = 106 [json_name = "deletedAt"];
inline bool EmployeeFamily::has_deletedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void EmployeeFamily::clear_deletedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t EmployeeFamily::deletedat() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.deletedAt)
  return _internal_deletedat();
}
inline void EmployeeFamily::set_deletedat(::int64_t value) {
  _internal_set_deletedat(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.deletedAt)
}
inline ::int64_t EmployeeFamily::_internal_deletedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedat_;
}
inline void EmployeeFamily::_internal_set_deletedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = value;
}

// optional string deletedBy = 107 [json_name = "deletedBy"];
inline bool EmployeeFamily::has_deletedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void EmployeeFamily::clear_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const std::string& EmployeeFamily::deletedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.deletedBy)
  return _internal_deletedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_deletedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.deletedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.deletedBy)
}
inline std::string* EmployeeFamily::mutable_deletedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedby();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.deletedBy)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_deletedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedby_.Get();
}
inline void EmployeeFamily::_internal_set_deletedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.deletedby_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  return _impl_.deletedby_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.deletedBy)
  if ((_impl_._has_bits_[0] & 0x00000400u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000400u;
  auto* released = _impl_.deletedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_deletedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.deletedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedby_.IsDefault()) {
          _impl_.deletedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.deletedBy)
}

// optional string deletedByLabel = 108 [json_name = "deletedByLabel"];
inline bool EmployeeFamily::has_deletedbylabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void EmployeeFamily::clear_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedbylabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const std::string& EmployeeFamily::deletedbylabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeFamily.deletedByLabel)
  return _internal_deletedbylabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeFamily::set_deletedbylabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.deletedbylabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeFamily.deletedByLabel)
}
inline std::string* EmployeeFamily::mutable_deletedbylabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedbylabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeFamily.deletedByLabel)
  return _s;
}
inline const std::string& EmployeeFamily::_internal_deletedbylabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedbylabel_.Get();
}
inline void EmployeeFamily::_internal_set_deletedbylabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.deletedbylabel_.Set(value, GetArena());
}
inline std::string* EmployeeFamily::_internal_mutable_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  return _impl_.deletedbylabel_.Mutable( GetArena());
}
inline std::string* EmployeeFamily::release_deletedbylabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeFamily.deletedByLabel)
  if ((_impl_._has_bits_[0] & 0x00000800u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000800u;
  auto* released = _impl_.deletedbylabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedbylabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeFamily::set_allocated_deletedbylabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.deletedbylabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedbylabel_.IsDefault()) {
          _impl_.deletedbylabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeFamily.deletedByLabel)
}

// -------------------------------------------------------------------

// SaveEmployeeFamilyRequest

// string id = 1 [json_name = "id"];
inline void SaveEmployeeFamilyRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.id)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.id)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.id)
  return _impl_.id_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.id)
}

// string fullName = 2 [json_name = "fullName"];
inline void SaveEmployeeFamilyRequest::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.fullName)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.fullName)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.fullName)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.fullName)
  return _impl_.fullname_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fullname_.IsDefault()) {
          _impl_.fullname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.fullName)
}

// string employeeId = 3 [json_name = "employeeId"];
inline void SaveEmployeeFamilyRequest::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.employeeId)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.employeeId)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.employeeId)
  return _impl_.employeeid_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.employeeId)
}

// optional string socialInsuranceNumber = 5 [json_name = "socialInsuranceNumber"];
inline bool SaveEmployeeFamilyRequest::has_socialinsurancenumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SaveEmployeeFamilyRequest::clear_socialinsurancenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.socialinsurancenumber_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SaveEmployeeFamilyRequest::socialinsurancenumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.socialInsuranceNumber)
  return _internal_socialinsurancenumber();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_socialinsurancenumber(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.socialinsurancenumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.socialInsuranceNumber)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_socialinsurancenumber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_socialinsurancenumber();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.socialInsuranceNumber)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_socialinsurancenumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.socialinsurancenumber_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_socialinsurancenumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.socialinsurancenumber_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_socialinsurancenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.socialinsurancenumber_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_socialinsurancenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.socialInsuranceNumber)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.socialinsurancenumber_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.socialinsurancenumber_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void SaveEmployeeFamilyRequest::set_allocated_socialinsurancenumber(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.socialinsurancenumber_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.socialinsurancenumber_.IsDefault()) {
          _impl_.socialinsurancenumber_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.socialInsuranceNumber)
}

// optional string identificationCardNumber = 6 [json_name = "identificationCardNumber"];
inline bool SaveEmployeeFamilyRequest::has_identificationcardnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SaveEmployeeFamilyRequest::clear_identificationcardnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identificationcardnumber_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SaveEmployeeFamilyRequest::identificationcardnumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.identificationCardNumber)
  return _internal_identificationcardnumber();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_identificationcardnumber(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identificationcardnumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.identificationCardNumber)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_identificationcardnumber() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identificationcardnumber();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.identificationCardNumber)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_identificationcardnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identificationcardnumber_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_identificationcardnumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identificationcardnumber_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_identificationcardnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.identificationcardnumber_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_identificationcardnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.identificationCardNumber)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.identificationcardnumber_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.identificationcardnumber_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void SaveEmployeeFamilyRequest::set_allocated_identificationcardnumber(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.identificationcardnumber_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.identificationcardnumber_.IsDefault()) {
          _impl_.identificationcardnumber_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.identificationCardNumber)
}

// int64 dateOfBirth = 7 [json_name = "dateOfBirth"];
inline void SaveEmployeeFamilyRequest::clear_dateofbirth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dateofbirth_ = ::int64_t{0};
}
inline ::int64_t SaveEmployeeFamilyRequest::dateofbirth() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.dateOfBirth)
  return _internal_dateofbirth();
}
inline void SaveEmployeeFamilyRequest::set_dateofbirth(::int64_t value) {
  _internal_set_dateofbirth(value);
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.dateOfBirth)
}
inline ::int64_t SaveEmployeeFamilyRequest::_internal_dateofbirth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dateofbirth_;
}
inline void SaveEmployeeFamilyRequest::_internal_set_dateofbirth(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dateofbirth_ = value;
}

// .core.v1.Gender gender = 8 [json_name = "gender"];
inline void SaveEmployeeFamilyRequest::clear_gender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = 0;
}
inline ::core::v1::Gender SaveEmployeeFamilyRequest::gender() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.gender)
  return _internal_gender();
}
inline void SaveEmployeeFamilyRequest::set_gender(::core::v1::Gender value) {
  _internal_set_gender(value);
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.gender)
}
inline ::core::v1::Gender SaveEmployeeFamilyRequest::_internal_gender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::core::v1::Gender>(_impl_.gender_);
}
inline void SaveEmployeeFamilyRequest::_internal_set_gender(::core::v1::Gender value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gender_ = value;
}

// string birthCityId = 9 [json_name = "birthCityId"];
inline void SaveEmployeeFamilyRequest::clear_birthcityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::birthcityid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.birthCityId)
  return _internal_birthcityid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_birthcityid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.birthCityId)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_birthcityid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthcityid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.birthCityId)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_birthcityid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthcityid_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_birthcityid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_birthcityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthcityid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_birthcityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.birthCityId)
  return _impl_.birthcityid_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_birthcityid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcityid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthcityid_.IsDefault()) {
          _impl_.birthcityid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.birthCityId)
}

// string birthDistrictId = 11 [json_name = "birthDistrictId"];
inline void SaveEmployeeFamilyRequest::clear_birthdistrictid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::birthdistrictid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.birthDistrictId)
  return _internal_birthdistrictid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_birthdistrictid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.birthDistrictId)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_birthdistrictid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthdistrictid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.birthDistrictId)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_birthdistrictid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthdistrictid_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_birthdistrictid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_birthdistrictid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthdistrictid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_birthdistrictid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.birthDistrictId)
  return _impl_.birthdistrictid_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_birthdistrictid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthdistrictid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthdistrictid_.IsDefault()) {
          _impl_.birthdistrictid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.birthDistrictId)
}

// string birthCommuneId = 13 [json_name = "birthCommuneId"];
inline void SaveEmployeeFamilyRequest::clear_birthcommuneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::birthcommuneid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.birthCommuneId)
  return _internal_birthcommuneid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_birthcommuneid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.birthCommuneId)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_birthcommuneid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthcommuneid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.birthCommuneId)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_birthcommuneid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthcommuneid_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_birthcommuneid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_birthcommuneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthcommuneid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_birthcommuneid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.birthCommuneId)
  return _impl_.birthcommuneid_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_birthcommuneid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthcommuneid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthcommuneid_.IsDefault()) {
          _impl_.birthcommuneid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.birthCommuneId)
}

// string birthAddress = 15 [json_name = "birthAddress"];
inline void SaveEmployeeFamilyRequest::clear_birthaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::birthaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.birthAddress)
  return _internal_birthaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_birthaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.birthAddress)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_birthaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_birthaddress();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.birthAddress)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_birthaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.birthaddress_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_birthaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_birthaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.birthaddress_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_birthaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.birthAddress)
  return _impl_.birthaddress_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_birthaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.birthaddress_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.birthaddress_.IsDefault()) {
          _impl_.birthaddress_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.birthAddress)
}

// string nationalityCountryId = 17 [json_name = "nationalityCountryId"];
inline void SaveEmployeeFamilyRequest::clear_nationalitycountryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::nationalitycountryid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.nationalityCountryId)
  return _internal_nationalitycountryid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_nationalitycountryid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.nationalityCountryId)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_nationalitycountryid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nationalitycountryid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.nationalityCountryId)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_nationalitycountryid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nationalitycountryid_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_nationalitycountryid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_nationalitycountryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nationalitycountryid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_nationalitycountryid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.nationalityCountryId)
  return _impl_.nationalitycountryid_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_nationalitycountryid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nationalitycountryid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nationalitycountryid_.IsDefault()) {
          _impl_.nationalitycountryid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.nationalityCountryId)
}

// string ethnicityId = 18 [json_name = "ethnicityId"];
inline void SaveEmployeeFamilyRequest::clear_ethnicityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeFamilyRequest::ethnicityid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.ethnicityId)
  return _internal_ethnicityid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_ethnicityid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.ethnicityId)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_ethnicityid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ethnicityid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.ethnicityId)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_ethnicityid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ethnicityid_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_ethnicityid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_ethnicityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ethnicityid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_ethnicityid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.ethnicityId)
  return _impl_.ethnicityid_.Release();
}
inline void SaveEmployeeFamilyRequest::set_allocated_ethnicityid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ethnicityid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ethnicityid_.IsDefault()) {
          _impl_.ethnicityid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.ethnicityId)
}

// .core.v1.Relation relation = 19 [json_name = "relation"];
inline void SaveEmployeeFamilyRequest::clear_relation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_ = 0;
}
inline ::core::v1::Relation SaveEmployeeFamilyRequest::relation() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.relation)
  return _internal_relation();
}
inline void SaveEmployeeFamilyRequest::set_relation(::core::v1::Relation value) {
  _internal_set_relation(value);
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.relation)
}
inline ::core::v1::Relation SaveEmployeeFamilyRequest::_internal_relation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::core::v1::Relation>(_impl_.relation_);
}
inline void SaveEmployeeFamilyRequest::_internal_set_relation(::core::v1::Relation value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relation_ = value;
}

// optional string note = 20 [json_name = "note"];
inline bool SaveEmployeeFamilyRequest::has_note() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SaveEmployeeFamilyRequest::clear_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.note_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SaveEmployeeFamilyRequest::note() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.note)
  return _internal_note();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeFamilyRequest::set_note(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.note_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.note)
}
inline std::string* SaveEmployeeFamilyRequest::mutable_note() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_note();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeFamilyRequest.note)
  return _s;
}
inline const std::string& SaveEmployeeFamilyRequest::_internal_note() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.note_.Get();
}
inline void SaveEmployeeFamilyRequest::_internal_set_note(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.note_.Set(value, GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::_internal_mutable_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.note_.Mutable( GetArena());
}
inline std::string* SaveEmployeeFamilyRequest::release_note() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeFamilyRequest.note)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.note_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.note_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void SaveEmployeeFamilyRequest::set_allocated_note(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.note_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.note_.IsDefault()) {
          _impl_.note_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeFamilyRequest.note)
}

// optional bool isDependency = 21 [json_name = "isDependency"];
inline bool SaveEmployeeFamilyRequest::has_isdependency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void SaveEmployeeFamilyRequest::clear_isdependency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isdependency_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool SaveEmployeeFamilyRequest::isdependency() const {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeFamilyRequest.isDependency)
  return _internal_isdependency();
}
inline void SaveEmployeeFamilyRequest::set_isdependency(bool value) {
  _internal_set_isdependency(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeFamilyRequest.isDependency)
}
inline bool SaveEmployeeFamilyRequest::_internal_isdependency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isdependency_;
}
inline void SaveEmployeeFamilyRequest::_internal_set_isdependency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isdependency_ = value;
}

// -------------------------------------------------------------------

// ListEmployeeFamilyResponse

// repeated .core.v1.EmployeeFamily items = 1 [json_name = "items"];
inline int ListEmployeeFamilyResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ListEmployeeFamilyResponse::items_size() const {
  return _internal_items_size();
}
inline void ListEmployeeFamilyResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::core::v1::EmployeeFamily* ListEmployeeFamilyResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:core.v1.ListEmployeeFamilyResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>* ListEmployeeFamilyResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:core.v1.ListEmployeeFamilyResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::core::v1::EmployeeFamily& ListEmployeeFamilyResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListEmployeeFamilyResponse.items)
  return _internal_items().Get(index);
}
inline ::core::v1::EmployeeFamily* ListEmployeeFamilyResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::core::v1::EmployeeFamily* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:core.v1.ListEmployeeFamilyResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>& ListEmployeeFamilyResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:core.v1.ListEmployeeFamilyResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>&
ListEmployeeFamilyResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeFamily>*
ListEmployeeFamilyResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
inline bool ListEmployeeFamilyResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::api::v1::PaginationResponse& ListEmployeeFamilyResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::PaginationResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::PaginationResponse&>(::api::v1::_PaginationResponse_default_instance_);
}
inline const ::api::v1::PaginationResponse& ListEmployeeFamilyResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListEmployeeFamilyResponse.pagination)
  return _internal_pagination();
}
inline void ListEmployeeFamilyResponse::unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.v1.ListEmployeeFamilyResponse.pagination)
}
inline ::api::v1::PaginationResponse* ListEmployeeFamilyResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::PaginationResponse* ListEmployeeFamilyResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.ListEmployeeFamilyResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::PaginationResponse* ListEmployeeFamilyResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::PaginationResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::PaginationResponse* ListEmployeeFamilyResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::PaginationResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:core.v1.ListEmployeeFamilyResponse.pagination)
  return _msg;
}
inline void ListEmployeeFamilyResponse::set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.v1.ListEmployeeFamilyResponse.pagination)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace core


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::core::v1::Relation> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::core::v1::Relation>() {
  return ::core::v1::Relation_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2femployee_5ffamily_2eproto_2epb_2eh
