// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core/v1/employee_image.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2femployee_5fimage_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2femployee_5fimage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "api/v1/base.pb.h"
#include "api/v1/generators.pb.h"
#include "api/v1/permissions.pb.h"
#include "buf/validate/validate.pb.h"
#include "google/protobuf/empty.pb.h"
#include "core/v1/employee.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_core_2fv1_2femployee_5fimage_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2fv1_2femployee_5fimage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_core_2fv1_2femployee_5fimage_2eproto;
namespace core {
namespace v1 {
class EmployeeImage;
struct EmployeeImageDefaultTypeInternal;
extern EmployeeImageDefaultTypeInternal _EmployeeImage_default_instance_;
class ListEmployeeImageResponse;
struct ListEmployeeImageResponseDefaultTypeInternal;
extern ListEmployeeImageResponseDefaultTypeInternal _ListEmployeeImageResponse_default_instance_;
class SaveEmployeeImageRequest;
struct SaveEmployeeImageRequestDefaultTypeInternal;
extern SaveEmployeeImageRequestDefaultTypeInternal _SaveEmployeeImageRequest_default_instance_;
}  // namespace v1
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SaveEmployeeImageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.SaveEmployeeImageRequest) */ {
 public:
  inline SaveEmployeeImageRequest() : SaveEmployeeImageRequest(nullptr) {}
  ~SaveEmployeeImageRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveEmployeeImageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveEmployeeImageRequest(const SaveEmployeeImageRequest& from) : SaveEmployeeImageRequest(nullptr, from) {}
  inline SaveEmployeeImageRequest(SaveEmployeeImageRequest&& from) noexcept
      : SaveEmployeeImageRequest(nullptr, std::move(from)) {}
  inline SaveEmployeeImageRequest& operator=(const SaveEmployeeImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveEmployeeImageRequest& operator=(SaveEmployeeImageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveEmployeeImageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveEmployeeImageRequest* internal_default_instance() {
    return reinterpret_cast<const SaveEmployeeImageRequest*>(
        &_SaveEmployeeImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SaveEmployeeImageRequest& a, SaveEmployeeImageRequest& b) { a.Swap(&b); }
  inline void Swap(SaveEmployeeImageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveEmployeeImageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveEmployeeImageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SaveEmployeeImageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveEmployeeImageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveEmployeeImageRequest& from) { SaveEmployeeImageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SaveEmployeeImageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.SaveEmployeeImageRequest"; }

 protected:
  explicit SaveEmployeeImageRequest(::google::protobuf::Arena* arena);
  SaveEmployeeImageRequest(::google::protobuf::Arena* arena, const SaveEmployeeImageRequest& from);
  SaveEmployeeImageRequest(::google::protobuf::Arena* arena, SaveEmployeeImageRequest&& from) noexcept
      : SaveEmployeeImageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kEmployeeIdFieldNumber = 2,
    kImageFieldNumber = 4,
    kEmbeddingVectorFieldNumber = 5,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string employeeId = 2 [json_name = "employeeId"];
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // string image = 4 [json_name = "image"];
  void clear_image() ;
  const std::string& image() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image(Arg_&& arg, Args_... args);
  std::string* mutable_image();
  PROTOBUF_NODISCARD std::string* release_image();
  void set_allocated_image(std::string* value);

  private:
  const std::string& _internal_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image(
      const std::string& value);
  std::string* _internal_mutable_image();

  public:
  // string embeddingVector = 5 [json_name = "embeddingVector"];
  void clear_embeddingvector() ;
  const std::string& embeddingvector() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_embeddingvector(Arg_&& arg, Args_... args);
  std::string* mutable_embeddingvector();
  PROTOBUF_NODISCARD std::string* release_embeddingvector();
  void set_allocated_embeddingvector(std::string* value);

  private:
  const std::string& _internal_embeddingvector() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_embeddingvector(
      const std::string& value);
  std::string* _internal_mutable_embeddingvector();

  public:
  // @@protoc_insertion_point(class_scope:core.v1.SaveEmployeeImageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 0,
      73, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SaveEmployeeImageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveEmployeeImageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    ::google::protobuf::internal::ArenaStringPtr image_;
    ::google::protobuf::internal::ArenaStringPtr embeddingvector_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2femployee_5fimage_2eproto;
};
// -------------------------------------------------------------------

class EmployeeImage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.EmployeeImage) */ {
 public:
  inline EmployeeImage() : EmployeeImage(nullptr) {}
  ~EmployeeImage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EmployeeImage(
      ::google::protobuf::internal::ConstantInitialized);

  inline EmployeeImage(const EmployeeImage& from) : EmployeeImage(nullptr, from) {}
  inline EmployeeImage(EmployeeImage&& from) noexcept
      : EmployeeImage(nullptr, std::move(from)) {}
  inline EmployeeImage& operator=(const EmployeeImage& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmployeeImage& operator=(EmployeeImage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmployeeImage& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmployeeImage* internal_default_instance() {
    return reinterpret_cast<const EmployeeImage*>(
        &_EmployeeImage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EmployeeImage& a, EmployeeImage& b) { a.Swap(&b); }
  inline void Swap(EmployeeImage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmployeeImage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmployeeImage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EmployeeImage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmployeeImage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EmployeeImage& from) { EmployeeImage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmployeeImage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.EmployeeImage"; }

 protected:
  explicit EmployeeImage(::google::protobuf::Arena* arena);
  EmployeeImage(::google::protobuf::Arena* arena, const EmployeeImage& from);
  EmployeeImage(::google::protobuf::Arena* arena, EmployeeImage&& from) noexcept
      : EmployeeImage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kEmployeeIdFieldNumber = 2,
    kEmployeeLabelFieldNumber = 3,
    kImageFieldNumber = 4,
    kEmbeddingVectorFieldNumber = 5,
    kCreatedByFieldNumber = 22,
    kCreatedByNameFieldNumber = 23,
    kCreatedByEmailFieldNumber = 24,
    kUpdatedByFieldNumber = 26,
    kUpdatedByNameFieldNumber = 27,
    kUpdatedByEmailFieldNumber = 28,
    kDeletedByFieldNumber = 30,
    kDeletedByNameFieldNumber = 31,
    kDeletedByEmailFieldNumber = 32,
    kUpdatedAtFieldNumber = 25,
    kDeletedAtFieldNumber = 29,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string employeeId = 2 [json_name = "employeeId", (.api.v1.ts_grid_opts) = {
  void clear_employeeid() ;
  const std::string& employeeid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeeid(Arg_&& arg, Args_... args);
  std::string* mutable_employeeid();
  PROTOBUF_NODISCARD std::string* release_employeeid();
  void set_allocated_employeeid(std::string* value);

  private:
  const std::string& _internal_employeeid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeeid(
      const std::string& value);
  std::string* _internal_mutable_employeeid();

  public:
  // optional string employeeLabel = 3 [json_name = "employeeLabel", (.api.v1.ts_grid_opts) = {
  bool has_employeelabel() const;
  void clear_employeelabel() ;
  const std::string& employeelabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_employeelabel(Arg_&& arg, Args_... args);
  std::string* mutable_employeelabel();
  PROTOBUF_NODISCARD std::string* release_employeelabel();
  void set_allocated_employeelabel(std::string* value);

  private:
  const std::string& _internal_employeelabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_employeelabel(
      const std::string& value);
  std::string* _internal_mutable_employeelabel();

  public:
  // string image = 4 [json_name = "image"];
  void clear_image() ;
  const std::string& image() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image(Arg_&& arg, Args_... args);
  std::string* mutable_image();
  PROTOBUF_NODISCARD std::string* release_image();
  void set_allocated_image(std::string* value);

  private:
  const std::string& _internal_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image(
      const std::string& value);
  std::string* _internal_mutable_image();

  public:
  // string embeddingVector = 5 [json_name = "embeddingVector"];
  void clear_embeddingvector() ;
  const std::string& embeddingvector() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_embeddingvector(Arg_&& arg, Args_... args);
  std::string* mutable_embeddingvector();
  PROTOBUF_NODISCARD std::string* release_embeddingvector();
  void set_allocated_embeddingvector(std::string* value);

  private:
  const std::string& _internal_embeddingvector() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_embeddingvector(
      const std::string& value);
  std::string* _internal_mutable_embeddingvector();

  public:
  // optional string createdBy = 22 [json_name = "createdBy"];
  bool has_createdby() const;
  void clear_createdby() ;
  const std::string& createdby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdby(Arg_&& arg, Args_... args);
  std::string* mutable_createdby();
  PROTOBUF_NODISCARD std::string* release_createdby();
  void set_allocated_createdby(std::string* value);

  private:
  const std::string& _internal_createdby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdby(
      const std::string& value);
  std::string* _internal_mutable_createdby();

  public:
  // optional string createdByName = 23 [json_name = "createdByName"];
  bool has_createdbyname() const;
  void clear_createdbyname() ;
  const std::string& createdbyname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdbyname(Arg_&& arg, Args_... args);
  std::string* mutable_createdbyname();
  PROTOBUF_NODISCARD std::string* release_createdbyname();
  void set_allocated_createdbyname(std::string* value);

  private:
  const std::string& _internal_createdbyname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdbyname(
      const std::string& value);
  std::string* _internal_mutable_createdbyname();

  public:
  // optional string createdByEmail = 24 [json_name = "createdByEmail"];
  bool has_createdbyemail() const;
  void clear_createdbyemail() ;
  const std::string& createdbyemail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdbyemail(Arg_&& arg, Args_... args);
  std::string* mutable_createdbyemail();
  PROTOBUF_NODISCARD std::string* release_createdbyemail();
  void set_allocated_createdbyemail(std::string* value);

  private:
  const std::string& _internal_createdbyemail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdbyemail(
      const std::string& value);
  std::string* _internal_mutable_createdbyemail();

  public:
  // optional string updatedBy = 26 [json_name = "updatedBy"];
  bool has_updatedby() const;
  void clear_updatedby() ;
  const std::string& updatedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedby(Arg_&& arg, Args_... args);
  std::string* mutable_updatedby();
  PROTOBUF_NODISCARD std::string* release_updatedby();
  void set_allocated_updatedby(std::string* value);

  private:
  const std::string& _internal_updatedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedby(
      const std::string& value);
  std::string* _internal_mutable_updatedby();

  public:
  // optional string updatedByName = 27 [json_name = "updatedByName"];
  bool has_updatedbyname() const;
  void clear_updatedbyname() ;
  const std::string& updatedbyname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedbyname(Arg_&& arg, Args_... args);
  std::string* mutable_updatedbyname();
  PROTOBUF_NODISCARD std::string* release_updatedbyname();
  void set_allocated_updatedbyname(std::string* value);

  private:
  const std::string& _internal_updatedbyname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedbyname(
      const std::string& value);
  std::string* _internal_mutable_updatedbyname();

  public:
  // optional string updatedByEmail = 28 [json_name = "updatedByEmail"];
  bool has_updatedbyemail() const;
  void clear_updatedbyemail() ;
  const std::string& updatedbyemail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedbyemail(Arg_&& arg, Args_... args);
  std::string* mutable_updatedbyemail();
  PROTOBUF_NODISCARD std::string* release_updatedbyemail();
  void set_allocated_updatedbyemail(std::string* value);

  private:
  const std::string& _internal_updatedbyemail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedbyemail(
      const std::string& value);
  std::string* _internal_mutable_updatedbyemail();

  public:
  // optional string deletedBy = 30 [json_name = "deletedBy"];
  bool has_deletedby() const;
  void clear_deletedby() ;
  const std::string& deletedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedby(Arg_&& arg, Args_... args);
  std::string* mutable_deletedby();
  PROTOBUF_NODISCARD std::string* release_deletedby();
  void set_allocated_deletedby(std::string* value);

  private:
  const std::string& _internal_deletedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedby(
      const std::string& value);
  std::string* _internal_mutable_deletedby();

  public:
  // optional string deletedByName = 31 [json_name = "deletedByName"];
  bool has_deletedbyname() const;
  void clear_deletedbyname() ;
  const std::string& deletedbyname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedbyname(Arg_&& arg, Args_... args);
  std::string* mutable_deletedbyname();
  PROTOBUF_NODISCARD std::string* release_deletedbyname();
  void set_allocated_deletedbyname(std::string* value);

  private:
  const std::string& _internal_deletedbyname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedbyname(
      const std::string& value);
  std::string* _internal_mutable_deletedbyname();

  public:
  // optional string deletedByEmail = 32 [json_name = "deletedByEmail"];
  bool has_deletedbyemail() const;
  void clear_deletedbyemail() ;
  const std::string& deletedbyemail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedbyemail(Arg_&& arg, Args_... args);
  std::string* mutable_deletedbyemail();
  PROTOBUF_NODISCARD std::string* release_deletedbyemail();
  void set_allocated_deletedbyemail(std::string* value);

  private:
  const std::string& _internal_deletedbyemail() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedbyemail(
      const std::string& value);
  std::string* _internal_mutable_deletedbyemail();

  public:
  // optional int64 updatedAt = 25 [json_name = "updatedAt"];
  bool has_updatedat() const;
  void clear_updatedat() ;
  ::int64_t updatedat() const;
  void set_updatedat(::int64_t value);

  private:
  ::int64_t _internal_updatedat() const;
  void _internal_set_updatedat(::int64_t value);

  public:
  // optional int64 deletedAt = 29 [json_name = "deletedAt"];
  bool has_deletedat() const;
  void clear_deletedat() ;
  ::int64_t deletedat() const;
  void set_deletedat(::int64_t value);

  private:
  ::int64_t _internal_deletedat() const;
  void _internal_set_deletedat(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.v1.EmployeeImage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 0,
      199, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EmployeeImage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EmployeeImage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr employeeid_;
    ::google::protobuf::internal::ArenaStringPtr employeelabel_;
    ::google::protobuf::internal::ArenaStringPtr image_;
    ::google::protobuf::internal::ArenaStringPtr embeddingvector_;
    ::google::protobuf::internal::ArenaStringPtr createdby_;
    ::google::protobuf::internal::ArenaStringPtr createdbyname_;
    ::google::protobuf::internal::ArenaStringPtr createdbyemail_;
    ::google::protobuf::internal::ArenaStringPtr updatedby_;
    ::google::protobuf::internal::ArenaStringPtr updatedbyname_;
    ::google::protobuf::internal::ArenaStringPtr updatedbyemail_;
    ::google::protobuf::internal::ArenaStringPtr deletedby_;
    ::google::protobuf::internal::ArenaStringPtr deletedbyname_;
    ::google::protobuf::internal::ArenaStringPtr deletedbyemail_;
    ::int64_t updatedat_;
    ::int64_t deletedat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2femployee_5fimage_2eproto;
};
// -------------------------------------------------------------------

class ListEmployeeImageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.v1.ListEmployeeImageResponse) */ {
 public:
  inline ListEmployeeImageResponse() : ListEmployeeImageResponse(nullptr) {}
  ~ListEmployeeImageResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListEmployeeImageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListEmployeeImageResponse(const ListEmployeeImageResponse& from) : ListEmployeeImageResponse(nullptr, from) {}
  inline ListEmployeeImageResponse(ListEmployeeImageResponse&& from) noexcept
      : ListEmployeeImageResponse(nullptr, std::move(from)) {}
  inline ListEmployeeImageResponse& operator=(const ListEmployeeImageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListEmployeeImageResponse& operator=(ListEmployeeImageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListEmployeeImageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListEmployeeImageResponse* internal_default_instance() {
    return reinterpret_cast<const ListEmployeeImageResponse*>(
        &_ListEmployeeImageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListEmployeeImageResponse& a, ListEmployeeImageResponse& b) { a.Swap(&b); }
  inline void Swap(ListEmployeeImageResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListEmployeeImageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListEmployeeImageResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListEmployeeImageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListEmployeeImageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListEmployeeImageResponse& from) { ListEmployeeImageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListEmployeeImageResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "core.v1.ListEmployeeImageResponse"; }

 protected:
  explicit ListEmployeeImageResponse(::google::protobuf::Arena* arena);
  ListEmployeeImageResponse(::google::protobuf::Arena* arena, const ListEmployeeImageResponse& from);
  ListEmployeeImageResponse(::google::protobuf::Arena* arena, ListEmployeeImageResponse&& from) noexcept
      : ListEmployeeImageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .core.v1.EmployeeImage items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::core::v1::EmployeeImage* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>* _internal_mutable_items();
  public:
  const ::core::v1::EmployeeImage& items(int index) const;
  ::core::v1::EmployeeImage* add_items();
  const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>& items() const;
  // .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::PaginationResponse& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::PaginationResponse* release_pagination();
  ::api::v1::PaginationResponse* mutable_pagination();
  void set_allocated_pagination(::api::v1::PaginationResponse* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value);
  ::api::v1::PaginationResponse* unsafe_arena_release_pagination();

  private:
  const ::api::v1::PaginationResponse& _internal_pagination() const;
  ::api::v1::PaginationResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:core.v1.ListEmployeeImageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListEmployeeImageResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListEmployeeImageResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::core::v1::EmployeeImage > items_;
    ::api::v1::PaginationResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_core_2fv1_2femployee_5fimage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EmployeeImage

// string id = 1 [json_name = "id"];
inline void EmployeeImage::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& EmployeeImage::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.id)
}
inline std::string* EmployeeImage::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.id)
  return _s;
}
inline const std::string& EmployeeImage::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void EmployeeImage::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.id)
  return _impl_.id_.Release();
}
inline void EmployeeImage::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.id)
}

// string employeeId = 2 [json_name = "employeeId", (.api.v1.ts_grid_opts) = {
inline void EmployeeImage::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& EmployeeImage::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.employeeId)
}
inline std::string* EmployeeImage::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.employeeId)
  return _s;
}
inline const std::string& EmployeeImage::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void EmployeeImage::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.employeeId)
  return _impl_.employeeid_.Release();
}
inline void EmployeeImage::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.employeeId)
}

// optional string employeeLabel = 3 [json_name = "employeeLabel", (.api.v1.ts_grid_opts) = {
inline bool EmployeeImage::has_employeelabel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EmployeeImage::clear_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeelabel_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EmployeeImage::employeelabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.employeeLabel)
  return _internal_employeelabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_employeelabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.employeelabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.employeeLabel)
}
inline std::string* EmployeeImage::mutable_employeelabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeelabel();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.employeeLabel)
  return _s;
}
inline const std::string& EmployeeImage::_internal_employeelabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeelabel_.Get();
}
inline void EmployeeImage::_internal_set_employeelabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.employeelabel_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.employeelabel_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_employeelabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.employeeLabel)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.employeelabel_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.employeelabel_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_employeelabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.employeelabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeelabel_.IsDefault()) {
          _impl_.employeelabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.employeeLabel)
}

// string image = 4 [json_name = "image"];
inline void EmployeeImage::clear_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.ClearToEmpty();
}
inline const std::string& EmployeeImage::image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.image)
  return _internal_image();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_image(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.image)
}
inline std::string* EmployeeImage::mutable_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.image)
  return _s;
}
inline const std::string& EmployeeImage::_internal_image() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_.Get();
}
inline void EmployeeImage::_internal_set_image(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.image)
  return _impl_.image_.Release();
}
inline void EmployeeImage::set_allocated_image(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.image_.IsDefault()) {
          _impl_.image_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.image)
}

// string embeddingVector = 5 [json_name = "embeddingVector"];
inline void EmployeeImage::clear_embeddingvector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.ClearToEmpty();
}
inline const std::string& EmployeeImage::embeddingvector() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.embeddingVector)
  return _internal_embeddingvector();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_embeddingvector(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.embeddingVector)
}
inline std::string* EmployeeImage::mutable_embeddingvector() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_embeddingvector();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.embeddingVector)
  return _s;
}
inline const std::string& EmployeeImage::_internal_embeddingvector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.embeddingvector_.Get();
}
inline void EmployeeImage::_internal_set_embeddingvector(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_embeddingvector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.embeddingvector_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_embeddingvector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.embeddingVector)
  return _impl_.embeddingvector_.Release();
}
inline void EmployeeImage::set_allocated_embeddingvector(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.embeddingvector_.IsDefault()) {
          _impl_.embeddingvector_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.embeddingVector)
}

// optional string createdBy = 22 [json_name = "createdBy"];
inline bool EmployeeImage::has_createdby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EmployeeImage::clear_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EmployeeImage::createdby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.createdBy)
  return _internal_createdby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_createdby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.createdby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.createdBy)
}
inline std::string* EmployeeImage::mutable_createdby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdby();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.createdBy)
  return _s;
}
inline const std::string& EmployeeImage::_internal_createdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdby_.Get();
}
inline void EmployeeImage::_internal_set_createdby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.createdby_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.createdby_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.createdBy)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.createdby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.createdby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_createdby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.createdby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdby_.IsDefault()) {
          _impl_.createdby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.createdBy)
}

// optional string createdByName = 23 [json_name = "createdByName"];
inline bool EmployeeImage::has_createdbyname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EmployeeImage::clear_createdbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdbyname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& EmployeeImage::createdbyname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.createdByName)
  return _internal_createdbyname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_createdbyname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.createdbyname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.createdByName)
}
inline std::string* EmployeeImage::mutable_createdbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdbyname();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.createdByName)
  return _s;
}
inline const std::string& EmployeeImage::_internal_createdbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdbyname_.Get();
}
inline void EmployeeImage::_internal_set_createdbyname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.createdbyname_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_createdbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.createdbyname_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_createdbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.createdByName)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.createdbyname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.createdbyname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_createdbyname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.createdbyname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdbyname_.IsDefault()) {
          _impl_.createdbyname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.createdByName)
}

// optional string createdByEmail = 24 [json_name = "createdByEmail"];
inline bool EmployeeImage::has_createdbyemail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EmployeeImage::clear_createdbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdbyemail_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& EmployeeImage::createdbyemail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.createdByEmail)
  return _internal_createdbyemail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_createdbyemail(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.createdbyemail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.createdByEmail)
}
inline std::string* EmployeeImage::mutable_createdbyemail() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdbyemail();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.createdByEmail)
  return _s;
}
inline const std::string& EmployeeImage::_internal_createdbyemail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdbyemail_.Get();
}
inline void EmployeeImage::_internal_set_createdbyemail(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.createdbyemail_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_createdbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.createdbyemail_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_createdbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.createdByEmail)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.createdbyemail_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.createdbyemail_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_createdbyemail(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.createdbyemail_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdbyemail_.IsDefault()) {
          _impl_.createdbyemail_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.createdByEmail)
}

// optional int64 updatedAt = 25 [json_name = "updatedAt"];
inline bool EmployeeImage::has_updatedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void EmployeeImage::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int64_t EmployeeImage::updatedat() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.updatedAt)
  return _internal_updatedat();
}
inline void EmployeeImage::set_updatedat(::int64_t value) {
  _internal_set_updatedat(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.updatedAt)
}
inline ::int64_t EmployeeImage::_internal_updatedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedat_;
}
inline void EmployeeImage::_internal_set_updatedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = value;
}

// optional string updatedBy = 26 [json_name = "updatedBy"];
inline bool EmployeeImage::has_updatedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EmployeeImage::clear_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& EmployeeImage::updatedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.updatedBy)
  return _internal_updatedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_updatedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.updatedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.updatedBy)
}
inline std::string* EmployeeImage::mutable_updatedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedby();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.updatedBy)
  return _s;
}
inline const std::string& EmployeeImage::_internal_updatedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedby_.Get();
}
inline void EmployeeImage::_internal_set_updatedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.updatedby_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.updatedby_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.updatedBy)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.updatedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_updatedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.updatedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedby_.IsDefault()) {
          _impl_.updatedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.updatedBy)
}

// optional string updatedByName = 27 [json_name = "updatedByName"];
inline bool EmployeeImage::has_updatedbyname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EmployeeImage::clear_updatedbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedbyname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& EmployeeImage::updatedbyname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.updatedByName)
  return _internal_updatedbyname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_updatedbyname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.updatedbyname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.updatedByName)
}
inline std::string* EmployeeImage::mutable_updatedbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedbyname();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.updatedByName)
  return _s;
}
inline const std::string& EmployeeImage::_internal_updatedbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedbyname_.Get();
}
inline void EmployeeImage::_internal_set_updatedbyname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.updatedbyname_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_updatedbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.updatedbyname_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_updatedbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.updatedByName)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.updatedbyname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedbyname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_updatedbyname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.updatedbyname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedbyname_.IsDefault()) {
          _impl_.updatedbyname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.updatedByName)
}

// optional string updatedByEmail = 28 [json_name = "updatedByEmail"];
inline bool EmployeeImage::has_updatedbyemail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EmployeeImage::clear_updatedbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedbyemail_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& EmployeeImage::updatedbyemail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.updatedByEmail)
  return _internal_updatedbyemail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_updatedbyemail(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.updatedbyemail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.updatedByEmail)
}
inline std::string* EmployeeImage::mutable_updatedbyemail() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedbyemail();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.updatedByEmail)
  return _s;
}
inline const std::string& EmployeeImage::_internal_updatedbyemail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedbyemail_.Get();
}
inline void EmployeeImage::_internal_set_updatedbyemail(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.updatedbyemail_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_updatedbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.updatedbyemail_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_updatedbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.updatedByEmail)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.updatedbyemail_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedbyemail_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_updatedbyemail(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.updatedbyemail_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedbyemail_.IsDefault()) {
          _impl_.updatedbyemail_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.updatedByEmail)
}

// optional int64 deletedAt = 29 [json_name = "deletedAt"];
inline bool EmployeeImage::has_deletedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void EmployeeImage::clear_deletedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int64_t EmployeeImage::deletedat() const {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.deletedAt)
  return _internal_deletedat();
}
inline void EmployeeImage::set_deletedat(::int64_t value) {
  _internal_set_deletedat(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.deletedAt)
}
inline ::int64_t EmployeeImage::_internal_deletedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedat_;
}
inline void EmployeeImage::_internal_set_deletedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = value;
}

// optional string deletedBy = 30 [json_name = "deletedBy"];
inline bool EmployeeImage::has_deletedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void EmployeeImage::clear_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& EmployeeImage::deletedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.deletedBy)
  return _internal_deletedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_deletedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.deletedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.deletedBy)
}
inline std::string* EmployeeImage::mutable_deletedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedby();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.deletedBy)
  return _s;
}
inline const std::string& EmployeeImage::_internal_deletedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedby_.Get();
}
inline void EmployeeImage::_internal_set_deletedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.deletedby_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.deletedby_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.deletedBy)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.deletedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_deletedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.deletedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedby_.IsDefault()) {
          _impl_.deletedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.deletedBy)
}

// optional string deletedByName = 31 [json_name = "deletedByName"];
inline bool EmployeeImage::has_deletedbyname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void EmployeeImage::clear_deletedbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedbyname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& EmployeeImage::deletedbyname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.deletedByName)
  return _internal_deletedbyname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_deletedbyname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.deletedbyname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.deletedByName)
}
inline std::string* EmployeeImage::mutable_deletedbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedbyname();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.deletedByName)
  return _s;
}
inline const std::string& EmployeeImage::_internal_deletedbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedbyname_.Get();
}
inline void EmployeeImage::_internal_set_deletedbyname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.deletedbyname_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_deletedbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.deletedbyname_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_deletedbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.deletedByName)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.deletedbyname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedbyname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_deletedbyname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.deletedbyname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedbyname_.IsDefault()) {
          _impl_.deletedbyname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.deletedByName)
}

// optional string deletedByEmail = 32 [json_name = "deletedByEmail"];
inline bool EmployeeImage::has_deletedbyemail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void EmployeeImage::clear_deletedbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedbyemail_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& EmployeeImage::deletedbyemail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.EmployeeImage.deletedByEmail)
  return _internal_deletedbyemail();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmployeeImage::set_deletedbyemail(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.deletedbyemail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.EmployeeImage.deletedByEmail)
}
inline std::string* EmployeeImage::mutable_deletedbyemail() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedbyemail();
  // @@protoc_insertion_point(field_mutable:core.v1.EmployeeImage.deletedByEmail)
  return _s;
}
inline const std::string& EmployeeImage::_internal_deletedbyemail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedbyemail_.Get();
}
inline void EmployeeImage::_internal_set_deletedbyemail(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.deletedbyemail_.Set(value, GetArena());
}
inline std::string* EmployeeImage::_internal_mutable_deletedbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.deletedbyemail_.Mutable( GetArena());
}
inline std::string* EmployeeImage::release_deletedbyemail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.EmployeeImage.deletedByEmail)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.deletedbyemail_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedbyemail_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void EmployeeImage::set_allocated_deletedbyemail(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.deletedbyemail_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedbyemail_.IsDefault()) {
          _impl_.deletedbyemail_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.EmployeeImage.deletedByEmail)
}

// -------------------------------------------------------------------

// SaveEmployeeImageRequest

// string id = 1 [json_name = "id"];
inline void SaveEmployeeImageRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SaveEmployeeImageRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeImageRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeImageRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeImageRequest.id)
}
inline std::string* SaveEmployeeImageRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeImageRequest.id)
  return _s;
}
inline const std::string& SaveEmployeeImageRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SaveEmployeeImageRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SaveEmployeeImageRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SaveEmployeeImageRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeImageRequest.id)
  return _impl_.id_.Release();
}
inline void SaveEmployeeImageRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeImageRequest.id)
}

// string employeeId = 2 [json_name = "employeeId"];
inline void SaveEmployeeImageRequest::clear_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.ClearToEmpty();
}
inline const std::string& SaveEmployeeImageRequest::employeeid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeImageRequest.employeeId)
  return _internal_employeeid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeImageRequest::set_employeeid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeImageRequest.employeeId)
}
inline std::string* SaveEmployeeImageRequest::mutable_employeeid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_employeeid();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeImageRequest.employeeId)
  return _s;
}
inline const std::string& SaveEmployeeImageRequest::_internal_employeeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.employeeid_.Get();
}
inline void SaveEmployeeImageRequest::_internal_set_employeeid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.Set(value, GetArena());
}
inline std::string* SaveEmployeeImageRequest::_internal_mutable_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.employeeid_.Mutable( GetArena());
}
inline std::string* SaveEmployeeImageRequest::release_employeeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeImageRequest.employeeId)
  return _impl_.employeeid_.Release();
}
inline void SaveEmployeeImageRequest::set_allocated_employeeid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.employeeid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.employeeid_.IsDefault()) {
          _impl_.employeeid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeImageRequest.employeeId)
}

// string image = 4 [json_name = "image"];
inline void SaveEmployeeImageRequest::clear_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.ClearToEmpty();
}
inline const std::string& SaveEmployeeImageRequest::image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeImageRequest.image)
  return _internal_image();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeImageRequest::set_image(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeImageRequest.image)
}
inline std::string* SaveEmployeeImageRequest::mutable_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeImageRequest.image)
  return _s;
}
inline const std::string& SaveEmployeeImageRequest::_internal_image() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.image_.Get();
}
inline void SaveEmployeeImageRequest::_internal_set_image(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.Set(value, GetArena());
}
inline std::string* SaveEmployeeImageRequest::_internal_mutable_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.image_.Mutable( GetArena());
}
inline std::string* SaveEmployeeImageRequest::release_image() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeImageRequest.image)
  return _impl_.image_.Release();
}
inline void SaveEmployeeImageRequest::set_allocated_image(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.image_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.image_.IsDefault()) {
          _impl_.image_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeImageRequest.image)
}

// string embeddingVector = 5 [json_name = "embeddingVector"];
inline void SaveEmployeeImageRequest::clear_embeddingvector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.ClearToEmpty();
}
inline const std::string& SaveEmployeeImageRequest::embeddingvector() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.SaveEmployeeImageRequest.embeddingVector)
  return _internal_embeddingvector();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveEmployeeImageRequest::set_embeddingvector(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.v1.SaveEmployeeImageRequest.embeddingVector)
}
inline std::string* SaveEmployeeImageRequest::mutable_embeddingvector() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_embeddingvector();
  // @@protoc_insertion_point(field_mutable:core.v1.SaveEmployeeImageRequest.embeddingVector)
  return _s;
}
inline const std::string& SaveEmployeeImageRequest::_internal_embeddingvector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.embeddingvector_.Get();
}
inline void SaveEmployeeImageRequest::_internal_set_embeddingvector(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.Set(value, GetArena());
}
inline std::string* SaveEmployeeImageRequest::_internal_mutable_embeddingvector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.embeddingvector_.Mutable( GetArena());
}
inline std::string* SaveEmployeeImageRequest::release_embeddingvector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.SaveEmployeeImageRequest.embeddingVector)
  return _impl_.embeddingvector_.Release();
}
inline void SaveEmployeeImageRequest::set_allocated_embeddingvector(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddingvector_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.embeddingvector_.IsDefault()) {
          _impl_.embeddingvector_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:core.v1.SaveEmployeeImageRequest.embeddingVector)
}

// -------------------------------------------------------------------

// ListEmployeeImageResponse

// repeated .core.v1.EmployeeImage items = 1 [json_name = "items"];
inline int ListEmployeeImageResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ListEmployeeImageResponse::items_size() const {
  return _internal_items_size();
}
inline void ListEmployeeImageResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::core::v1::EmployeeImage* ListEmployeeImageResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:core.v1.ListEmployeeImageResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>* ListEmployeeImageResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:core.v1.ListEmployeeImageResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::core::v1::EmployeeImage& ListEmployeeImageResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListEmployeeImageResponse.items)
  return _internal_items().Get(index);
}
inline ::core::v1::EmployeeImage* ListEmployeeImageResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::core::v1::EmployeeImage* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:core.v1.ListEmployeeImageResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>& ListEmployeeImageResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:core.v1.ListEmployeeImageResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>&
ListEmployeeImageResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::core::v1::EmployeeImage>*
ListEmployeeImageResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
inline bool ListEmployeeImageResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::api::v1::PaginationResponse& ListEmployeeImageResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::PaginationResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::PaginationResponse&>(::api::v1::_PaginationResponse_default_instance_);
}
inline const ::api::v1::PaginationResponse& ListEmployeeImageResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.v1.ListEmployeeImageResponse.pagination)
  return _internal_pagination();
}
inline void ListEmployeeImageResponse::unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.v1.ListEmployeeImageResponse.pagination)
}
inline ::api::v1::PaginationResponse* ListEmployeeImageResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::PaginationResponse* ListEmployeeImageResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.v1.ListEmployeeImageResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::PaginationResponse* ListEmployeeImageResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::PaginationResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::PaginationResponse* ListEmployeeImageResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::PaginationResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:core.v1.ListEmployeeImageResponse.pagination)
  return _msg;
}
inline void ListEmployeeImageResponse::set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.v1.ListEmployeeImageResponse.pagination)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace core


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_core_2fv1_2femployee_5fimage_2eproto_2epb_2eh
