// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/v1/base.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_2fv1_2fbase_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_api_2fv1_2fbase_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fv1_2fbase_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fv1_2fbase_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_api_2fv1_2fbase_2eproto;
namespace api {
namespace v1 {
class AutocompleteItem;
struct AutocompleteItemDefaultTypeInternal;
extern AutocompleteItemDefaultTypeInternal _AutocompleteItem_default_instance_;
class AutocompleteRequest;
struct AutocompleteRequestDefaultTypeInternal;
extern AutocompleteRequestDefaultTypeInternal _AutocompleteRequest_default_instance_;
class AutocompleteResponse;
struct AutocompleteResponseDefaultTypeInternal;
extern AutocompleteResponseDefaultTypeInternal _AutocompleteResponse_default_instance_;
class DeleteRequest;
struct DeleteRequestDefaultTypeInternal;
extern DeleteRequestDefaultTypeInternal _DeleteRequest_default_instance_;
class DeleteResponse;
struct DeleteResponseDefaultTypeInternal;
extern DeleteResponseDefaultTypeInternal _DeleteResponse_default_instance_;
class GetRequest;
struct GetRequestDefaultTypeInternal;
extern GetRequestDefaultTypeInternal _GetRequest_default_instance_;
class ListResponse;
struct ListResponseDefaultTypeInternal;
extern ListResponseDefaultTypeInternal _ListResponse_default_instance_;
class OrderBy;
struct OrderByDefaultTypeInternal;
extern OrderByDefaultTypeInternal _OrderBy_default_instance_;
class Pagination;
struct PaginationDefaultTypeInternal;
extern PaginationDefaultTypeInternal _Pagination_default_instance_;
class PaginationResponse;
struct PaginationResponseDefaultTypeInternal;
extern PaginationResponseDefaultTypeInternal _PaginationResponse_default_instance_;
class SelectRequest;
struct SelectRequestDefaultTypeInternal;
extern SelectRequestDefaultTypeInternal _SelectRequest_default_instance_;
class SoftDeleteRequest;
struct SoftDeleteRequestDefaultTypeInternal;
extern SoftDeleteRequestDefaultTypeInternal _SoftDeleteRequest_default_instance_;
class SoftDeleteResponse;
struct SoftDeleteResponseDefaultTypeInternal;
extern SoftDeleteResponseDefaultTypeInternal _SoftDeleteResponse_default_instance_;
class Where;
struct WhereDefaultTypeInternal;
extern WhereDefaultTypeInternal _Where_default_instance_;
class Where_Clause;
struct Where_ClauseDefaultTypeInternal;
extern Where_ClauseDefaultTypeInternal _Where_Clause_default_instance_;
class Where_Condition;
struct Where_ConditionDefaultTypeInternal;
extern Where_ConditionDefaultTypeInternal _Where_Condition_default_instance_;
class Where_SubQuery;
struct Where_SubQueryDefaultTypeInternal;
extern Where_SubQueryDefaultTypeInternal _Where_SubQuery_default_instance_;
}  // namespace v1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace api {
namespace v1 {
enum Where_Mode : int {
  Where_Mode_AND = 0,
  Where_Mode_OR = 1,
  Where_Mode_Where_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Where_Mode_Where_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Where_Mode_IsValid(int value);
extern const uint32_t Where_Mode_internal_data_[];
constexpr Where_Mode Where_Mode_Mode_MIN = static_cast<Where_Mode>(0);
constexpr Where_Mode Where_Mode_Mode_MAX = static_cast<Where_Mode>(1);
constexpr int Where_Mode_Mode_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Where_Mode_descriptor();
template <typename T>
const std::string& Where_Mode_Name(T value) {
  static_assert(std::is_same<T, Where_Mode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Mode_Name().");
  return Where_Mode_Name(static_cast<Where_Mode>(value));
}
template <>
inline const std::string& Where_Mode_Name(Where_Mode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Where_Mode_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Where_Mode_Parse(absl::string_view name, Where_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Where_Mode>(
      Where_Mode_descriptor(), name, value);
}
enum DeletedState : int {
  DS_UNSPECIFIED = 0,
  DS_ONLY_DELETED = 1,
  DS_ALL = 2,
  DS_NOT_DELETED = 3,
  DeletedState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DeletedState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DeletedState_IsValid(int value);
extern const uint32_t DeletedState_internal_data_[];
constexpr DeletedState DeletedState_MIN = static_cast<DeletedState>(0);
constexpr DeletedState DeletedState_MAX = static_cast<DeletedState>(3);
constexpr int DeletedState_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
DeletedState_descriptor();
template <typename T>
const std::string& DeletedState_Name(T value) {
  static_assert(std::is_same<T, DeletedState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DeletedState_Name().");
  return DeletedState_Name(static_cast<DeletedState>(value));
}
template <>
inline const std::string& DeletedState_Name(DeletedState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DeletedState_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool DeletedState_Parse(absl::string_view name, DeletedState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeletedState>(
      DeletedState_descriptor(), name, value);
}
enum WhereOperator : int {
  EQ = 0,
  NEQ = 1,
  GT = 2,
  GTE = 3,
  LT = 4,
  LTE = 5,
  COL_IN_VAL = 6,
  COL_NIN_VAL = 7,
  VAL_IN_COL = 8,
  VAL_NIN_COL = 9,
  LIKE = 10,
  NLIKE = 11,
  ILIKE = 12,
  NILIKE = 13,
  BETWEEN = 14,
  NBETWEEN = 15,
  ISNULL = 16,
  NOTNULL = 17,
  STARTSWITH = 18,
  NSTARTSWITH = 19,
  ENDSWITH = 20,
  NENDSWITH = 21,
  ISTARTSWITH = 22,
  NISTARTSWITH = 23,
  IENDSWITH = 24,
  NIENDSWITH = 25,
  BITWISEAND = 26,
  NBITWISEAND = 27,
  BITWISEOR = 28,
  NBITWISEOR = 29,
  WhereOperator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WhereOperator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WhereOperator_IsValid(int value);
extern const uint32_t WhereOperator_internal_data_[];
constexpr WhereOperator WhereOperator_MIN = static_cast<WhereOperator>(0);
constexpr WhereOperator WhereOperator_MAX = static_cast<WhereOperator>(29);
constexpr int WhereOperator_ARRAYSIZE = 29 + 1;
const ::google::protobuf::EnumDescriptor*
WhereOperator_descriptor();
template <typename T>
const std::string& WhereOperator_Name(T value) {
  static_assert(std::is_same<T, WhereOperator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WhereOperator_Name().");
  return WhereOperator_Name(static_cast<WhereOperator>(value));
}
template <>
inline const std::string& WhereOperator_Name(WhereOperator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WhereOperator_descriptor,
                                                 0, 29>(
      static_cast<int>(value));
}
inline bool WhereOperator_Parse(absl::string_view name, WhereOperator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WhereOperator>(
      WhereOperator_descriptor(), name, value);
}
enum OrderDirection : int {
  ASC = 0,
  DESC = 1,
  OrderDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderDirection_IsValid(int value);
extern const uint32_t OrderDirection_internal_data_[];
constexpr OrderDirection OrderDirection_MIN = static_cast<OrderDirection>(0);
constexpr OrderDirection OrderDirection_MAX = static_cast<OrderDirection>(1);
constexpr int OrderDirection_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
OrderDirection_descriptor();
template <typename T>
const std::string& OrderDirection_Name(T value) {
  static_assert(std::is_same<T, OrderDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderDirection_Name().");
  return OrderDirection_Name(static_cast<OrderDirection>(value));
}
template <>
inline const std::string& OrderDirection_Name(OrderDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderDirection_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool OrderDirection_Parse(absl::string_view name, OrderDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderDirection>(
      OrderDirection_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Where_Clause final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.Where.Clause) */ {
 public:
  inline Where_Clause() : Where_Clause(nullptr) {}
  ~Where_Clause() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Where_Clause(
      ::google::protobuf::internal::ConstantInitialized);

  inline Where_Clause(const Where_Clause& from) : Where_Clause(nullptr, from) {}
  inline Where_Clause(Where_Clause&& from) noexcept
      : Where_Clause(nullptr, std::move(from)) {}
  inline Where_Clause& operator=(const Where_Clause& from) {
    CopyFrom(from);
    return *this;
  }
  inline Where_Clause& operator=(Where_Clause&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Where_Clause& default_instance() {
    return *internal_default_instance();
  }
  static inline const Where_Clause* internal_default_instance() {
    return reinterpret_cast<const Where_Clause*>(
        &_Where_Clause_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Where_Clause& a, Where_Clause& b) { a.Swap(&b); }
  inline void Swap(Where_Clause* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Where_Clause* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Where_Clause* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Where_Clause>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Where_Clause& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Where_Clause& from) { Where_Clause::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Where_Clause* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.Where.Clause"; }

 protected:
  explicit Where_Clause(::google::protobuf::Arena* arena);
  Where_Clause(::google::protobuf::Arena* arena, const Where_Clause& from);
  Where_Clause(::google::protobuf::Arena* arena, Where_Clause&& from) noexcept
      : Where_Clause(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldFieldNumber = 1,
    kValueFieldNumber = 3,
    kOperatorFieldNumber = 2,
    kModeFieldNumber = 4,
  };
  // string field = 1 [json_name = "field"];
  void clear_field() ;
  const std::string& field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field(Arg_&& arg, Args_... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* value);

  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(
      const std::string& value);
  std::string* _internal_mutable_field();

  public:
  // string value = 3 [json_name = "value"];
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // .api.v1.WhereOperator operator = 2 [json_name = "operator"];
  void clear_operator_() ;
  ::api::v1::WhereOperator operator_() const;
  void set_operator_(::api::v1::WhereOperator value);

  private:
  ::api::v1::WhereOperator _internal_operator_() const;
  void _internal_set_operator_(::api::v1::WhereOperator value);

  public:
  // .api.v1.Where.Mode mode = 4 [json_name = "mode"];
  void clear_mode() ;
  ::api::v1::Where_Mode mode() const;
  void set_mode(::api::v1::Where_Mode value);

  private:
  ::api::v1::Where_Mode _internal_mode() const;
  void _internal_set_mode(::api::v1::Where_Mode value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.Where.Clause)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Where_Clause_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Where_Clause& from_msg);
    ::google::protobuf::internal::ArenaStringPtr field_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    int operator__;
    int mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class SoftDeleteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.SoftDeleteResponse) */ {
 public:
  inline SoftDeleteResponse() : SoftDeleteResponse(nullptr) {}
  ~SoftDeleteResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SoftDeleteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SoftDeleteResponse(const SoftDeleteResponse& from) : SoftDeleteResponse(nullptr, from) {}
  inline SoftDeleteResponse(SoftDeleteResponse&& from) noexcept
      : SoftDeleteResponse(nullptr, std::move(from)) {}
  inline SoftDeleteResponse& operator=(const SoftDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SoftDeleteResponse& operator=(SoftDeleteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SoftDeleteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SoftDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const SoftDeleteResponse*>(
        &_SoftDeleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SoftDeleteResponse& a, SoftDeleteResponse& b) { a.Swap(&b); }
  inline void Swap(SoftDeleteResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SoftDeleteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SoftDeleteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SoftDeleteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SoftDeleteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SoftDeleteResponse& from) { SoftDeleteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SoftDeleteResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.SoftDeleteResponse"; }

 protected:
  explicit SoftDeleteResponse(::google::protobuf::Arena* arena);
  SoftDeleteResponse(::google::protobuf::Arena* arena, const SoftDeleteResponse& from);
  SoftDeleteResponse(::google::protobuf::Arena* arena, SoftDeleteResponse&& from) noexcept
      : SoftDeleteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRowsAffectedFieldNumber = 1,
  };
  // int32 rowsAffected = 1 [json_name = "rowsAffected"];
  void clear_rowsaffected() ;
  ::int32_t rowsaffected() const;
  void set_rowsaffected(::int32_t value);

  private:
  ::int32_t _internal_rowsaffected() const;
  void _internal_set_rowsaffected(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.SoftDeleteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SoftDeleteResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SoftDeleteResponse& from_msg);
    ::int32_t rowsaffected_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class SoftDeleteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.SoftDeleteRequest) */ {
 public:
  inline SoftDeleteRequest() : SoftDeleteRequest(nullptr) {}
  ~SoftDeleteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SoftDeleteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SoftDeleteRequest(const SoftDeleteRequest& from) : SoftDeleteRequest(nullptr, from) {}
  inline SoftDeleteRequest(SoftDeleteRequest&& from) noexcept
      : SoftDeleteRequest(nullptr, std::move(from)) {}
  inline SoftDeleteRequest& operator=(const SoftDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SoftDeleteRequest& operator=(SoftDeleteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SoftDeleteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SoftDeleteRequest* internal_default_instance() {
    return reinterpret_cast<const SoftDeleteRequest*>(
        &_SoftDeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SoftDeleteRequest& a, SoftDeleteRequest& b) { a.Swap(&b); }
  inline void Swap(SoftDeleteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SoftDeleteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SoftDeleteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SoftDeleteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SoftDeleteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SoftDeleteRequest& from) { SoftDeleteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SoftDeleteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.SoftDeleteRequest"; }

 protected:
  explicit SoftDeleteRequest(::google::protobuf::Arena* arena);
  SoftDeleteRequest(::google::protobuf::Arena* arena, const SoftDeleteRequest& from);
  SoftDeleteRequest(::google::protobuf::Arena* arena, SoftDeleteRequest&& from) noexcept
      : SoftDeleteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDsFieldNumber = 1,
  };
  // repeated string IDs = 1 [json_name = "IDs"];
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  const std::string& ids(int index) const;
  std::string* mutable_ids(int index);
  void set_ids(int index, const std::string& value);
  void set_ids(int index, std::string&& value);
  void set_ids(int index, const char* value);
  void set_ids(int index, const char* value, std::size_t size);
  void set_ids(int index, absl::string_view value);
  std::string* add_ids();
  void add_ids(const std::string& value);
  void add_ids(std::string&& value);
  void add_ids(const char* value);
  void add_ids(const char* value, std::size_t size);
  void add_ids(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_ids();

  public:
  // @@protoc_insertion_point(class_scope:api.v1.SoftDeleteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SoftDeleteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SoftDeleteRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> ids_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class PaginationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.PaginationResponse) */ {
 public:
  inline PaginationResponse() : PaginationResponse(nullptr) {}
  ~PaginationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PaginationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PaginationResponse(const PaginationResponse& from) : PaginationResponse(nullptr, from) {}
  inline PaginationResponse(PaginationResponse&& from) noexcept
      : PaginationResponse(nullptr, std::move(from)) {}
  inline PaginationResponse& operator=(const PaginationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaginationResponse& operator=(PaginationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PaginationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PaginationResponse* internal_default_instance() {
    return reinterpret_cast<const PaginationResponse*>(
        &_PaginationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(PaginationResponse& a, PaginationResponse& b) { a.Swap(&b); }
  inline void Swap(PaginationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PaginationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PaginationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PaginationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PaginationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PaginationResponse& from) { PaginationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PaginationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.PaginationResponse"; }

 protected:
  explicit PaginationResponse(::google::protobuf::Arena* arena);
  PaginationResponse(::google::protobuf::Arena* arena, const PaginationResponse& from);
  PaginationResponse(::google::protobuf::Arena* arena, PaginationResponse&& from) noexcept
      : PaginationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPageFieldNumber = 1,
    kTotalFieldNumber = 2,
  };
  // int32 page = 1 [json_name = "page"];
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 total = 2 [json_name = "total"];
  void clear_total() ;
  ::int32_t total() const;
  void set_total(::int32_t value);

  private:
  ::int32_t _internal_total() const;
  void _internal_set_total(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.PaginationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PaginationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PaginationResponse& from_msg);
    ::int32_t page_;
    ::int32_t total_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class Pagination final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.Pagination) */ {
 public:
  inline Pagination() : Pagination(nullptr) {}
  ~Pagination() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pagination(
      ::google::protobuf::internal::ConstantInitialized);

  inline Pagination(const Pagination& from) : Pagination(nullptr, from) {}
  inline Pagination(Pagination&& from) noexcept
      : Pagination(nullptr, std::move(from)) {}
  inline Pagination& operator=(const Pagination& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pagination& operator=(Pagination&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pagination& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pagination* internal_default_instance() {
    return reinterpret_cast<const Pagination*>(
        &_Pagination_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Pagination& a, Pagination& b) { a.Swap(&b); }
  inline void Swap(Pagination* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pagination* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pagination* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Pagination>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pagination& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pagination& from) { Pagination::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pagination* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.Pagination"; }

 protected:
  explicit Pagination(::google::protobuf::Arena* arena);
  Pagination(::google::protobuf::Arena* arena, const Pagination& from);
  Pagination(::google::protobuf::Arena* arena, Pagination&& from) noexcept
      : Pagination(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkipFieldNumber = 1,
    kTakeFieldNumber = 2,
  };
  // int32 skip = 1 [json_name = "skip"];
  void clear_skip() ;
  ::int32_t skip() const;
  void set_skip(::int32_t value);

  private:
  ::int32_t _internal_skip() const;
  void _internal_set_skip(::int32_t value);

  public:
  // int32 take = 2 [json_name = "take"];
  void clear_take() ;
  ::int32_t take() const;
  void set_take(::int32_t value);

  private:
  ::int32_t _internal_take() const;
  void _internal_set_take(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.Pagination)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Pagination_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Pagination& from_msg);
    ::int32_t skip_;
    ::int32_t take_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class OrderBy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.OrderBy) */ {
 public:
  inline OrderBy() : OrderBy(nullptr) {}
  ~OrderBy() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderBy(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderBy(const OrderBy& from) : OrderBy(nullptr, from) {}
  inline OrderBy(OrderBy&& from) noexcept
      : OrderBy(nullptr, std::move(from)) {}
  inline OrderBy& operator=(const OrderBy& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderBy& operator=(OrderBy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderBy& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderBy* internal_default_instance() {
    return reinterpret_cast<const OrderBy*>(
        &_OrderBy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(OrderBy& a, OrderBy& b) { a.Swap(&b); }
  inline void Swap(OrderBy* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderBy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderBy* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OrderBy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderBy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderBy& from) { OrderBy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderBy* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.OrderBy"; }

 protected:
  explicit OrderBy(::google::protobuf::Arena* arena);
  OrderBy(::google::protobuf::Arena* arena, const OrderBy& from);
  OrderBy(::google::protobuf::Arena* arena, OrderBy&& from) noexcept
      : OrderBy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // string field = 1 [json_name = "field"];
  void clear_field() ;
  const std::string& field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field(Arg_&& arg, Args_... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* value);

  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(
      const std::string& value);
  std::string* _internal_mutable_field();

  public:
  // .api.v1.OrderDirection direction = 2 [json_name = "direction"];
  void clear_direction() ;
  ::api::v1::OrderDirection direction() const;
  void set_direction(::api::v1::OrderDirection value);

  private:
  ::api::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::api::v1::OrderDirection value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.OrderBy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      28, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OrderBy_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderBy& from_msg);
    ::google::protobuf::internal::ArenaStringPtr field_;
    int direction_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class GetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.GetRequest) */ {
 public:
  inline GetRequest() : GetRequest(nullptr) {}
  ~GetRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRequest(const GetRequest& from) : GetRequest(nullptr, from) {}
  inline GetRequest(GetRequest&& from) noexcept
      : GetRequest(nullptr, std::move(from)) {}
  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRequest& operator=(GetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRequest*>(
        &_GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetRequest& a, GetRequest& b) { a.Swap(&b); }
  inline void Swap(GetRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRequest& from) { GetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.GetRequest"; }

 protected:
  explicit GetRequest(::google::protobuf::Arena* arena);
  GetRequest(::google::protobuf::Arena* arena, const GetRequest& from);
  GetRequest(::google::protobuf::Arena* arena, GetRequest&& from) noexcept
      : GetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
  };
  // string ID = 1 [json_name = "ID"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:api.v1.GetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      28, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class DeleteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.DeleteResponse) */ {
 public:
  inline DeleteResponse() : DeleteResponse(nullptr) {}
  ~DeleteResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteResponse(const DeleteResponse& from) : DeleteResponse(nullptr, from) {}
  inline DeleteResponse(DeleteResponse&& from) noexcept
      : DeleteResponse(nullptr, std::move(from)) {}
  inline DeleteResponse& operator=(const DeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteResponse& operator=(DeleteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteResponse*>(
        &_DeleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DeleteResponse& a, DeleteResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DeleteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteResponse& from) { DeleteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.DeleteResponse"; }

 protected:
  explicit DeleteResponse(::google::protobuf::Arena* arena);
  DeleteResponse(::google::protobuf::Arena* arena, const DeleteResponse& from);
  DeleteResponse(::google::protobuf::Arena* arena, DeleteResponse&& from) noexcept
      : DeleteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRowsAffectedFieldNumber = 1,
  };
  // int32 rowsAffected = 1 [json_name = "rowsAffected"];
  void clear_rowsaffected() ;
  ::int32_t rowsaffected() const;
  void set_rowsaffected(::int32_t value);

  private:
  ::int32_t _internal_rowsaffected() const;
  void _internal_set_rowsaffected(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.DeleteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteResponse& from_msg);
    ::int32_t rowsaffected_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class AutocompleteItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.AutocompleteItem) */ {
 public:
  inline AutocompleteItem() : AutocompleteItem(nullptr) {}
  ~AutocompleteItem() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutocompleteItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutocompleteItem(const AutocompleteItem& from) : AutocompleteItem(nullptr, from) {}
  inline AutocompleteItem(AutocompleteItem&& from) noexcept
      : AutocompleteItem(nullptr, std::move(from)) {}
  inline AutocompleteItem& operator=(const AutocompleteItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutocompleteItem& operator=(AutocompleteItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutocompleteItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutocompleteItem* internal_default_instance() {
    return reinterpret_cast<const AutocompleteItem*>(
        &_AutocompleteItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AutocompleteItem& a, AutocompleteItem& b) { a.Swap(&b); }
  inline void Swap(AutocompleteItem* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutocompleteItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutocompleteItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AutocompleteItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutocompleteItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutocompleteItem& from) { AutocompleteItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AutocompleteItem* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.AutocompleteItem"; }

 protected:
  explicit AutocompleteItem(::google::protobuf::Arena* arena);
  AutocompleteItem(::google::protobuf::Arena* arena, const AutocompleteItem& from);
  AutocompleteItem(::google::protobuf::Arena* arena, AutocompleteItem&& from) noexcept
      : AutocompleteItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
    kLabelFieldNumber = 2,
    kGroupFieldNumber = 4,
    kDisabledFieldNumber = 3,
  };
  // string ID = 1 [json_name = "ID"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string label = 2 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // optional string group = 4 [json_name = "group"];
  bool has_group() const;
  void clear_group() ;
  const std::string& group() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group(Arg_&& arg, Args_... args);
  std::string* mutable_group();
  PROTOBUF_NODISCARD std::string* release_group();
  void set_allocated_group(std::string* value);

  private:
  const std::string& _internal_group() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group(
      const std::string& value);
  std::string* _internal_mutable_group();

  public:
  // optional bool disabled = 3 [json_name = "disabled"];
  bool has_disabled() const;
  void clear_disabled() ;
  bool disabled() const;
  void set_disabled(bool value);

  private:
  bool _internal_disabled() const;
  void _internal_set_disabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.AutocompleteItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AutocompleteItem_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutocompleteItem& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::google::protobuf::internal::ArenaStringPtr group_;
    bool disabled_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class Where final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.Where) */ {
 public:
  inline Where() : Where(nullptr) {}
  ~Where() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Where(
      ::google::protobuf::internal::ConstantInitialized);

  inline Where(const Where& from) : Where(nullptr, from) {}
  inline Where(Where&& from) noexcept
      : Where(nullptr, std::move(from)) {}
  inline Where& operator=(const Where& from) {
    CopyFrom(from);
    return *this;
  }
  inline Where& operator=(Where&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Where& default_instance() {
    return *internal_default_instance();
  }
  static inline const Where* internal_default_instance() {
    return reinterpret_cast<const Where*>(
        &_Where_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(Where& a, Where& b) { a.Swap(&b); }
  inline void Swap(Where* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Where* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Where* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Where>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Where& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Where& from) { Where::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Where* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.Where"; }

 protected:
  explicit Where(::google::protobuf::Arena* arena);
  Where(::google::protobuf::Arena* arena, const Where& from);
  Where(::google::protobuf::Arena* arena, Where&& from) noexcept
      : Where(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Condition = Where_Condition;
  using Clause = Where_Clause;
  using SubQuery = Where_SubQuery;
  using Mode = Where_Mode;
  static constexpr Mode AND = Where_Mode_AND;
  static constexpr Mode OR = Where_Mode_OR;
  static inline bool Mode_IsValid(int value) {
    return Where_Mode_IsValid(value);
  }
  static constexpr Mode Mode_MIN = Where_Mode_Mode_MIN;
  static constexpr Mode Mode_MAX = Where_Mode_Mode_MAX;
  static constexpr int Mode_ARRAYSIZE = Where_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Mode_descriptor() {
    return Where_Mode_descriptor();
  }
  template <typename T>
  static inline const std::string& Mode_Name(T value) {
    return Where_Mode_Name(value);
  }
  static inline bool Mode_Parse(absl::string_view name, Mode* value) {
    return Where_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kConditionsFieldNumber = 1,
    kModeFieldNumber = 2,
  };
  // repeated .api.v1.Where.Condition conditions = 1 [json_name = "conditions"];
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::api::v1::Where_Condition* mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>* mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>* _internal_mutable_conditions();
  public:
  const ::api::v1::Where_Condition& conditions(int index) const;
  ::api::v1::Where_Condition* add_conditions();
  const ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>& conditions() const;
  // .api.v1.Where.Mode mode = 2 [json_name = "mode"];
  void clear_mode() ;
  ::api::v1::Where_Mode mode() const;
  void set_mode(::api::v1::Where_Mode value);

  private:
  ::api::v1::Where_Mode _internal_mode() const;
  void _internal_set_mode(::api::v1::Where_Mode value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.Where)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Where_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Where& from_msg);
    ::google::protobuf::RepeatedPtrField< ::api::v1::Where_Condition > conditions_;
    int mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class Where_Condition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.Where.Condition) */ {
 public:
  inline Where_Condition() : Where_Condition(nullptr) {}
  ~Where_Condition() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Where_Condition(
      ::google::protobuf::internal::ConstantInitialized);

  inline Where_Condition(const Where_Condition& from) : Where_Condition(nullptr, from) {}
  inline Where_Condition(Where_Condition&& from) noexcept
      : Where_Condition(nullptr, std::move(from)) {}
  inline Where_Condition& operator=(const Where_Condition& from) {
    CopyFrom(from);
    return *this;
  }
  inline Where_Condition& operator=(Where_Condition&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Where_Condition& default_instance() {
    return *internal_default_instance();
  }
  enum ConditionCase {
    kClause = 1,
    kGroup = 2,
    kSubQuery = 3,
    CONDITION_NOT_SET = 0,
  };
  static inline const Where_Condition* internal_default_instance() {
    return reinterpret_cast<const Where_Condition*>(
        &_Where_Condition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Where_Condition& a, Where_Condition& b) { a.Swap(&b); }
  inline void Swap(Where_Condition* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Where_Condition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Where_Condition* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Where_Condition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Where_Condition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Where_Condition& from) { Where_Condition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Where_Condition* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.Where.Condition"; }

 protected:
  explicit Where_Condition(::google::protobuf::Arena* arena);
  Where_Condition(::google::protobuf::Arena* arena, const Where_Condition& from);
  Where_Condition(::google::protobuf::Arena* arena, Where_Condition&& from) noexcept
      : Where_Condition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClauseFieldNumber = 1,
    kGroupFieldNumber = 2,
    kSubQueryFieldNumber = 3,
  };
  // .api.v1.Where.Clause clause = 1 [json_name = "clause"];
  bool has_clause() const;
  private:
  bool _internal_has_clause() const;

  public:
  void clear_clause() ;
  const ::api::v1::Where_Clause& clause() const;
  PROTOBUF_NODISCARD ::api::v1::Where_Clause* release_clause();
  ::api::v1::Where_Clause* mutable_clause();
  void set_allocated_clause(::api::v1::Where_Clause* value);
  void unsafe_arena_set_allocated_clause(::api::v1::Where_Clause* value);
  ::api::v1::Where_Clause* unsafe_arena_release_clause();

  private:
  const ::api::v1::Where_Clause& _internal_clause() const;
  ::api::v1::Where_Clause* _internal_mutable_clause();

  public:
  // .api.v1.Where group = 2 [json_name = "group"];
  bool has_group() const;
  private:
  bool _internal_has_group() const;

  public:
  void clear_group() ;
  const ::api::v1::Where& group() const;
  PROTOBUF_NODISCARD ::api::v1::Where* release_group();
  ::api::v1::Where* mutable_group();
  void set_allocated_group(::api::v1::Where* value);
  void unsafe_arena_set_allocated_group(::api::v1::Where* value);
  ::api::v1::Where* unsafe_arena_release_group();

  private:
  const ::api::v1::Where& _internal_group() const;
  ::api::v1::Where* _internal_mutable_group();

  public:
  // .api.v1.Where.SubQuery subQuery = 3 [json_name = "subQuery"];
  bool has_subquery() const;
  private:
  bool _internal_has_subquery() const;

  public:
  void clear_subquery() ;
  const ::api::v1::Where_SubQuery& subquery() const;
  PROTOBUF_NODISCARD ::api::v1::Where_SubQuery* release_subquery();
  ::api::v1::Where_SubQuery* mutable_subquery();
  void set_allocated_subquery(::api::v1::Where_SubQuery* value);
  void unsafe_arena_set_allocated_subquery(::api::v1::Where_SubQuery* value);
  ::api::v1::Where_SubQuery* unsafe_arena_release_subquery();

  private:
  const ::api::v1::Where_SubQuery& _internal_subquery() const;
  ::api::v1::Where_SubQuery* _internal_mutable_subquery();

  public:
  void clear_condition();
  ConditionCase condition_case() const;
  // @@protoc_insertion_point(class_scope:api.v1.Where.Condition)
 private:
  class _Internal;
  void set_has_clause();
  void set_has_group();
  void set_has_subquery();
  inline bool has_condition() const;
  inline void clear_has_condition();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Where_Condition_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Where_Condition& from_msg);
    union ConditionUnion {
      constexpr ConditionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::api::v1::Where_Clause* clause_;
      ::api::v1::Where* group_;
      ::api::v1::Where_SubQuery* subquery_;
    } condition_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class Where_SubQuery final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.Where.SubQuery) */ {
 public:
  inline Where_SubQuery() : Where_SubQuery(nullptr) {}
  ~Where_SubQuery() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Where_SubQuery(
      ::google::protobuf::internal::ConstantInitialized);

  inline Where_SubQuery(const Where_SubQuery& from) : Where_SubQuery(nullptr, from) {}
  inline Where_SubQuery(Where_SubQuery&& from) noexcept
      : Where_SubQuery(nullptr, std::move(from)) {}
  inline Where_SubQuery& operator=(const Where_SubQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline Where_SubQuery& operator=(Where_SubQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Where_SubQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const Where_SubQuery* internal_default_instance() {
    return reinterpret_cast<const Where_SubQuery*>(
        &_Where_SubQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Where_SubQuery& a, Where_SubQuery& b) { a.Swap(&b); }
  inline void Swap(Where_SubQuery* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Where_SubQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Where_SubQuery* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Where_SubQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Where_SubQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Where_SubQuery& from) { Where_SubQuery::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Where_SubQuery* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.Where.SubQuery"; }

 protected:
  explicit Where_SubQuery(::google::protobuf::Arena* arena);
  Where_SubQuery(::google::protobuf::Arena* arena, const Where_SubQuery& from);
  Where_SubQuery(::google::protobuf::Arena* arena, Where_SubQuery&& from) noexcept
      : Where_SubQuery(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldFieldNumber = 1,
    kColumnFieldNumber = 2,
    kSubQueryFieldNumber = 5,
    kOperatorFieldNumber = 4,
  };
  // string field = 1 [json_name = "field"];
  void clear_field() ;
  const std::string& field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field(Arg_&& arg, Args_... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* value);

  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(
      const std::string& value);
  std::string* _internal_mutable_field();

  public:
  // string column = 2 [json_name = "column"];
  void clear_column() ;
  const std::string& column() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_column(Arg_&& arg, Args_... args);
  std::string* mutable_column();
  PROTOBUF_NODISCARD std::string* release_column();
  void set_allocated_column(std::string* value);

  private:
  const std::string& _internal_column() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_column(
      const std::string& value);
  std::string* _internal_mutable_column();

  public:
  // .api.v1.Where subQuery = 5 [json_name = "subQuery"];
  bool has_subquery() const;
  void clear_subquery() ;
  const ::api::v1::Where& subquery() const;
  PROTOBUF_NODISCARD ::api::v1::Where* release_subquery();
  ::api::v1::Where* mutable_subquery();
  void set_allocated_subquery(::api::v1::Where* value);
  void unsafe_arena_set_allocated_subquery(::api::v1::Where* value);
  ::api::v1::Where* unsafe_arena_release_subquery();

  private:
  const ::api::v1::Where& _internal_subquery() const;
  ::api::v1::Where* _internal_mutable_subquery();

  public:
  // .api.v1.WhereOperator operator = 4 [json_name = "operator"];
  void clear_operator_() ;
  ::api::v1::WhereOperator operator_() const;
  void set_operator_(::api::v1::WhereOperator value);

  private:
  ::api::v1::WhereOperator _internal_operator_() const;
  void _internal_set_operator_(::api::v1::WhereOperator value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.Where.SubQuery)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 1,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Where_SubQuery_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Where_SubQuery& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr field_;
    ::google::protobuf::internal::ArenaStringPtr column_;
    ::api::v1::Where* subquery_;
    int operator__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class ListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.ListResponse) */ {
 public:
  inline ListResponse() : ListResponse(nullptr) {}
  ~ListResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListResponse(const ListResponse& from) : ListResponse(nullptr, from) {}
  inline ListResponse(ListResponse&& from) noexcept
      : ListResponse(nullptr, std::move(from)) {}
  inline ListResponse& operator=(const ListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListResponse& operator=(ListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListResponse* internal_default_instance() {
    return reinterpret_cast<const ListResponse*>(
        &_ListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ListResponse& a, ListResponse& b) { a.Swap(&b); }
  inline void Swap(ListResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListResponse& from) { ListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.ListResponse"; }

 protected:
  explicit ListResponse(::google::protobuf::Arena* arena);
  ListResponse(::google::protobuf::Arena* arena, const ListResponse& from);
  ListResponse(::google::protobuf::Arena* arena, ListResponse&& from) noexcept
      : ListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .google.protobuf.Any items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::google::protobuf::Any* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_items();
  public:
  const ::google::protobuf::Any& items(int index) const;
  ::google::protobuf::Any* add_items();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& items() const;
  // .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::PaginationResponse& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::PaginationResponse* release_pagination();
  ::api::v1::PaginationResponse* mutable_pagination();
  void set_allocated_pagination(::api::v1::PaginationResponse* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value);
  ::api::v1::PaginationResponse* unsafe_arena_release_pagination();

  private:
  const ::api::v1::PaginationResponse& _internal_pagination() const;
  ::api::v1::PaginationResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:api.v1.ListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > items_;
    ::api::v1::PaginationResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class AutocompleteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.AutocompleteResponse) */ {
 public:
  inline AutocompleteResponse() : AutocompleteResponse(nullptr) {}
  ~AutocompleteResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutocompleteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutocompleteResponse(const AutocompleteResponse& from) : AutocompleteResponse(nullptr, from) {}
  inline AutocompleteResponse(AutocompleteResponse&& from) noexcept
      : AutocompleteResponse(nullptr, std::move(from)) {}
  inline AutocompleteResponse& operator=(const AutocompleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutocompleteResponse& operator=(AutocompleteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutocompleteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutocompleteResponse* internal_default_instance() {
    return reinterpret_cast<const AutocompleteResponse*>(
        &_AutocompleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AutocompleteResponse& a, AutocompleteResponse& b) { a.Swap(&b); }
  inline void Swap(AutocompleteResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutocompleteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutocompleteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AutocompleteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutocompleteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutocompleteResponse& from) { AutocompleteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AutocompleteResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.AutocompleteResponse"; }

 protected:
  explicit AutocompleteResponse(::google::protobuf::Arena* arena);
  AutocompleteResponse(::google::protobuf::Arena* arena, const AutocompleteResponse& from);
  AutocompleteResponse(::google::protobuf::Arena* arena, AutocompleteResponse&& from) noexcept
      : AutocompleteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .api.v1.AutocompleteItem items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::api::v1::AutocompleteItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>* _internal_mutable_items();
  public:
  const ::api::v1::AutocompleteItem& items(int index) const;
  ::api::v1::AutocompleteItem* add_items();
  const ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>& items() const;
  // @@protoc_insertion_point(class_scope:api.v1.AutocompleteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AutocompleteResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutocompleteResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::api::v1::AutocompleteItem > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class SelectRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.SelectRequest) */ {
 public:
  inline SelectRequest() : SelectRequest(nullptr) {}
  ~SelectRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SelectRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SelectRequest(const SelectRequest& from) : SelectRequest(nullptr, from) {}
  inline SelectRequest(SelectRequest&& from) noexcept
      : SelectRequest(nullptr, std::move(from)) {}
  inline SelectRequest& operator=(const SelectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelectRequest& operator=(SelectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SelectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SelectRequest* internal_default_instance() {
    return reinterpret_cast<const SelectRequest*>(
        &_SelectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SelectRequest& a, SelectRequest& b) { a.Swap(&b); }
  inline void Swap(SelectRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SelectRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SelectRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SelectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SelectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SelectRequest& from) { SelectRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SelectRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.SelectRequest"; }

 protected:
  explicit SelectRequest(::google::protobuf::Arena* arena);
  SelectRequest(::google::protobuf::Arena* arena, const SelectRequest& from);
  SelectRequest(::google::protobuf::Arena* arena, SelectRequest&& from) noexcept
      : SelectRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSelectFieldNumber = 2,
    kOrderFieldNumber = 5,
    kRequestIDFieldNumber = 1,
    kWhereFieldNumber = 4,
    kPaginationFieldNumber = 6,
    kSelectAllFieldNumber = 3,
    kDeletedStateFieldNumber = 7,
  };
  // repeated string select = 2 [json_name = "select"];
  int select_size() const;
  private:
  int _internal_select_size() const;

  public:
  void clear_select() ;
  const std::string& select(int index) const;
  std::string* mutable_select(int index);
  void set_select(int index, const std::string& value);
  void set_select(int index, std::string&& value);
  void set_select(int index, const char* value);
  void set_select(int index, const char* value, std::size_t size);
  void set_select(int index, absl::string_view value);
  std::string* add_select();
  void add_select(const std::string& value);
  void add_select(std::string&& value);
  void add_select(const char* value);
  void add_select(const char* value, std::size_t size);
  void add_select(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& select() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_select();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_select() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_select();

  public:
  // repeated .api.v1.OrderBy order = 5 [json_name = "order"];
  int order_size() const;
  private:
  int _internal_order_size() const;

  public:
  void clear_order() ;
  ::api::v1::OrderBy* mutable_order(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>* mutable_order();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>& _internal_order() const;
  ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>* _internal_mutable_order();
  public:
  const ::api::v1::OrderBy& order(int index) const;
  ::api::v1::OrderBy* add_order();
  const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>& order() const;
  // optional string requestID = 1 [json_name = "requestID"];
  bool has_requestid() const;
  void clear_requestid() ;
  const std::string& requestid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requestid(Arg_&& arg, Args_... args);
  std::string* mutable_requestid();
  PROTOBUF_NODISCARD std::string* release_requestid();
  void set_allocated_requestid(std::string* value);

  private:
  const std::string& _internal_requestid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requestid(
      const std::string& value);
  std::string* _internal_mutable_requestid();

  public:
  // optional .api.v1.Where where = 4 [json_name = "where"];
  bool has_where() const;
  void clear_where() ;
  const ::api::v1::Where& where() const;
  PROTOBUF_NODISCARD ::api::v1::Where* release_where();
  ::api::v1::Where* mutable_where();
  void set_allocated_where(::api::v1::Where* value);
  void unsafe_arena_set_allocated_where(::api::v1::Where* value);
  ::api::v1::Where* unsafe_arena_release_where();

  private:
  const ::api::v1::Where& _internal_where() const;
  ::api::v1::Where* _internal_mutable_where();

  public:
  // optional .api.v1.Pagination pagination = 6 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::Pagination* release_pagination();
  ::api::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::api::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::Pagination* value);
  ::api::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::api::v1::Pagination& _internal_pagination() const;
  ::api::v1::Pagination* _internal_mutable_pagination();

  public:
  // bool selectAll = 3 [json_name = "selectAll"];
  void clear_selectall() ;
  bool selectall() const;
  void set_selectall(bool value);

  private:
  bool _internal_selectall() const;
  void _internal_set_selectall(bool value);

  public:
  // .api.v1.DeletedState deletedState = 7 [json_name = "deletedState"];
  void clear_deletedstate() ;
  ::api::v1::DeletedState deletedstate() const;
  void set_deletedstate(::api::v1::DeletedState value);

  private:
  ::api::v1::DeletedState _internal_deletedstate() const;
  void _internal_set_deletedstate(::api::v1::DeletedState value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.SelectRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SelectRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SelectRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> select_;
    ::google::protobuf::RepeatedPtrField< ::api::v1::OrderBy > order_;
    ::google::protobuf::internal::ArenaStringPtr requestid_;
    ::api::v1::Where* where_;
    ::api::v1::Pagination* pagination_;
    bool selectall_;
    int deletedstate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class DeleteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.DeleteRequest) */ {
 public:
  inline DeleteRequest() : DeleteRequest(nullptr) {}
  ~DeleteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteRequest(const DeleteRequest& from) : DeleteRequest(nullptr, from) {}
  inline DeleteRequest(DeleteRequest&& from) noexcept
      : DeleteRequest(nullptr, std::move(from)) {}
  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRequest& operator=(DeleteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteRequest*>(
        &_DeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(DeleteRequest& a, DeleteRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DeleteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteRequest& from) { DeleteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.DeleteRequest"; }

 protected:
  explicit DeleteRequest(::google::protobuf::Arena* arena);
  DeleteRequest(::google::protobuf::Arena* arena, const DeleteRequest& from);
  DeleteRequest(::google::protobuf::Arena* arena, DeleteRequest&& from) noexcept
      : DeleteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDsFieldNumber = 1,
    kWhereFieldNumber = 2,
    kForceFieldNumber = 3,
  };
  // repeated string IDs = 1 [json_name = "IDs"];
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  const std::string& ids(int index) const;
  std::string* mutable_ids(int index);
  void set_ids(int index, const std::string& value);
  void set_ids(int index, std::string&& value);
  void set_ids(int index, const char* value);
  void set_ids(int index, const char* value, std::size_t size);
  void set_ids(int index, absl::string_view value);
  std::string* add_ids();
  void add_ids(const std::string& value);
  void add_ids(std::string&& value);
  void add_ids(const char* value);
  void add_ids(const char* value, std::size_t size);
  void add_ids(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_ids();

  public:
  // optional .api.v1.Where where = 2 [json_name = "where"];
  bool has_where() const;
  void clear_where() ;
  const ::api::v1::Where& where() const;
  PROTOBUF_NODISCARD ::api::v1::Where* release_where();
  ::api::v1::Where* mutable_where();
  void set_allocated_where(::api::v1::Where* value);
  void unsafe_arena_set_allocated_where(::api::v1::Where* value);
  ::api::v1::Where* unsafe_arena_release_where();

  private:
  const ::api::v1::Where& _internal_where() const;
  ::api::v1::Where* _internal_mutable_where();

  public:
  // bool force = 3 [json_name = "force"];
  void clear_force() ;
  bool force() const;
  void set_force(bool value);

  private:
  bool _internal_force() const;
  void _internal_set_force(bool value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.DeleteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> ids_;
    ::api::v1::Where* where_;
    bool force_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};
// -------------------------------------------------------------------

class AutocompleteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.AutocompleteRequest) */ {
 public:
  inline AutocompleteRequest() : AutocompleteRequest(nullptr) {}
  ~AutocompleteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutocompleteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutocompleteRequest(const AutocompleteRequest& from) : AutocompleteRequest(nullptr, from) {}
  inline AutocompleteRequest(AutocompleteRequest&& from) noexcept
      : AutocompleteRequest(nullptr, std::move(from)) {}
  inline AutocompleteRequest& operator=(const AutocompleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutocompleteRequest& operator=(AutocompleteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutocompleteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutocompleteRequest* internal_default_instance() {
    return reinterpret_cast<const AutocompleteRequest*>(
        &_AutocompleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AutocompleteRequest& a, AutocompleteRequest& b) { a.Swap(&b); }
  inline void Swap(AutocompleteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutocompleteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutocompleteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AutocompleteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutocompleteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutocompleteRequest& from) { AutocompleteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AutocompleteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.AutocompleteRequest"; }

 protected:
  explicit AutocompleteRequest(::google::protobuf::Arena* arena);
  AutocompleteRequest(::google::protobuf::Arena* arena, const AutocompleteRequest& from);
  AutocompleteRequest(::google::protobuf::Arena* arena, AutocompleteRequest&& from) noexcept
      : AutocompleteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderFieldNumber = 2,
    kWhereFieldNumber = 1,
  };
  // repeated .api.v1.OrderBy order = 2 [json_name = "order"];
  int order_size() const;
  private:
  int _internal_order_size() const;

  public:
  void clear_order() ;
  ::api::v1::OrderBy* mutable_order(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>* mutable_order();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>& _internal_order() const;
  ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>* _internal_mutable_order();
  public:
  const ::api::v1::OrderBy& order(int index) const;
  ::api::v1::OrderBy* add_order();
  const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>& order() const;
  // optional .api.v1.Where where = 1 [json_name = "where"];
  bool has_where() const;
  void clear_where() ;
  const ::api::v1::Where& where() const;
  PROTOBUF_NODISCARD ::api::v1::Where* release_where();
  ::api::v1::Where* mutable_where();
  void set_allocated_where(::api::v1::Where* value);
  void unsafe_arena_set_allocated_where(::api::v1::Where* value);
  ::api::v1::Where* unsafe_arena_release_where();

  private:
  const ::api::v1::Where& _internal_where() const;
  ::api::v1::Where* _internal_mutable_where();

  public:
  // @@protoc_insertion_point(class_scope:api.v1.AutocompleteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AutocompleteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutocompleteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::api::v1::OrderBy > order_;
    ::api::v1::Where* where_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2fbase_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AutocompleteRequest

// optional .api.v1.Where where = 1 [json_name = "where"];
inline bool AutocompleteRequest::has_where() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.where_ != nullptr);
  return value;
}
inline void AutocompleteRequest::clear_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.where_ != nullptr) _impl_.where_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::Where& AutocompleteRequest::_internal_where() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::Where* p = _impl_.where_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Where&>(::api::v1::_Where_default_instance_);
}
inline const ::api::v1::Where& AutocompleteRequest::where() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteRequest.where)
  return _internal_where();
}
inline void AutocompleteRequest::unsafe_arena_set_allocated_where(::api::v1::Where* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.where_);
  }
  _impl_.where_ = reinterpret_cast<::api::v1::Where*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.AutocompleteRequest.where)
}
inline ::api::v1::Where* AutocompleteRequest::release_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Where* released = _impl_.where_;
  _impl_.where_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Where* AutocompleteRequest::unsafe_arena_release_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.AutocompleteRequest.where)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Where* temp = _impl_.where_;
  _impl_.where_ = nullptr;
  return temp;
}
inline ::api::v1::Where* AutocompleteRequest::_internal_mutable_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.where_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::Where>(GetArena());
    _impl_.where_ = reinterpret_cast<::api::v1::Where*>(p);
  }
  return _impl_.where_;
}
inline ::api::v1::Where* AutocompleteRequest::mutable_where() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::Where* _msg = _internal_mutable_where();
  // @@protoc_insertion_point(field_mutable:api.v1.AutocompleteRequest.where)
  return _msg;
}
inline void AutocompleteRequest::set_allocated_where(::api::v1::Where* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.where_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.where_ = reinterpret_cast<::api::v1::Where*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.AutocompleteRequest.where)
}

// repeated .api.v1.OrderBy order = 2 [json_name = "order"];
inline int AutocompleteRequest::_internal_order_size() const {
  return _internal_order().size();
}
inline int AutocompleteRequest::order_size() const {
  return _internal_order_size();
}
inline void AutocompleteRequest::clear_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_.Clear();
}
inline ::api::v1::OrderBy* AutocompleteRequest::mutable_order(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.AutocompleteRequest.order)
  return _internal_mutable_order()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>* AutocompleteRequest::mutable_order()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.AutocompleteRequest.order)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order();
}
inline const ::api::v1::OrderBy& AutocompleteRequest::order(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteRequest.order)
  return _internal_order().Get(index);
}
inline ::api::v1::OrderBy* AutocompleteRequest::add_order() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1::OrderBy* _add = _internal_mutable_order()->Add();
  // @@protoc_insertion_point(field_add:api.v1.AutocompleteRequest.order)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>& AutocompleteRequest::order() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.AutocompleteRequest.order)
  return _internal_order();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>&
AutocompleteRequest::_internal_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>*
AutocompleteRequest::_internal_mutable_order() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_;
}

// -------------------------------------------------------------------

// AutocompleteItem

// string ID = 1 [json_name = "ID"];
inline void AutocompleteItem::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& AutocompleteItem::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteItem.ID)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AutocompleteItem::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.AutocompleteItem.ID)
}
inline std::string* AutocompleteItem::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:api.v1.AutocompleteItem.ID)
  return _s;
}
inline const std::string& AutocompleteItem::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void AutocompleteItem::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* AutocompleteItem::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* AutocompleteItem::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.AutocompleteItem.ID)
  return _impl_.id_.Release();
}
inline void AutocompleteItem::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.AutocompleteItem.ID)
}

// string label = 2 [json_name = "label"];
inline void AutocompleteItem::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& AutocompleteItem::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteItem.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AutocompleteItem::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.AutocompleteItem.label)
}
inline std::string* AutocompleteItem::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:api.v1.AutocompleteItem.label)
  return _s;
}
inline const std::string& AutocompleteItem::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void AutocompleteItem::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* AutocompleteItem::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* AutocompleteItem::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.AutocompleteItem.label)
  return _impl_.label_.Release();
}
inline void AutocompleteItem::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.AutocompleteItem.label)
}

// optional bool disabled = 3 [json_name = "disabled"];
inline bool AutocompleteItem::has_disabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AutocompleteItem::clear_disabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool AutocompleteItem::disabled() const {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteItem.disabled)
  return _internal_disabled();
}
inline void AutocompleteItem::set_disabled(bool value) {
  _internal_set_disabled(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:api.v1.AutocompleteItem.disabled)
}
inline bool AutocompleteItem::_internal_disabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disabled_;
}
inline void AutocompleteItem::_internal_set_disabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_ = value;
}

// optional string group = 4 [json_name = "group"];
inline bool AutocompleteItem::has_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AutocompleteItem::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AutocompleteItem::group() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteItem.group)
  return _internal_group();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AutocompleteItem::set_group(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.group_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.AutocompleteItem.group)
}
inline std::string* AutocompleteItem::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:api.v1.AutocompleteItem.group)
  return _s;
}
inline const std::string& AutocompleteItem::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_.Get();
}
inline void AutocompleteItem::_internal_set_group(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.group_.Set(value, GetArena());
}
inline std::string* AutocompleteItem::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.group_.Mutable( GetArena());
}
inline std::string* AutocompleteItem::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.AutocompleteItem.group)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.group_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.group_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AutocompleteItem::set_allocated_group(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.group_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.group_.IsDefault()) {
          _impl_.group_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.AutocompleteItem.group)
}

// -------------------------------------------------------------------

// AutocompleteResponse

// repeated .api.v1.AutocompleteItem items = 1 [json_name = "items"];
inline int AutocompleteResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int AutocompleteResponse::items_size() const {
  return _internal_items_size();
}
inline void AutocompleteResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::api::v1::AutocompleteItem* AutocompleteResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.AutocompleteResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>* AutocompleteResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.AutocompleteResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::api::v1::AutocompleteItem& AutocompleteResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.AutocompleteResponse.items)
  return _internal_items().Get(index);
}
inline ::api::v1::AutocompleteItem* AutocompleteResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1::AutocompleteItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:api.v1.AutocompleteResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>& AutocompleteResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.AutocompleteResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>&
AutocompleteResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::AutocompleteItem>*
AutocompleteResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// GetRequest

// string ID = 1 [json_name = "ID"];
inline void GetRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.GetRequest.ID)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.GetRequest.ID)
}
inline std::string* GetRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:api.v1.GetRequest.ID)
  return _s;
}
inline const std::string& GetRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.GetRequest.ID)
  return _impl_.id_.Release();
}
inline void GetRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.GetRequest.ID)
}

// -------------------------------------------------------------------

// SelectRequest

// optional string requestID = 1 [json_name = "requestID"];
inline bool SelectRequest::has_requestid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SelectRequest::clear_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SelectRequest::requestid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.requestID)
  return _internal_requestid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SelectRequest::set_requestid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requestid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.SelectRequest.requestID)
}
inline std::string* SelectRequest::mutable_requestid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requestid();
  // @@protoc_insertion_point(field_mutable:api.v1.SelectRequest.requestID)
  return _s;
}
inline const std::string& SelectRequest::_internal_requestid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requestid_.Get();
}
inline void SelectRequest::_internal_set_requestid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.requestid_.Set(value, GetArena());
}
inline std::string* SelectRequest::_internal_mutable_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.requestid_.Mutable( GetArena());
}
inline std::string* SelectRequest::release_requestid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SelectRequest.requestID)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.requestid_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requestid_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void SelectRequest::set_allocated_requestid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.requestid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.requestid_.IsDefault()) {
          _impl_.requestid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.SelectRequest.requestID)
}

// repeated string select = 2 [json_name = "select"];
inline int SelectRequest::_internal_select_size() const {
  return _internal_select().size();
}
inline int SelectRequest::select_size() const {
  return _internal_select_size();
}
inline void SelectRequest::clear_select() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.select_.Clear();
}
inline std::string* SelectRequest::add_select()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_select()->Add();
  // @@protoc_insertion_point(field_add_mutable:api.v1.SelectRequest.select)
  return _s;
}
inline const std::string& SelectRequest::select(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.select)
  return _internal_select().Get(index);
}
inline std::string* SelectRequest::mutable_select(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.SelectRequest.select)
  return _internal_mutable_select()->Mutable(index);
}
inline void SelectRequest::set_select(int index, const std::string& value) {
  _internal_mutable_select()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:api.v1.SelectRequest.select)
}
inline void SelectRequest::set_select(int index, std::string&& value) {
  _internal_mutable_select()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:api.v1.SelectRequest.select)
}
inline void SelectRequest::set_select(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_select()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:api.v1.SelectRequest.select)
}
inline void SelectRequest::set_select(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_select()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:api.v1.SelectRequest.select)
}
inline void SelectRequest::set_select(int index, absl::string_view value) {
  _internal_mutable_select()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:api.v1.SelectRequest.select)
}
inline void SelectRequest::add_select(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_select()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:api.v1.SelectRequest.select)
}
inline void SelectRequest::add_select(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_select()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:api.v1.SelectRequest.select)
}
inline void SelectRequest::add_select(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_select()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:api.v1.SelectRequest.select)
}
inline void SelectRequest::add_select(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_select()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:api.v1.SelectRequest.select)
}
inline void SelectRequest::add_select(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_select()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:api.v1.SelectRequest.select)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SelectRequest::select() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.SelectRequest.select)
  return _internal_select();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SelectRequest::mutable_select() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.SelectRequest.select)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_select();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SelectRequest::_internal_select() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.select_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SelectRequest::_internal_mutable_select() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.select_;
}

// bool selectAll = 3 [json_name = "selectAll"];
inline void SelectRequest::clear_selectall() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selectall_ = false;
}
inline bool SelectRequest::selectall() const {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.selectAll)
  return _internal_selectall();
}
inline void SelectRequest::set_selectall(bool value) {
  _internal_set_selectall(value);
  // @@protoc_insertion_point(field_set:api.v1.SelectRequest.selectAll)
}
inline bool SelectRequest::_internal_selectall() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.selectall_;
}
inline void SelectRequest::_internal_set_selectall(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selectall_ = value;
}

// optional .api.v1.Where where = 4 [json_name = "where"];
inline bool SelectRequest::has_where() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.where_ != nullptr);
  return value;
}
inline void SelectRequest::clear_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.where_ != nullptr) _impl_.where_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::api::v1::Where& SelectRequest::_internal_where() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::Where* p = _impl_.where_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Where&>(::api::v1::_Where_default_instance_);
}
inline const ::api::v1::Where& SelectRequest::where() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.where)
  return _internal_where();
}
inline void SelectRequest::unsafe_arena_set_allocated_where(::api::v1::Where* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.where_);
  }
  _impl_.where_ = reinterpret_cast<::api::v1::Where*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.SelectRequest.where)
}
inline ::api::v1::Where* SelectRequest::release_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::api::v1::Where* released = _impl_.where_;
  _impl_.where_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Where* SelectRequest::unsafe_arena_release_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SelectRequest.where)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::api::v1::Where* temp = _impl_.where_;
  _impl_.where_ = nullptr;
  return temp;
}
inline ::api::v1::Where* SelectRequest::_internal_mutable_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.where_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::Where>(GetArena());
    _impl_.where_ = reinterpret_cast<::api::v1::Where*>(p);
  }
  return _impl_.where_;
}
inline ::api::v1::Where* SelectRequest::mutable_where() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::api::v1::Where* _msg = _internal_mutable_where();
  // @@protoc_insertion_point(field_mutable:api.v1.SelectRequest.where)
  return _msg;
}
inline void SelectRequest::set_allocated_where(::api::v1::Where* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.where_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.where_ = reinterpret_cast<::api::v1::Where*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.SelectRequest.where)
}

// repeated .api.v1.OrderBy order = 5 [json_name = "order"];
inline int SelectRequest::_internal_order_size() const {
  return _internal_order().size();
}
inline int SelectRequest::order_size() const {
  return _internal_order_size();
}
inline void SelectRequest::clear_order() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_.Clear();
}
inline ::api::v1::OrderBy* SelectRequest::mutable_order(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.SelectRequest.order)
  return _internal_mutable_order()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>* SelectRequest::mutable_order()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.SelectRequest.order)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order();
}
inline const ::api::v1::OrderBy& SelectRequest::order(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.order)
  return _internal_order().Get(index);
}
inline ::api::v1::OrderBy* SelectRequest::add_order() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1::OrderBy* _add = _internal_mutable_order()->Add();
  // @@protoc_insertion_point(field_add:api.v1.SelectRequest.order)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>& SelectRequest::order() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.SelectRequest.order)
  return _internal_order();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>&
SelectRequest::_internal_order() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::OrderBy>*
SelectRequest::_internal_mutable_order() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_;
}

// optional .api.v1.Pagination pagination = 6 [json_name = "pagination"];
inline bool SelectRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void SelectRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::api::v1::Pagination& SelectRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Pagination&>(::api::v1::_Pagination_default_instance_);
}
inline const ::api::v1::Pagination& SelectRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.pagination)
  return _internal_pagination();
}
inline void SelectRequest::unsafe_arena_set_allocated_pagination(::api::v1::Pagination* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.SelectRequest.pagination)
}
inline ::api::v1::Pagination* SelectRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::api::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Pagination* SelectRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SelectRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::api::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::Pagination* SelectRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::Pagination* SelectRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::api::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:api.v1.SelectRequest.pagination)
  return _msg;
}
inline void SelectRequest::set_allocated_pagination(::api::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.SelectRequest.pagination)
}

// .api.v1.DeletedState deletedState = 7 [json_name = "deletedState"];
inline void SelectRequest::clear_deletedstate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedstate_ = 0;
}
inline ::api::v1::DeletedState SelectRequest::deletedstate() const {
  // @@protoc_insertion_point(field_get:api.v1.SelectRequest.deletedState)
  return _internal_deletedstate();
}
inline void SelectRequest::set_deletedstate(::api::v1::DeletedState value) {
  _internal_set_deletedstate(value);
  // @@protoc_insertion_point(field_set:api.v1.SelectRequest.deletedState)
}
inline ::api::v1::DeletedState SelectRequest::_internal_deletedstate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::DeletedState>(_impl_.deletedstate_);
}
inline void SelectRequest::_internal_set_deletedstate(::api::v1::DeletedState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedstate_ = value;
}

// -------------------------------------------------------------------

// SoftDeleteRequest

// repeated string IDs = 1 [json_name = "IDs"];
inline int SoftDeleteRequest::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int SoftDeleteRequest::ids_size() const {
  return _internal_ids_size();
}
inline void SoftDeleteRequest::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline std::string* SoftDeleteRequest::add_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:api.v1.SoftDeleteRequest.IDs)
  return _s;
}
inline const std::string& SoftDeleteRequest::ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SoftDeleteRequest.IDs)
  return _internal_ids().Get(index);
}
inline std::string* SoftDeleteRequest::mutable_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.SoftDeleteRequest.IDs)
  return _internal_mutable_ids()->Mutable(index);
}
inline void SoftDeleteRequest::set_ids(int index, const std::string& value) {
  _internal_mutable_ids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::set_ids(int index, std::string&& value) {
  _internal_mutable_ids()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::set_ids(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_ids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::set_ids(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_ids()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::set_ids(int index, absl::string_view value) {
  _internal_mutable_ids()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::add_ids(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::add_ids(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::add_ids(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::add_ids(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:api.v1.SoftDeleteRequest.IDs)
}
inline void SoftDeleteRequest::add_ids(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:api.v1.SoftDeleteRequest.IDs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SoftDeleteRequest::ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.SoftDeleteRequest.IDs)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SoftDeleteRequest::mutable_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.SoftDeleteRequest.IDs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SoftDeleteRequest::_internal_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SoftDeleteRequest::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// -------------------------------------------------------------------

// SoftDeleteResponse

// int32 rowsAffected = 1 [json_name = "rowsAffected"];
inline void SoftDeleteResponse::clear_rowsaffected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rowsaffected_ = 0;
}
inline ::int32_t SoftDeleteResponse::rowsaffected() const {
  // @@protoc_insertion_point(field_get:api.v1.SoftDeleteResponse.rowsAffected)
  return _internal_rowsaffected();
}
inline void SoftDeleteResponse::set_rowsaffected(::int32_t value) {
  _internal_set_rowsaffected(value);
  // @@protoc_insertion_point(field_set:api.v1.SoftDeleteResponse.rowsAffected)
}
inline ::int32_t SoftDeleteResponse::_internal_rowsaffected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rowsaffected_;
}
inline void SoftDeleteResponse::_internal_set_rowsaffected(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rowsaffected_ = value;
}

// -------------------------------------------------------------------

// DeleteRequest

// repeated string IDs = 1 [json_name = "IDs"];
inline int DeleteRequest::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int DeleteRequest::ids_size() const {
  return _internal_ids_size();
}
inline void DeleteRequest::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline std::string* DeleteRequest::add_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:api.v1.DeleteRequest.IDs)
  return _s;
}
inline const std::string& DeleteRequest::ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.DeleteRequest.IDs)
  return _internal_ids().Get(index);
}
inline std::string* DeleteRequest::mutable_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.DeleteRequest.IDs)
  return _internal_mutable_ids()->Mutable(index);
}
inline void DeleteRequest::set_ids(int index, const std::string& value) {
  _internal_mutable_ids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::set_ids(int index, std::string&& value) {
  _internal_mutable_ids()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::set_ids(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_ids()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::set_ids(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_ids()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::set_ids(int index, absl::string_view value) {
  _internal_mutable_ids()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::add_ids(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::add_ids(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::add_ids(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::add_ids(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:api.v1.DeleteRequest.IDs)
}
inline void DeleteRequest::add_ids(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:api.v1.DeleteRequest.IDs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeleteRequest::ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.DeleteRequest.IDs)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeleteRequest::mutable_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.DeleteRequest.IDs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeleteRequest::_internal_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeleteRequest::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// optional .api.v1.Where where = 2 [json_name = "where"];
inline bool DeleteRequest::has_where() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.where_ != nullptr);
  return value;
}
inline void DeleteRequest::clear_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.where_ != nullptr) _impl_.where_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::Where& DeleteRequest::_internal_where() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::Where* p = _impl_.where_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Where&>(::api::v1::_Where_default_instance_);
}
inline const ::api::v1::Where& DeleteRequest::where() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.DeleteRequest.where)
  return _internal_where();
}
inline void DeleteRequest::unsafe_arena_set_allocated_where(::api::v1::Where* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.where_);
  }
  _impl_.where_ = reinterpret_cast<::api::v1::Where*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.DeleteRequest.where)
}
inline ::api::v1::Where* DeleteRequest::release_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Where* released = _impl_.where_;
  _impl_.where_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Where* DeleteRequest::unsafe_arena_release_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.DeleteRequest.where)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Where* temp = _impl_.where_;
  _impl_.where_ = nullptr;
  return temp;
}
inline ::api::v1::Where* DeleteRequest::_internal_mutable_where() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.where_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::Where>(GetArena());
    _impl_.where_ = reinterpret_cast<::api::v1::Where*>(p);
  }
  return _impl_.where_;
}
inline ::api::v1::Where* DeleteRequest::mutable_where() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::Where* _msg = _internal_mutable_where();
  // @@protoc_insertion_point(field_mutable:api.v1.DeleteRequest.where)
  return _msg;
}
inline void DeleteRequest::set_allocated_where(::api::v1::Where* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.where_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.where_ = reinterpret_cast<::api::v1::Where*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.DeleteRequest.where)
}

// bool force = 3 [json_name = "force"];
inline void DeleteRequest::clear_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = false;
}
inline bool DeleteRequest::force() const {
  // @@protoc_insertion_point(field_get:api.v1.DeleteRequest.force)
  return _internal_force();
}
inline void DeleteRequest::set_force(bool value) {
  _internal_set_force(value);
  // @@protoc_insertion_point(field_set:api.v1.DeleteRequest.force)
}
inline bool DeleteRequest::_internal_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_;
}
inline void DeleteRequest::_internal_set_force(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = value;
}

// -------------------------------------------------------------------

// DeleteResponse

// int32 rowsAffected = 1 [json_name = "rowsAffected"];
inline void DeleteResponse::clear_rowsaffected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rowsaffected_ = 0;
}
inline ::int32_t DeleteResponse::rowsaffected() const {
  // @@protoc_insertion_point(field_get:api.v1.DeleteResponse.rowsAffected)
  return _internal_rowsaffected();
}
inline void DeleteResponse::set_rowsaffected(::int32_t value) {
  _internal_set_rowsaffected(value);
  // @@protoc_insertion_point(field_set:api.v1.DeleteResponse.rowsAffected)
}
inline ::int32_t DeleteResponse::_internal_rowsaffected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rowsaffected_;
}
inline void DeleteResponse::_internal_set_rowsaffected(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rowsaffected_ = value;
}

// -------------------------------------------------------------------

// Where_Condition

// .api.v1.Where.Clause clause = 1 [json_name = "clause"];
inline bool Where_Condition::has_clause() const {
  return condition_case() == kClause;
}
inline bool Where_Condition::_internal_has_clause() const {
  return condition_case() == kClause;
}
inline void Where_Condition::set_has_clause() {
  _impl_._oneof_case_[0] = kClause;
}
inline void Where_Condition::clear_clause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (condition_case() == kClause) {
    if (GetArena() == nullptr) {
      delete _impl_.condition_.clause_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.clause_);
    }
    clear_has_condition();
  }
}
inline ::api::v1::Where_Clause* Where_Condition::release_clause() {
  // @@protoc_insertion_point(field_release:api.v1.Where.Condition.clause)
  if (condition_case() == kClause) {
    clear_has_condition();
    auto* temp = _impl_.condition_.clause_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.condition_.clause_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::api::v1::Where_Clause& Where_Condition::_internal_clause() const {
  return condition_case() == kClause ? *_impl_.condition_.clause_ : reinterpret_cast<::api::v1::Where_Clause&>(::api::v1::_Where_Clause_default_instance_);
}
inline const ::api::v1::Where_Clause& Where_Condition::clause() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.Condition.clause)
  return _internal_clause();
}
inline ::api::v1::Where_Clause* Where_Condition::unsafe_arena_release_clause() {
  // @@protoc_insertion_point(field_unsafe_arena_release:api.v1.Where.Condition.clause)
  if (condition_case() == kClause) {
    clear_has_condition();
    auto* temp = _impl_.condition_.clause_;
    _impl_.condition_.clause_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Where_Condition::unsafe_arena_set_allocated_clause(::api::v1::Where_Clause* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_condition();
  if (value) {
    set_has_clause();
    _impl_.condition_.clause_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.Where.Condition.clause)
}
inline ::api::v1::Where_Clause* Where_Condition::_internal_mutable_clause() {
  if (condition_case() != kClause) {
    clear_condition();
    set_has_clause();
    _impl_.condition_.clause_ =
        ::google::protobuf::Message::DefaultConstruct<::api::v1::Where_Clause>(GetArena());
  }
  return _impl_.condition_.clause_;
}
inline ::api::v1::Where_Clause* Where_Condition::mutable_clause() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::api::v1::Where_Clause* _msg = _internal_mutable_clause();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.Condition.clause)
  return _msg;
}

// .api.v1.Where group = 2 [json_name = "group"];
inline bool Where_Condition::has_group() const {
  return condition_case() == kGroup;
}
inline bool Where_Condition::_internal_has_group() const {
  return condition_case() == kGroup;
}
inline void Where_Condition::set_has_group() {
  _impl_._oneof_case_[0] = kGroup;
}
inline void Where_Condition::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (condition_case() == kGroup) {
    if (GetArena() == nullptr) {
      delete _impl_.condition_.group_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.group_);
    }
    clear_has_condition();
  }
}
inline ::api::v1::Where* Where_Condition::release_group() {
  // @@protoc_insertion_point(field_release:api.v1.Where.Condition.group)
  if (condition_case() == kGroup) {
    clear_has_condition();
    auto* temp = _impl_.condition_.group_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.condition_.group_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::api::v1::Where& Where_Condition::_internal_group() const {
  return condition_case() == kGroup ? *_impl_.condition_.group_ : reinterpret_cast<::api::v1::Where&>(::api::v1::_Where_default_instance_);
}
inline const ::api::v1::Where& Where_Condition::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.Condition.group)
  return _internal_group();
}
inline ::api::v1::Where* Where_Condition::unsafe_arena_release_group() {
  // @@protoc_insertion_point(field_unsafe_arena_release:api.v1.Where.Condition.group)
  if (condition_case() == kGroup) {
    clear_has_condition();
    auto* temp = _impl_.condition_.group_;
    _impl_.condition_.group_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Where_Condition::unsafe_arena_set_allocated_group(::api::v1::Where* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_condition();
  if (value) {
    set_has_group();
    _impl_.condition_.group_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.Where.Condition.group)
}
inline ::api::v1::Where* Where_Condition::_internal_mutable_group() {
  if (condition_case() != kGroup) {
    clear_condition();
    set_has_group();
    _impl_.condition_.group_ =
        ::google::protobuf::Message::DefaultConstruct<::api::v1::Where>(GetArena());
  }
  return _impl_.condition_.group_;
}
inline ::api::v1::Where* Where_Condition::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::api::v1::Where* _msg = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.Condition.group)
  return _msg;
}

// .api.v1.Where.SubQuery subQuery = 3 [json_name = "subQuery"];
inline bool Where_Condition::has_subquery() const {
  return condition_case() == kSubQuery;
}
inline bool Where_Condition::_internal_has_subquery() const {
  return condition_case() == kSubQuery;
}
inline void Where_Condition::set_has_subquery() {
  _impl_._oneof_case_[0] = kSubQuery;
}
inline void Where_Condition::clear_subquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (condition_case() == kSubQuery) {
    if (GetArena() == nullptr) {
      delete _impl_.condition_.subquery_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.condition_.subquery_);
    }
    clear_has_condition();
  }
}
inline ::api::v1::Where_SubQuery* Where_Condition::release_subquery() {
  // @@protoc_insertion_point(field_release:api.v1.Where.Condition.subQuery)
  if (condition_case() == kSubQuery) {
    clear_has_condition();
    auto* temp = _impl_.condition_.subquery_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.condition_.subquery_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::api::v1::Where_SubQuery& Where_Condition::_internal_subquery() const {
  return condition_case() == kSubQuery ? *_impl_.condition_.subquery_ : reinterpret_cast<::api::v1::Where_SubQuery&>(::api::v1::_Where_SubQuery_default_instance_);
}
inline const ::api::v1::Where_SubQuery& Where_Condition::subquery() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.Condition.subQuery)
  return _internal_subquery();
}
inline ::api::v1::Where_SubQuery* Where_Condition::unsafe_arena_release_subquery() {
  // @@protoc_insertion_point(field_unsafe_arena_release:api.v1.Where.Condition.subQuery)
  if (condition_case() == kSubQuery) {
    clear_has_condition();
    auto* temp = _impl_.condition_.subquery_;
    _impl_.condition_.subquery_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Where_Condition::unsafe_arena_set_allocated_subquery(::api::v1::Where_SubQuery* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_condition();
  if (value) {
    set_has_subquery();
    _impl_.condition_.subquery_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.Where.Condition.subQuery)
}
inline ::api::v1::Where_SubQuery* Where_Condition::_internal_mutable_subquery() {
  if (condition_case() != kSubQuery) {
    clear_condition();
    set_has_subquery();
    _impl_.condition_.subquery_ =
        ::google::protobuf::Message::DefaultConstruct<::api::v1::Where_SubQuery>(GetArena());
  }
  return _impl_.condition_.subquery_;
}
inline ::api::v1::Where_SubQuery* Where_Condition::mutable_subquery() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::api::v1::Where_SubQuery* _msg = _internal_mutable_subquery();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.Condition.subQuery)
  return _msg;
}

inline bool Where_Condition::has_condition() const {
  return condition_case() != CONDITION_NOT_SET;
}
inline void Where_Condition::clear_has_condition() {
  _impl_._oneof_case_[0] = CONDITION_NOT_SET;
}
inline Where_Condition::ConditionCase Where_Condition::condition_case() const {
  return Where_Condition::ConditionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Where_Clause

// string field = 1 [json_name = "field"];
inline void Where_Clause::clear_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.ClearToEmpty();
}
inline const std::string& Where_Clause::field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.Clause.field)
  return _internal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Where_Clause::set_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.Where.Clause.field)
}
inline std::string* Where_Clause::mutable_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.Clause.field)
  return _s;
}
inline const std::string& Where_Clause::_internal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_.Get();
}
inline void Where_Clause::_internal_set_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(value, GetArena());
}
inline std::string* Where_Clause::_internal_mutable_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_.Mutable( GetArena());
}
inline std::string* Where_Clause::release_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.Where.Clause.field)
  return _impl_.field_.Release();
}
inline void Where_Clause::set_allocated_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.field_.IsDefault()) {
          _impl_.field_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.Where.Clause.field)
}

// .api.v1.WhereOperator operator = 2 [json_name = "operator"];
inline void Where_Clause::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::api::v1::WhereOperator Where_Clause::operator_() const {
  // @@protoc_insertion_point(field_get:api.v1.Where.Clause.operator)
  return _internal_operator_();
}
inline void Where_Clause::set_operator_(::api::v1::WhereOperator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:api.v1.Where.Clause.operator)
}
inline ::api::v1::WhereOperator Where_Clause::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::WhereOperator>(_impl_.operator__);
}
inline void Where_Clause::_internal_set_operator_(::api::v1::WhereOperator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// string value = 3 [json_name = "value"];
inline void Where_Clause::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Where_Clause::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.Clause.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Where_Clause::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.Where.Clause.value)
}
inline std::string* Where_Clause::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.Clause.value)
  return _s;
}
inline const std::string& Where_Clause::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Where_Clause::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Where_Clause::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Where_Clause::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.Where.Clause.value)
  return _impl_.value_.Release();
}
inline void Where_Clause::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.Where.Clause.value)
}

// .api.v1.Where.Mode mode = 4 [json_name = "mode"];
inline void Where_Clause::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::api::v1::Where_Mode Where_Clause::mode() const {
  // @@protoc_insertion_point(field_get:api.v1.Where.Clause.mode)
  return _internal_mode();
}
inline void Where_Clause::set_mode(::api::v1::Where_Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:api.v1.Where.Clause.mode)
}
inline ::api::v1::Where_Mode Where_Clause::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::Where_Mode>(_impl_.mode_);
}
inline void Where_Clause::_internal_set_mode(::api::v1::Where_Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// Where_SubQuery

// string field = 1 [json_name = "field"];
inline void Where_SubQuery::clear_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.ClearToEmpty();
}
inline const std::string& Where_SubQuery::field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.SubQuery.field)
  return _internal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Where_SubQuery::set_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.Where.SubQuery.field)
}
inline std::string* Where_SubQuery::mutable_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.SubQuery.field)
  return _s;
}
inline const std::string& Where_SubQuery::_internal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_.Get();
}
inline void Where_SubQuery::_internal_set_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(value, GetArena());
}
inline std::string* Where_SubQuery::_internal_mutable_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_.Mutable( GetArena());
}
inline std::string* Where_SubQuery::release_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.Where.SubQuery.field)
  return _impl_.field_.Release();
}
inline void Where_SubQuery::set_allocated_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.field_.IsDefault()) {
          _impl_.field_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.Where.SubQuery.field)
}

// string column = 2 [json_name = "column"];
inline void Where_SubQuery::clear_column() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_.ClearToEmpty();
}
inline const std::string& Where_SubQuery::column() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.SubQuery.column)
  return _internal_column();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Where_SubQuery::set_column(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.Where.SubQuery.column)
}
inline std::string* Where_SubQuery::mutable_column() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_column();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.SubQuery.column)
  return _s;
}
inline const std::string& Where_SubQuery::_internal_column() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.column_.Get();
}
inline void Where_SubQuery::_internal_set_column(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_.Set(value, GetArena());
}
inline std::string* Where_SubQuery::_internal_mutable_column() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.column_.Mutable( GetArena());
}
inline std::string* Where_SubQuery::release_column() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.Where.SubQuery.column)
  return _impl_.column_.Release();
}
inline void Where_SubQuery::set_allocated_column(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.column_.IsDefault()) {
          _impl_.column_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.Where.SubQuery.column)
}

// .api.v1.WhereOperator operator = 4 [json_name = "operator"];
inline void Where_SubQuery::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = 0;
}
inline ::api::v1::WhereOperator Where_SubQuery::operator_() const {
  // @@protoc_insertion_point(field_get:api.v1.Where.SubQuery.operator)
  return _internal_operator_();
}
inline void Where_SubQuery::set_operator_(::api::v1::WhereOperator value) {
  _internal_set_operator_(value);
  // @@protoc_insertion_point(field_set:api.v1.Where.SubQuery.operator)
}
inline ::api::v1::WhereOperator Where_SubQuery::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::WhereOperator>(_impl_.operator__);
}
inline void Where_SubQuery::_internal_set_operator_(::api::v1::WhereOperator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__ = value;
}

// .api.v1.Where subQuery = 5 [json_name = "subQuery"];
inline bool Where_SubQuery::has_subquery() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subquery_ != nullptr);
  return value;
}
inline void Where_SubQuery::clear_subquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subquery_ != nullptr) _impl_.subquery_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::Where& Where_SubQuery::_internal_subquery() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::Where* p = _impl_.subquery_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::Where&>(::api::v1::_Where_default_instance_);
}
inline const ::api::v1::Where& Where_SubQuery::subquery() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.SubQuery.subQuery)
  return _internal_subquery();
}
inline void Where_SubQuery::unsafe_arena_set_allocated_subquery(::api::v1::Where* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subquery_);
  }
  _impl_.subquery_ = reinterpret_cast<::api::v1::Where*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.Where.SubQuery.subQuery)
}
inline ::api::v1::Where* Where_SubQuery::release_subquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Where* released = _impl_.subquery_;
  _impl_.subquery_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::Where* Where_SubQuery::unsafe_arena_release_subquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.Where.SubQuery.subQuery)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::Where* temp = _impl_.subquery_;
  _impl_.subquery_ = nullptr;
  return temp;
}
inline ::api::v1::Where* Where_SubQuery::_internal_mutable_subquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.subquery_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::Where>(GetArena());
    _impl_.subquery_ = reinterpret_cast<::api::v1::Where*>(p);
  }
  return _impl_.subquery_;
}
inline ::api::v1::Where* Where_SubQuery::mutable_subquery() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::Where* _msg = _internal_mutable_subquery();
  // @@protoc_insertion_point(field_mutable:api.v1.Where.SubQuery.subQuery)
  return _msg;
}
inline void Where_SubQuery::set_allocated_subquery(::api::v1::Where* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.subquery_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subquery_ = reinterpret_cast<::api::v1::Where*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.Where.SubQuery.subQuery)
}

// -------------------------------------------------------------------

// Where

// repeated .api.v1.Where.Condition conditions = 1 [json_name = "conditions"];
inline int Where::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int Where::conditions_size() const {
  return _internal_conditions_size();
}
inline void Where::clear_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conditions_.Clear();
}
inline ::api::v1::Where_Condition* Where::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.Where.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>* Where::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.Where.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::api::v1::Where_Condition& Where::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.Where.conditions)
  return _internal_conditions().Get(index);
}
inline ::api::v1::Where_Condition* Where::add_conditions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1::Where_Condition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:api.v1.Where.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>& Where::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.Where.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>&
Where::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::Where_Condition>*
Where::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// .api.v1.Where.Mode mode = 2 [json_name = "mode"];
inline void Where::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::api::v1::Where_Mode Where::mode() const {
  // @@protoc_insertion_point(field_get:api.v1.Where.mode)
  return _internal_mode();
}
inline void Where::set_mode(::api::v1::Where_Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:api.v1.Where.mode)
}
inline ::api::v1::Where_Mode Where::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::Where_Mode>(_impl_.mode_);
}
inline void Where::_internal_set_mode(::api::v1::Where_Mode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// OrderBy

// string field = 1 [json_name = "field"];
inline void OrderBy::clear_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.ClearToEmpty();
}
inline const std::string& OrderBy::field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.OrderBy.field)
  return _internal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderBy::set_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.OrderBy.field)
}
inline std::string* OrderBy::mutable_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:api.v1.OrderBy.field)
  return _s;
}
inline const std::string& OrderBy::_internal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_.Get();
}
inline void OrderBy::_internal_set_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.Set(value, GetArena());
}
inline std::string* OrderBy::_internal_mutable_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.field_.Mutable( GetArena());
}
inline std::string* OrderBy::release_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.OrderBy.field)
  return _impl_.field_.Release();
}
inline void OrderBy::set_allocated_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.field_.IsDefault()) {
          _impl_.field_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.OrderBy.field)
}

// .api.v1.OrderDirection direction = 2 [json_name = "direction"];
inline void OrderBy::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::api::v1::OrderDirection OrderBy::direction() const {
  // @@protoc_insertion_point(field_get:api.v1.OrderBy.direction)
  return _internal_direction();
}
inline void OrderBy::set_direction(::api::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:api.v1.OrderBy.direction)
}
inline ::api::v1::OrderDirection OrderBy::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::OrderDirection>(_impl_.direction_);
}
inline void OrderBy::_internal_set_direction(::api::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// Pagination

// int32 skip = 1 [json_name = "skip"];
inline void Pagination::clear_skip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_ = 0;
}
inline ::int32_t Pagination::skip() const {
  // @@protoc_insertion_point(field_get:api.v1.Pagination.skip)
  return _internal_skip();
}
inline void Pagination::set_skip(::int32_t value) {
  _internal_set_skip(value);
  // @@protoc_insertion_point(field_set:api.v1.Pagination.skip)
}
inline ::int32_t Pagination::_internal_skip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skip_;
}
inline void Pagination::_internal_set_skip(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_ = value;
}

// int32 take = 2 [json_name = "take"];
inline void Pagination::clear_take() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.take_ = 0;
}
inline ::int32_t Pagination::take() const {
  // @@protoc_insertion_point(field_get:api.v1.Pagination.take)
  return _internal_take();
}
inline void Pagination::set_take(::int32_t value) {
  _internal_set_take(value);
  // @@protoc_insertion_point(field_set:api.v1.Pagination.take)
}
inline ::int32_t Pagination::_internal_take() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.take_;
}
inline void Pagination::_internal_set_take(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.take_ = value;
}

// -------------------------------------------------------------------

// ListResponse

// repeated .google.protobuf.Any items = 1 [json_name = "items"];
inline int ListResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int ListResponse::items_size() const {
  return _internal_items_size();
}
inline ::google::protobuf::Any* ListResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.ListResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* ListResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.ListResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::google::protobuf::Any& ListResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.ListResponse.items)
  return _internal_items().Get(index);
}
inline ::google::protobuf::Any* ListResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:api.v1.ListResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& ListResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.ListResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
ListResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
ListResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
inline bool ListResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void ListResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::PaginationResponse& ListResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::PaginationResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::PaginationResponse&>(::api::v1::_PaginationResponse_default_instance_);
}
inline const ::api::v1::PaginationResponse& ListResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.ListResponse.pagination)
  return _internal_pagination();
}
inline void ListResponse::unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.ListResponse.pagination)
}
inline ::api::v1::PaginationResponse* ListResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::PaginationResponse* ListResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.ListResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::PaginationResponse* ListResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::PaginationResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::PaginationResponse* ListResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::PaginationResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:api.v1.ListResponse.pagination)
  return _msg;
}
inline void ListResponse::set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.ListResponse.pagination)
}

// -------------------------------------------------------------------

// PaginationResponse

// int32 page = 1 [json_name = "page"];
inline void PaginationResponse::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t PaginationResponse::page() const {
  // @@protoc_insertion_point(field_get:api.v1.PaginationResponse.page)
  return _internal_page();
}
inline void PaginationResponse::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:api.v1.PaginationResponse.page)
}
inline ::int32_t PaginationResponse::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void PaginationResponse::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 total = 2 [json_name = "total"];
inline void PaginationResponse::clear_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = 0;
}
inline ::int32_t PaginationResponse::total() const {
  // @@protoc_insertion_point(field_get:api.v1.PaginationResponse.total)
  return _internal_total();
}
inline void PaginationResponse::set_total(::int32_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:api.v1.PaginationResponse.total)
}
inline ::int32_t PaginationResponse::_internal_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_;
}
inline void PaginationResponse::_internal_set_total(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::api::v1::Where_Mode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::api::v1::Where_Mode>() {
  return ::api::v1::Where_Mode_descriptor();
}
template <>
struct is_proto_enum<::api::v1::DeletedState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::api::v1::DeletedState>() {
  return ::api::v1::DeletedState_descriptor();
}
template <>
struct is_proto_enum<::api::v1::WhereOperator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::api::v1::WhereOperator>() {
  return ::api::v1::WhereOperator_descriptor();
}
template <>
struct is_proto_enum<::api::v1::OrderDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::api::v1::OrderDirection>() {
  return ::api::v1::OrderDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_api_2fv1_2fbase_2eproto_2epb_2eh
