// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/v1/test_fixtures.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_2fv1_2ftest_5ffixtures_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_api_2fv1_2ftest_5ffixtures_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "api/v1/base.pb.h"
#include "api/v1/permissions.pb.h"
#include "api/v1/generators.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fv1_2ftest_5ffixtures_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fv1_2ftest_5ffixtures_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_api_2fv1_2ftest_5ffixtures_2eproto;
namespace api {
namespace v1 {
class SaveTestModelRequest;
struct SaveTestModelRequestDefaultTypeInternal;
extern SaveTestModelRequestDefaultTypeInternal _SaveTestModelRequest_default_instance_;
class TestJsonBField;
struct TestJsonBFieldDefaultTypeInternal;
extern TestJsonBFieldDefaultTypeInternal _TestJsonBField_default_instance_;
class TestListResponse;
struct TestListResponseDefaultTypeInternal;
extern TestListResponseDefaultTypeInternal _TestListResponse_default_instance_;
class TestModel;
struct TestModelDefaultTypeInternal;
extern TestModelDefaultTypeInternal _TestModel_default_instance_;
class TestValidatorMessage;
struct TestValidatorMessageDefaultTypeInternal;
extern TestValidatorMessageDefaultTypeInternal _TestValidatorMessage_default_instance_;
}  // namespace v1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace api {
namespace v1 {
enum TestEnum : int {
  TE_UNSPECIFIED = 0,
  TE_FIRST = 1,
  TE_SECOND = 2,
  TE_THIRD = 3,
  TestEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TestEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TestEnum_IsValid(int value);
extern const uint32_t TestEnum_internal_data_[];
constexpr TestEnum TestEnum_MIN = static_cast<TestEnum>(0);
constexpr TestEnum TestEnum_MAX = static_cast<TestEnum>(3);
constexpr int TestEnum_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TestEnum_descriptor();
template <typename T>
const std::string& TestEnum_Name(T value) {
  static_assert(std::is_same<T, TestEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestEnum_Name().");
  return TestEnum_Name(static_cast<TestEnum>(value));
}
template <>
inline const std::string& TestEnum_Name(TestEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestEnum_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TestEnum_Parse(absl::string_view name, TestEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestEnum>(
      TestEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TestValidatorMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.TestValidatorMessage) */ {
 public:
  inline TestValidatorMessage() : TestValidatorMessage(nullptr) {}
  ~TestValidatorMessage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestValidatorMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestValidatorMessage(const TestValidatorMessage& from) : TestValidatorMessage(nullptr, from) {}
  inline TestValidatorMessage(TestValidatorMessage&& from) noexcept
      : TestValidatorMessage(nullptr, std::move(from)) {}
  inline TestValidatorMessage& operator=(const TestValidatorMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestValidatorMessage& operator=(TestValidatorMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestValidatorMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestValidatorMessage* internal_default_instance() {
    return reinterpret_cast<const TestValidatorMessage*>(
        &_TestValidatorMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TestValidatorMessage& a, TestValidatorMessage& b) { a.Swap(&b); }
  inline void Swap(TestValidatorMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestValidatorMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestValidatorMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestValidatorMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestValidatorMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestValidatorMessage& from) { TestValidatorMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestValidatorMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.TestValidatorMessage"; }

 protected:
  explicit TestValidatorMessage(::google::protobuf::Arena* arena);
  TestValidatorMessage(::google::protobuf::Arena* arena, const TestValidatorMessage& from);
  TestValidatorMessage(::google::protobuf::Arena* arena, TestValidatorMessage&& from) noexcept
      : TestValidatorMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
    kMccFieldNumber = 2,
    kMncFieldNumber = 3,
  };
  // string ID = 1 [json_name = "ID"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // int32 mcc = 2 [json_name = "mcc"];
  void clear_mcc() ;
  ::int32_t mcc() const;
  void set_mcc(::int32_t value);

  private:
  ::int32_t _internal_mcc() const;
  void _internal_set_mcc(::int32_t value);

  public:
  // int32 mnc = 3 [json_name = "mnc"];
  void clear_mnc() ;
  ::int32_t mnc() const;
  void set_mnc(::int32_t value);

  private:
  ::int32_t _internal_mnc() const;
  void _internal_set_mnc(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.TestValidatorMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestValidatorMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestValidatorMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::int32_t mcc_;
    ::int32_t mnc_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2ftest_5ffixtures_2eproto;
};
// -------------------------------------------------------------------

class TestJsonBField final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.TestJsonBField) */ {
 public:
  inline TestJsonBField() : TestJsonBField(nullptr) {}
  ~TestJsonBField() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestJsonBField(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestJsonBField(const TestJsonBField& from) : TestJsonBField(nullptr, from) {}
  inline TestJsonBField(TestJsonBField&& from) noexcept
      : TestJsonBField(nullptr, std::move(from)) {}
  inline TestJsonBField& operator=(const TestJsonBField& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestJsonBField& operator=(TestJsonBField&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestJsonBField& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestJsonBField* internal_default_instance() {
    return reinterpret_cast<const TestJsonBField*>(
        &_TestJsonBField_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TestJsonBField& a, TestJsonBField& b) { a.Swap(&b); }
  inline void Swap(TestJsonBField* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestJsonBField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestJsonBField* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestJsonBField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestJsonBField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestJsonBField& from) { TestJsonBField::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestJsonBField* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.TestJsonBField"; }

 protected:
  explicit TestJsonBField(::google::protobuf::Arena* arena);
  TestJsonBField(::google::protobuf::Arena* arena, const TestJsonBField& from);
  TestJsonBField(::google::protobuf::Arena* arena, TestJsonBField&& from) noexcept
      : TestJsonBField(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringFieldNumber = 1,
    kInt32FieldNumber = 2,
    kBoolFieldNumber = 3,
  };
  // string string = 1 [json_name = "string"];
  void clear_string() ;
  const std::string& string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string(Arg_&& arg, Args_... args);
  std::string* mutable_string();
  PROTOBUF_NODISCARD std::string* release_string();
  void set_allocated_string(std::string* value);

  private:
  const std::string& _internal_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string(
      const std::string& value);
  std::string* _internal_mutable_string();

  public:
  // int32 int32 = 2 [json_name = "int32"];
  void clear_int32() ;
  ::int32_t int32() const;
  void set_int32(::int32_t value);

  private:
  ::int32_t _internal_int32() const;
  void _internal_set_int32(::int32_t value);

  public:
  // bool bool = 3 [json_name = "bool"];
  void clear_bool_() ;
  bool bool_() const;
  void set_bool_(bool value);

  private:
  bool _internal_bool_() const;
  void _internal_set_bool_(bool value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.TestJsonBField)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestJsonBField_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestJsonBField& from_msg);
    ::google::protobuf::internal::ArenaStringPtr string_;
    ::int32_t int32_;
    bool bool__;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2ftest_5ffixtures_2eproto;
};
// -------------------------------------------------------------------

class TestModel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.TestModel) */ {
 public:
  inline TestModel() : TestModel(nullptr) {}
  ~TestModel() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestModel(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestModel(const TestModel& from) : TestModel(nullptr, from) {}
  inline TestModel(TestModel&& from) noexcept
      : TestModel(nullptr, std::move(from)) {}
  inline TestModel& operator=(const TestModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestModel& operator=(TestModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestModel* internal_default_instance() {
    return reinterpret_cast<const TestModel*>(
        &_TestModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestModel& a, TestModel& b) { a.Swap(&b); }
  inline void Swap(TestModel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestModel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestModel& from) { TestModel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestModel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.TestModel"; }

 protected:
  explicit TestModel(::google::protobuf::Arena* arena);
  TestModel(::google::protobuf::Arena* arena, const TestModel& from);
  TestModel(::google::protobuf::Arena* arena, TestModel&& from) noexcept
      : TestModel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
    kNameFieldNumber = 2,
    kTestIDFieldNumber = 10,
    kTestLabelFieldNumber = 11,
    kTestGroupIDFieldNumber = 12,
    kCreatedByFieldNumber = 101,
    kUpdatedByFieldNumber = 103,
    kDeletedByFieldNumber = 105,
    kJsonbFieldFieldNumber = 6,
    kAgeFieldNumber = 3,
    kHeightFieldNumber = 4,
    kEnumFieldFieldNumber = 5,
    kFooFieldNumber = 7,
    kBarFieldNumber = 8,
    kNoUpdateFieldNumber = 9,
    kTimeOnlyFieldNumber = 14,
    kCreatedAtFieldNumber = 100,
    kUpdatedAtFieldNumber = 102,
    kDeletedAtFieldNumber = 104,
  };
  // string ID = 1 [json_name = "ID"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string testID = 10 [json_name = "testID"];
  void clear_testid() ;
  const std::string& testid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_testid(Arg_&& arg, Args_... args);
  std::string* mutable_testid();
  PROTOBUF_NODISCARD std::string* release_testid();
  void set_allocated_testid(std::string* value);

  private:
  const std::string& _internal_testid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_testid(
      const std::string& value);
  std::string* _internal_mutable_testid();

  public:
  // string testLabel = 11 [json_name = "testLabel"];
  void clear_testlabel() ;
  const std::string& testlabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_testlabel(Arg_&& arg, Args_... args);
  std::string* mutable_testlabel();
  PROTOBUF_NODISCARD std::string* release_testlabel();
  void set_allocated_testlabel(std::string* value);

  private:
  const std::string& _internal_testlabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_testlabel(
      const std::string& value);
  std::string* _internal_mutable_testlabel();

  public:
  // string testGroupID = 12 [json_name = "testGroupID"];
  void clear_testgroupid() ;
  const std::string& testgroupid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_testgroupid(Arg_&& arg, Args_... args);
  std::string* mutable_testgroupid();
  PROTOBUF_NODISCARD std::string* release_testgroupid();
  void set_allocated_testgroupid(std::string* value);

  private:
  const std::string& _internal_testgroupid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_testgroupid(
      const std::string& value);
  std::string* _internal_mutable_testgroupid();

  public:
  // string createdBy = 101 [json_name = "createdBy"];
  void clear_createdby() ;
  const std::string& createdby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_createdby(Arg_&& arg, Args_... args);
  std::string* mutable_createdby();
  PROTOBUF_NODISCARD std::string* release_createdby();
  void set_allocated_createdby(std::string* value);

  private:
  const std::string& _internal_createdby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_createdby(
      const std::string& value);
  std::string* _internal_mutable_createdby();

  public:
  // optional string updatedBy = 103 [json_name = "updatedBy"];
  bool has_updatedby() const;
  void clear_updatedby() ;
  const std::string& updatedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_updatedby(Arg_&& arg, Args_... args);
  std::string* mutable_updatedby();
  PROTOBUF_NODISCARD std::string* release_updatedby();
  void set_allocated_updatedby(std::string* value);

  private:
  const std::string& _internal_updatedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_updatedby(
      const std::string& value);
  std::string* _internal_mutable_updatedby();

  public:
  // optional string deletedBy = 105 [json_name = "deletedBy"];
  bool has_deletedby() const;
  void clear_deletedby() ;
  const std::string& deletedby() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_deletedby(Arg_&& arg, Args_... args);
  std::string* mutable_deletedby();
  PROTOBUF_NODISCARD std::string* release_deletedby();
  void set_allocated_deletedby(std::string* value);

  private:
  const std::string& _internal_deletedby() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_deletedby(
      const std::string& value);
  std::string* _internal_mutable_deletedby();

  public:
  // .api.v1.TestJsonBField jsonbField = 6 [json_name = "jsonbField"];
  bool has_jsonbfield() const;
  void clear_jsonbfield() ;
  const ::api::v1::TestJsonBField& jsonbfield() const;
  PROTOBUF_NODISCARD ::api::v1::TestJsonBField* release_jsonbfield();
  ::api::v1::TestJsonBField* mutable_jsonbfield();
  void set_allocated_jsonbfield(::api::v1::TestJsonBField* value);
  void unsafe_arena_set_allocated_jsonbfield(::api::v1::TestJsonBField* value);
  ::api::v1::TestJsonBField* unsafe_arena_release_jsonbfield();

  private:
  const ::api::v1::TestJsonBField& _internal_jsonbfield() const;
  ::api::v1::TestJsonBField* _internal_mutable_jsonbfield();

  public:
  // int32 age = 3 [json_name = "age"];
  void clear_age() ;
  ::int32_t age() const;
  void set_age(::int32_t value);

  private:
  ::int32_t _internal_age() const;
  void _internal_set_age(::int32_t value);

  public:
  // int32 height = 4 [json_name = "height"];
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // .api.v1.TestEnum enumField = 5 [json_name = "enumField"];
  void clear_enumfield() ;
  ::api::v1::TestEnum enumfield() const;
  void set_enumfield(::api::v1::TestEnum value);

  private:
  ::api::v1::TestEnum _internal_enumfield() const;
  void _internal_set_enumfield(::api::v1::TestEnum value);

  public:
  // int32 foo = 7 [json_name = "foo"];
  void clear_foo() ;
  ::int32_t foo() const;
  void set_foo(::int32_t value);

  private:
  ::int32_t _internal_foo() const;
  void _internal_set_foo(::int32_t value);

  public:
  // bool bar = 8 [json_name = "bar"];
  void clear_bar() ;
  bool bar() const;
  void set_bar(bool value);

  private:
  bool _internal_bar() const;
  void _internal_set_bar(bool value);

  public:
  // int32 noUpdate = 9 [json_name = "noUpdate"];
  void clear_noupdate() ;
  ::int32_t noupdate() const;
  void set_noupdate(::int32_t value);

  private:
  ::int32_t _internal_noupdate() const;
  void _internal_set_noupdate(::int32_t value);

  public:
  // int64 timeOnly = 14 [json_name = "timeOnly", (.api.v1.ts_grid_opts) = {
  void clear_timeonly() ;
  ::int64_t timeonly() const;
  void set_timeonly(::int64_t value);

  private:
  ::int64_t _internal_timeonly() const;
  void _internal_set_timeonly(::int64_t value);

  public:
  // int64 createdAt = 100 [json_name = "createdAt"];
  void clear_createdat() ;
  ::int64_t createdat() const;
  void set_createdat(::int64_t value);

  private:
  ::int64_t _internal_createdat() const;
  void _internal_set_createdat(::int64_t value);

  public:
  // optional int64 updatedAt = 102 [json_name = "updatedAt"];
  bool has_updatedat() const;
  void clear_updatedat() ;
  ::int64_t updatedat() const;
  void set_updatedat(::int64_t value);

  private:
  ::int64_t _internal_updatedat() const;
  void _internal_set_updatedat(::int64_t value);

  public:
  // optional int64 deletedAt = 104 [json_name = "deletedAt"];
  bool has_deletedat() const;
  void clear_deletedat() ;
  ::int64_t deletedat() const;
  void set_deletedat(::int64_t value);

  private:
  ::int64_t _internal_deletedat() const;
  void _internal_set_deletedat(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.TestModel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 19, 1,
      100, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestModel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestModel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr testid_;
    ::google::protobuf::internal::ArenaStringPtr testlabel_;
    ::google::protobuf::internal::ArenaStringPtr testgroupid_;
    ::google::protobuf::internal::ArenaStringPtr createdby_;
    ::google::protobuf::internal::ArenaStringPtr updatedby_;
    ::google::protobuf::internal::ArenaStringPtr deletedby_;
    ::api::v1::TestJsonBField* jsonbfield_;
    ::int32_t age_;
    ::int32_t height_;
    int enumfield_;
    ::int32_t foo_;
    bool bar_;
    ::int32_t noupdate_;
    ::int64_t timeonly_;
    ::int64_t createdat_;
    ::int64_t updatedat_;
    ::int64_t deletedat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2ftest_5ffixtures_2eproto;
};
// -------------------------------------------------------------------

class SaveTestModelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.SaveTestModelRequest) */ {
 public:
  inline SaveTestModelRequest() : SaveTestModelRequest(nullptr) {}
  ~SaveTestModelRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveTestModelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveTestModelRequest(const SaveTestModelRequest& from) : SaveTestModelRequest(nullptr, from) {}
  inline SaveTestModelRequest(SaveTestModelRequest&& from) noexcept
      : SaveTestModelRequest(nullptr, std::move(from)) {}
  inline SaveTestModelRequest& operator=(const SaveTestModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveTestModelRequest& operator=(SaveTestModelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveTestModelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveTestModelRequest* internal_default_instance() {
    return reinterpret_cast<const SaveTestModelRequest*>(
        &_SaveTestModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SaveTestModelRequest& a, SaveTestModelRequest& b) { a.Swap(&b); }
  inline void Swap(SaveTestModelRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveTestModelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveTestModelRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SaveTestModelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SaveTestModelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SaveTestModelRequest& from) { SaveTestModelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SaveTestModelRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.SaveTestModelRequest"; }

 protected:
  explicit SaveTestModelRequest(::google::protobuf::Arena* arena);
  SaveTestModelRequest(::google::protobuf::Arena* arena, const SaveTestModelRequest& from);
  SaveTestModelRequest(::google::protobuf::Arena* arena, SaveTestModelRequest&& from) noexcept
      : SaveTestModelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIDFieldNumber = 1,
    kNameFieldNumber = 2,
    kTestIDFieldNumber = 8,
    kTestGroupIDFieldNumber = 9,
    kJsonbFieldFieldNumber = 6,
    kAgeFieldNumber = 3,
    kHeightFieldNumber = 4,
    kEnumFieldFieldNumber = 5,
    kNoUpdateFieldNumber = 7,
  };
  // string ID = 1 [json_name = "ID"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string testID = 8 [json_name = "testID"];
  void clear_testid() ;
  const std::string& testid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_testid(Arg_&& arg, Args_... args);
  std::string* mutable_testid();
  PROTOBUF_NODISCARD std::string* release_testid();
  void set_allocated_testid(std::string* value);

  private:
  const std::string& _internal_testid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_testid(
      const std::string& value);
  std::string* _internal_mutable_testid();

  public:
  // string testGroupID = 9 [json_name = "testGroupID"];
  void clear_testgroupid() ;
  const std::string& testgroupid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_testgroupid(Arg_&& arg, Args_... args);
  std::string* mutable_testgroupid();
  PROTOBUF_NODISCARD std::string* release_testgroupid();
  void set_allocated_testgroupid(std::string* value);

  private:
  const std::string& _internal_testgroupid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_testgroupid(
      const std::string& value);
  std::string* _internal_mutable_testgroupid();

  public:
  // .api.v1.TestJsonBField jsonbField = 6 [json_name = "jsonbField"];
  bool has_jsonbfield() const;
  void clear_jsonbfield() ;
  const ::api::v1::TestJsonBField& jsonbfield() const;
  PROTOBUF_NODISCARD ::api::v1::TestJsonBField* release_jsonbfield();
  ::api::v1::TestJsonBField* mutable_jsonbfield();
  void set_allocated_jsonbfield(::api::v1::TestJsonBField* value);
  void unsafe_arena_set_allocated_jsonbfield(::api::v1::TestJsonBField* value);
  ::api::v1::TestJsonBField* unsafe_arena_release_jsonbfield();

  private:
  const ::api::v1::TestJsonBField& _internal_jsonbfield() const;
  ::api::v1::TestJsonBField* _internal_mutable_jsonbfield();

  public:
  // int32 age = 3 [json_name = "age"];
  void clear_age() ;
  ::int32_t age() const;
  void set_age(::int32_t value);

  private:
  ::int32_t _internal_age() const;
  void _internal_set_age(::int32_t value);

  public:
  // int32 height = 4 [json_name = "height"];
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // .api.v1.TestEnum enumField = 5 [json_name = "enumField"];
  void clear_enumfield() ;
  ::api::v1::TestEnum enumfield() const;
  void set_enumfield(::api::v1::TestEnum value);

  private:
  ::api::v1::TestEnum _internal_enumfield() const;
  void _internal_set_enumfield(::api::v1::TestEnum value);

  public:
  // int32 noUpdate = 7 [json_name = "noUpdate", (.api.v1.ts_update_disabled) = true];
  void clear_noupdate() ;
  ::int32_t noupdate() const;
  void set_noupdate(::int32_t value);

  private:
  ::int32_t _internal_noupdate() const;
  void _internal_set_noupdate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1.SaveTestModelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SaveTestModelRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveTestModelRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr testid_;
    ::google::protobuf::internal::ArenaStringPtr testgroupid_;
    ::api::v1::TestJsonBField* jsonbfield_;
    ::int32_t age_;
    ::int32_t height_;
    int enumfield_;
    ::int32_t noupdate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2ftest_5ffixtures_2eproto;
};
// -------------------------------------------------------------------

class TestListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1.TestListResponse) */ {
 public:
  inline TestListResponse() : TestListResponse(nullptr) {}
  ~TestListResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestListResponse(const TestListResponse& from) : TestListResponse(nullptr, from) {}
  inline TestListResponse(TestListResponse&& from) noexcept
      : TestListResponse(nullptr, std::move(from)) {}
  inline TestListResponse& operator=(const TestListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestListResponse& operator=(TestListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestListResponse* internal_default_instance() {
    return reinterpret_cast<const TestListResponse*>(
        &_TestListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TestListResponse& a, TestListResponse& b) { a.Swap(&b); }
  inline void Swap(TestListResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestListResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestListResponse& from) { TestListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestListResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "api.v1.TestListResponse"; }

 protected:
  explicit TestListResponse(::google::protobuf::Arena* arena);
  TestListResponse(::google::protobuf::Arena* arena, const TestListResponse& from);
  TestListResponse(::google::protobuf::Arena* arena, TestListResponse&& from) noexcept
      : TestListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .api.v1.TestModel items = 1 [json_name = "items"];
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::api::v1::TestModel* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>* _internal_mutable_items();
  public:
  const ::api::v1::TestModel& items(int index) const;
  ::api::v1::TestModel* add_items();
  const ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>& items() const;
  // .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::api::v1::PaginationResponse& pagination() const;
  PROTOBUF_NODISCARD ::api::v1::PaginationResponse* release_pagination();
  ::api::v1::PaginationResponse* mutable_pagination();
  void set_allocated_pagination(::api::v1::PaginationResponse* value);
  void unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value);
  ::api::v1::PaginationResponse* unsafe_arena_release_pagination();

  private:
  const ::api::v1::PaginationResponse& _internal_pagination() const;
  ::api::v1::PaginationResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:api.v1.TestListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestListResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestListResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::api::v1::TestModel > items_;
    ::api::v1::PaginationResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1_2ftest_5ffixtures_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestModel

// string ID = 1 [json_name = "ID"];
inline void TestModel::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& TestModel::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.ID)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.ID)
}
inline std::string* TestModel::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.ID)
  return _s;
}
inline const std::string& TestModel::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void TestModel::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* TestModel::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.ID)
  return _impl_.id_.Release();
}
inline void TestModel::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.ID)
}

// string name = 2 [json_name = "name"];
inline void TestModel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TestModel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.name)
}
inline std::string* TestModel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.name)
  return _s;
}
inline const std::string& TestModel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void TestModel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* TestModel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.name)
  return _impl_.name_.Release();
}
inline void TestModel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.name)
}

// int32 age = 3 [json_name = "age"];
inline void TestModel::clear_age() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.age_ = 0;
}
inline ::int32_t TestModel::age() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.age)
  return _internal_age();
}
inline void TestModel::set_age(::int32_t value) {
  _internal_set_age(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.age)
}
inline ::int32_t TestModel::_internal_age() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.age_;
}
inline void TestModel::_internal_set_age(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.age_ = value;
}

// int32 height = 4 [json_name = "height"];
inline void TestModel::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline ::int32_t TestModel::height() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.height)
  return _internal_height();
}
inline void TestModel::set_height(::int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.height)
}
inline ::int32_t TestModel::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void TestModel::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .api.v1.TestEnum enumField = 5 [json_name = "enumField"];
inline void TestModel::clear_enumfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enumfield_ = 0;
}
inline ::api::v1::TestEnum TestModel::enumfield() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.enumField)
  return _internal_enumfield();
}
inline void TestModel::set_enumfield(::api::v1::TestEnum value) {
  _internal_set_enumfield(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.enumField)
}
inline ::api::v1::TestEnum TestModel::_internal_enumfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::TestEnum>(_impl_.enumfield_);
}
inline void TestModel::_internal_set_enumfield(::api::v1::TestEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enumfield_ = value;
}

// .api.v1.TestJsonBField jsonbField = 6 [json_name = "jsonbField"];
inline bool TestModel::has_jsonbfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.jsonbfield_ != nullptr);
  return value;
}
inline void TestModel::clear_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jsonbfield_ != nullptr) _impl_.jsonbfield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::api::v1::TestJsonBField& TestModel::_internal_jsonbfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::TestJsonBField* p = _impl_.jsonbfield_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::TestJsonBField&>(::api::v1::_TestJsonBField_default_instance_);
}
inline const ::api::v1::TestJsonBField& TestModel::jsonbfield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.jsonbField)
  return _internal_jsonbfield();
}
inline void TestModel::unsafe_arena_set_allocated_jsonbfield(::api::v1::TestJsonBField* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.jsonbfield_);
  }
  _impl_.jsonbfield_ = reinterpret_cast<::api::v1::TestJsonBField*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.TestModel.jsonbField)
}
inline ::api::v1::TestJsonBField* TestModel::release_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::api::v1::TestJsonBField* released = _impl_.jsonbfield_;
  _impl_.jsonbfield_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::TestJsonBField* TestModel::unsafe_arena_release_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.jsonbField)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::api::v1::TestJsonBField* temp = _impl_.jsonbfield_;
  _impl_.jsonbfield_ = nullptr;
  return temp;
}
inline ::api::v1::TestJsonBField* TestModel::_internal_mutable_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jsonbfield_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::TestJsonBField>(GetArena());
    _impl_.jsonbfield_ = reinterpret_cast<::api::v1::TestJsonBField*>(p);
  }
  return _impl_.jsonbfield_;
}
inline ::api::v1::TestJsonBField* TestModel::mutable_jsonbfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::api::v1::TestJsonBField* _msg = _internal_mutable_jsonbfield();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.jsonbField)
  return _msg;
}
inline void TestModel::set_allocated_jsonbfield(::api::v1::TestJsonBField* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.jsonbfield_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.jsonbfield_ = reinterpret_cast<::api::v1::TestJsonBField*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.jsonbField)
}

// int32 foo = 7 [json_name = "foo"];
inline void TestModel::clear_foo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_ = 0;
}
inline ::int32_t TestModel::foo() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.foo)
  return _internal_foo();
}
inline void TestModel::set_foo(::int32_t value) {
  _internal_set_foo(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.foo)
}
inline ::int32_t TestModel::_internal_foo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.foo_;
}
inline void TestModel::_internal_set_foo(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.foo_ = value;
}

// bool bar = 8 [json_name = "bar"];
inline void TestModel::clear_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_ = false;
}
inline bool TestModel::bar() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.bar)
  return _internal_bar();
}
inline void TestModel::set_bar(bool value) {
  _internal_set_bar(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.bar)
}
inline bool TestModel::_internal_bar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bar_;
}
inline void TestModel::_internal_set_bar(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_ = value;
}

// int32 noUpdate = 9 [json_name = "noUpdate"];
inline void TestModel::clear_noupdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.noupdate_ = 0;
}
inline ::int32_t TestModel::noupdate() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.noUpdate)
  return _internal_noupdate();
}
inline void TestModel::set_noupdate(::int32_t value) {
  _internal_set_noupdate(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.noUpdate)
}
inline ::int32_t TestModel::_internal_noupdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.noupdate_;
}
inline void TestModel::_internal_set_noupdate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.noupdate_ = value;
}

// string testID = 10 [json_name = "testID"];
inline void TestModel::clear_testid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.ClearToEmpty();
}
inline const std::string& TestModel::testid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.testID)
  return _internal_testid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_testid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.testID)
}
inline std::string* TestModel::mutable_testid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_testid();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.testID)
  return _s;
}
inline const std::string& TestModel::_internal_testid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testid_.Get();
}
inline void TestModel::_internal_set_testid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_testid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.testid_.Mutable( GetArena());
}
inline std::string* TestModel::release_testid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.testID)
  return _impl_.testid_.Release();
}
inline void TestModel::set_allocated_testid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.testid_.IsDefault()) {
          _impl_.testid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.testID)
}

// string testLabel = 11 [json_name = "testLabel"];
inline void TestModel::clear_testlabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testlabel_.ClearToEmpty();
}
inline const std::string& TestModel::testlabel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.testLabel)
  return _internal_testlabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_testlabel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testlabel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.testLabel)
}
inline std::string* TestModel::mutable_testlabel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_testlabel();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.testLabel)
  return _s;
}
inline const std::string& TestModel::_internal_testlabel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testlabel_.Get();
}
inline void TestModel::_internal_set_testlabel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testlabel_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_testlabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.testlabel_.Mutable( GetArena());
}
inline std::string* TestModel::release_testlabel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.testLabel)
  return _impl_.testlabel_.Release();
}
inline void TestModel::set_allocated_testlabel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testlabel_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.testlabel_.IsDefault()) {
          _impl_.testlabel_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.testLabel)
}

// string testGroupID = 12 [json_name = "testGroupID"];
inline void TestModel::clear_testgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.ClearToEmpty();
}
inline const std::string& TestModel::testgroupid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.testGroupID)
  return _internal_testgroupid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_testgroupid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.testGroupID)
}
inline std::string* TestModel::mutable_testgroupid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_testgroupid();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.testGroupID)
  return _s;
}
inline const std::string& TestModel::_internal_testgroupid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testgroupid_.Get();
}
inline void TestModel::_internal_set_testgroupid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_testgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.testgroupid_.Mutable( GetArena());
}
inline std::string* TestModel::release_testgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.testGroupID)
  return _impl_.testgroupid_.Release();
}
inline void TestModel::set_allocated_testgroupid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.testgroupid_.IsDefault()) {
          _impl_.testgroupid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.testGroupID)
}

// int64 timeOnly = 14 [json_name = "timeOnly", (.api.v1.ts_grid_opts) = {
inline void TestModel::clear_timeonly() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeonly_ = ::int64_t{0};
}
inline ::int64_t TestModel::timeonly() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.timeOnly)
  return _internal_timeonly();
}
inline void TestModel::set_timeonly(::int64_t value) {
  _internal_set_timeonly(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.timeOnly)
}
inline ::int64_t TestModel::_internal_timeonly() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeonly_;
}
inline void TestModel::_internal_set_timeonly(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeonly_ = value;
}

// int64 createdAt = 100 [json_name = "createdAt"];
inline void TestModel::clear_createdat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = ::int64_t{0};
}
inline ::int64_t TestModel::createdat() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.createdAt)
  return _internal_createdat();
}
inline void TestModel::set_createdat(::int64_t value) {
  _internal_set_createdat(value);
  // @@protoc_insertion_point(field_set:api.v1.TestModel.createdAt)
}
inline ::int64_t TestModel::_internal_createdat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdat_;
}
inline void TestModel::_internal_set_createdat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdat_ = value;
}

// string createdBy = 101 [json_name = "createdBy"];
inline void TestModel::clear_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.ClearToEmpty();
}
inline const std::string& TestModel::createdby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.createdBy)
  return _internal_createdby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_createdby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.createdBy)
}
inline std::string* TestModel::mutable_createdby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_createdby();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.createdBy)
  return _s;
}
inline const std::string& TestModel::_internal_createdby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.createdby_.Get();
}
inline void TestModel::_internal_set_createdby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.createdby_.Mutable( GetArena());
}
inline std::string* TestModel::release_createdby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.createdBy)
  return _impl_.createdby_.Release();
}
inline void TestModel::set_allocated_createdby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.createdby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.createdby_.IsDefault()) {
          _impl_.createdby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.createdBy)
}

// optional int64 updatedAt = 102 [json_name = "updatedAt"];
inline bool TestModel::has_updatedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void TestModel::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t TestModel::updatedat() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.updatedAt)
  return _internal_updatedat();
}
inline void TestModel::set_updatedat(::int64_t value) {
  _internal_set_updatedat(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:api.v1.TestModel.updatedAt)
}
inline ::int64_t TestModel::_internal_updatedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedat_;
}
inline void TestModel::_internal_set_updatedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedat_ = value;
}

// optional string updatedBy = 103 [json_name = "updatedBy"];
inline bool TestModel::has_updatedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TestModel::clear_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TestModel::updatedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.updatedBy)
  return _internal_updatedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_updatedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.updatedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.updatedBy)
}
inline std::string* TestModel::mutable_updatedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_updatedby();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.updatedBy)
  return _s;
}
inline const std::string& TestModel::_internal_updatedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatedby_.Get();
}
inline void TestModel::_internal_set_updatedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.updatedby_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.updatedby_.Mutable( GetArena());
}
inline std::string* TestModel::release_updatedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.updatedBy)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.updatedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.updatedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestModel::set_allocated_updatedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.updatedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.updatedby_.IsDefault()) {
          _impl_.updatedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.updatedBy)
}

// optional int64 deletedAt = 104 [json_name = "deletedAt"];
inline bool TestModel::has_deletedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void TestModel::clear_deletedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t TestModel::deletedat() const {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.deletedAt)
  return _internal_deletedat();
}
inline void TestModel::set_deletedat(::int64_t value) {
  _internal_set_deletedat(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:api.v1.TestModel.deletedAt)
}
inline ::int64_t TestModel::_internal_deletedat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedat_;
}
inline void TestModel::_internal_set_deletedat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedat_ = value;
}

// optional string deletedBy = 105 [json_name = "deletedBy"];
inline bool TestModel::has_deletedby() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TestModel::clear_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deletedby_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& TestModel::deletedby() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestModel.deletedBy)
  return _internal_deletedby();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestModel::set_deletedby(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.deletedby_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestModel.deletedBy)
}
inline std::string* TestModel::mutable_deletedby() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_deletedby();
  // @@protoc_insertion_point(field_mutable:api.v1.TestModel.deletedBy)
  return _s;
}
inline const std::string& TestModel::_internal_deletedby() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deletedby_.Get();
}
inline void TestModel::_internal_set_deletedby(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.deletedby_.Set(value, GetArena());
}
inline std::string* TestModel::_internal_mutable_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.deletedby_.Mutable( GetArena());
}
inline std::string* TestModel::release_deletedby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestModel.deletedBy)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.deletedby_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deletedby_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void TestModel::set_allocated_deletedby(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.deletedby_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.deletedby_.IsDefault()) {
          _impl_.deletedby_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestModel.deletedBy)
}

// -------------------------------------------------------------------

// TestListResponse

// repeated .api.v1.TestModel items = 1 [json_name = "items"];
inline int TestListResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int TestListResponse::items_size() const {
  return _internal_items_size();
}
inline void TestListResponse::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::api::v1::TestModel* TestListResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1.TestListResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>* TestListResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1.TestListResponse.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::api::v1::TestModel& TestListResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestListResponse.items)
  return _internal_items().Get(index);
}
inline ::api::v1::TestModel* TestListResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1::TestModel* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:api.v1.TestListResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>& TestListResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1.TestListResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>&
TestListResponse::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1::TestModel>*
TestListResponse::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// .api.v1.PaginationResponse pagination = 2 [json_name = "pagination"];
inline bool TestListResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::api::v1::PaginationResponse& TestListResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::PaginationResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::PaginationResponse&>(::api::v1::_PaginationResponse_default_instance_);
}
inline const ::api::v1::PaginationResponse& TestListResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestListResponse.pagination)
  return _internal_pagination();
}
inline void TestListResponse::unsafe_arena_set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.TestListResponse.pagination)
}
inline ::api::v1::PaginationResponse* TestListResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::PaginationResponse* TestListResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestListResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::PaginationResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::api::v1::PaginationResponse* TestListResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::PaginationResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::api::v1::PaginationResponse* TestListResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::PaginationResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:api.v1.TestListResponse.pagination)
  return _msg;
}
inline void TestListResponse::set_allocated_pagination(::api::v1::PaginationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::api::v1::PaginationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestListResponse.pagination)
}

// -------------------------------------------------------------------

// SaveTestModelRequest

// string ID = 1 [json_name = "ID"];
inline void SaveTestModelRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SaveTestModelRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.ID)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveTestModelRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.ID)
}
inline std::string* SaveTestModelRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:api.v1.SaveTestModelRequest.ID)
  return _s;
}
inline const std::string& SaveTestModelRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SaveTestModelRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SaveTestModelRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SaveTestModelRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SaveTestModelRequest.ID)
  return _impl_.id_.Release();
}
inline void SaveTestModelRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.SaveTestModelRequest.ID)
}

// string name = 2 [json_name = "name"];
inline void SaveTestModelRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SaveTestModelRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveTestModelRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.name)
}
inline std::string* SaveTestModelRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:api.v1.SaveTestModelRequest.name)
  return _s;
}
inline const std::string& SaveTestModelRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SaveTestModelRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SaveTestModelRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SaveTestModelRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SaveTestModelRequest.name)
  return _impl_.name_.Release();
}
inline void SaveTestModelRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.SaveTestModelRequest.name)
}

// int32 age = 3 [json_name = "age"];
inline void SaveTestModelRequest::clear_age() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.age_ = 0;
}
inline ::int32_t SaveTestModelRequest::age() const {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.age)
  return _internal_age();
}
inline void SaveTestModelRequest::set_age(::int32_t value) {
  _internal_set_age(value);
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.age)
}
inline ::int32_t SaveTestModelRequest::_internal_age() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.age_;
}
inline void SaveTestModelRequest::_internal_set_age(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.age_ = value;
}

// int32 height = 4 [json_name = "height"];
inline void SaveTestModelRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline ::int32_t SaveTestModelRequest::height() const {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.height)
  return _internal_height();
}
inline void SaveTestModelRequest::set_height(::int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.height)
}
inline ::int32_t SaveTestModelRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void SaveTestModelRequest::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .api.v1.TestEnum enumField = 5 [json_name = "enumField"];
inline void SaveTestModelRequest::clear_enumfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enumfield_ = 0;
}
inline ::api::v1::TestEnum SaveTestModelRequest::enumfield() const {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.enumField)
  return _internal_enumfield();
}
inline void SaveTestModelRequest::set_enumfield(::api::v1::TestEnum value) {
  _internal_set_enumfield(value);
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.enumField)
}
inline ::api::v1::TestEnum SaveTestModelRequest::_internal_enumfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1::TestEnum>(_impl_.enumfield_);
}
inline void SaveTestModelRequest::_internal_set_enumfield(::api::v1::TestEnum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enumfield_ = value;
}

// .api.v1.TestJsonBField jsonbField = 6 [json_name = "jsonbField"];
inline bool SaveTestModelRequest::has_jsonbfield() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.jsonbfield_ != nullptr);
  return value;
}
inline void SaveTestModelRequest::clear_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jsonbfield_ != nullptr) _impl_.jsonbfield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::api::v1::TestJsonBField& SaveTestModelRequest::_internal_jsonbfield() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1::TestJsonBField* p = _impl_.jsonbfield_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1::TestJsonBField&>(::api::v1::_TestJsonBField_default_instance_);
}
inline const ::api::v1::TestJsonBField& SaveTestModelRequest::jsonbfield() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.jsonbField)
  return _internal_jsonbfield();
}
inline void SaveTestModelRequest::unsafe_arena_set_allocated_jsonbfield(::api::v1::TestJsonBField* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.jsonbfield_);
  }
  _impl_.jsonbfield_ = reinterpret_cast<::api::v1::TestJsonBField*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:api.v1.SaveTestModelRequest.jsonbField)
}
inline ::api::v1::TestJsonBField* SaveTestModelRequest::release_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::TestJsonBField* released = _impl_.jsonbfield_;
  _impl_.jsonbfield_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::api::v1::TestJsonBField* SaveTestModelRequest::unsafe_arena_release_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SaveTestModelRequest.jsonbField)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::api::v1::TestJsonBField* temp = _impl_.jsonbfield_;
  _impl_.jsonbfield_ = nullptr;
  return temp;
}
inline ::api::v1::TestJsonBField* SaveTestModelRequest::_internal_mutable_jsonbfield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jsonbfield_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1::TestJsonBField>(GetArena());
    _impl_.jsonbfield_ = reinterpret_cast<::api::v1::TestJsonBField*>(p);
  }
  return _impl_.jsonbfield_;
}
inline ::api::v1::TestJsonBField* SaveTestModelRequest::mutable_jsonbfield() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::api::v1::TestJsonBField* _msg = _internal_mutable_jsonbfield();
  // @@protoc_insertion_point(field_mutable:api.v1.SaveTestModelRequest.jsonbField)
  return _msg;
}
inline void SaveTestModelRequest::set_allocated_jsonbfield(::api::v1::TestJsonBField* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.jsonbfield_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.jsonbfield_ = reinterpret_cast<::api::v1::TestJsonBField*>(value);
  // @@protoc_insertion_point(field_set_allocated:api.v1.SaveTestModelRequest.jsonbField)
}

// int32 noUpdate = 7 [json_name = "noUpdate", (.api.v1.ts_update_disabled) = true];
inline void SaveTestModelRequest::clear_noupdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.noupdate_ = 0;
}
inline ::int32_t SaveTestModelRequest::noupdate() const {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.noUpdate)
  return _internal_noupdate();
}
inline void SaveTestModelRequest::set_noupdate(::int32_t value) {
  _internal_set_noupdate(value);
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.noUpdate)
}
inline ::int32_t SaveTestModelRequest::_internal_noupdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.noupdate_;
}
inline void SaveTestModelRequest::_internal_set_noupdate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.noupdate_ = value;
}

// string testID = 8 [json_name = "testID"];
inline void SaveTestModelRequest::clear_testid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.ClearToEmpty();
}
inline const std::string& SaveTestModelRequest::testid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.testID)
  return _internal_testid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveTestModelRequest::set_testid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.testID)
}
inline std::string* SaveTestModelRequest::mutable_testid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_testid();
  // @@protoc_insertion_point(field_mutable:api.v1.SaveTestModelRequest.testID)
  return _s;
}
inline const std::string& SaveTestModelRequest::_internal_testid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testid_.Get();
}
inline void SaveTestModelRequest::_internal_set_testid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.Set(value, GetArena());
}
inline std::string* SaveTestModelRequest::_internal_mutable_testid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.testid_.Mutable( GetArena());
}
inline std::string* SaveTestModelRequest::release_testid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SaveTestModelRequest.testID)
  return _impl_.testid_.Release();
}
inline void SaveTestModelRequest::set_allocated_testid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.testid_.IsDefault()) {
          _impl_.testid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.SaveTestModelRequest.testID)
}

// string testGroupID = 9 [json_name = "testGroupID"];
inline void SaveTestModelRequest::clear_testgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.ClearToEmpty();
}
inline const std::string& SaveTestModelRequest::testgroupid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.SaveTestModelRequest.testGroupID)
  return _internal_testgroupid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SaveTestModelRequest::set_testgroupid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.SaveTestModelRequest.testGroupID)
}
inline std::string* SaveTestModelRequest::mutable_testgroupid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_testgroupid();
  // @@protoc_insertion_point(field_mutable:api.v1.SaveTestModelRequest.testGroupID)
  return _s;
}
inline const std::string& SaveTestModelRequest::_internal_testgroupid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testgroupid_.Get();
}
inline void SaveTestModelRequest::_internal_set_testgroupid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.Set(value, GetArena());
}
inline std::string* SaveTestModelRequest::_internal_mutable_testgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.testgroupid_.Mutable( GetArena());
}
inline std::string* SaveTestModelRequest::release_testgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.SaveTestModelRequest.testGroupID)
  return _impl_.testgroupid_.Release();
}
inline void SaveTestModelRequest::set_allocated_testgroupid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testgroupid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.testgroupid_.IsDefault()) {
          _impl_.testgroupid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.SaveTestModelRequest.testGroupID)
}

// -------------------------------------------------------------------

// TestJsonBField

// string string = 1 [json_name = "string"];
inline void TestJsonBField::clear_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_.ClearToEmpty();
}
inline const std::string& TestJsonBField::string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestJsonBField.string)
  return _internal_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestJsonBField::set_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestJsonBField.string)
}
inline std::string* TestJsonBField::mutable_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string();
  // @@protoc_insertion_point(field_mutable:api.v1.TestJsonBField.string)
  return _s;
}
inline const std::string& TestJsonBField::_internal_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_.Get();
}
inline void TestJsonBField::_internal_set_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_.Set(value, GetArena());
}
inline std::string* TestJsonBField::_internal_mutable_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.string_.Mutable( GetArena());
}
inline std::string* TestJsonBField::release_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestJsonBField.string)
  return _impl_.string_.Release();
}
inline void TestJsonBField::set_allocated_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.string_.IsDefault()) {
          _impl_.string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestJsonBField.string)
}

// int32 int32 = 2 [json_name = "int32"];
inline void TestJsonBField::clear_int32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int32_ = 0;
}
inline ::int32_t TestJsonBField::int32() const {
  // @@protoc_insertion_point(field_get:api.v1.TestJsonBField.int32)
  return _internal_int32();
}
inline void TestJsonBField::set_int32(::int32_t value) {
  _internal_set_int32(value);
  // @@protoc_insertion_point(field_set:api.v1.TestJsonBField.int32)
}
inline ::int32_t TestJsonBField::_internal_int32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.int32_;
}
inline void TestJsonBField::_internal_set_int32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int32_ = value;
}

// bool bool = 3 [json_name = "bool"];
inline void TestJsonBField::clear_bool_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool__ = false;
}
inline bool TestJsonBField::bool_() const {
  // @@protoc_insertion_point(field_get:api.v1.TestJsonBField.bool)
  return _internal_bool_();
}
inline void TestJsonBField::set_bool_(bool value) {
  _internal_set_bool_(value);
  // @@protoc_insertion_point(field_set:api.v1.TestJsonBField.bool)
}
inline bool TestJsonBField::_internal_bool_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bool__;
}
inline void TestJsonBField::_internal_set_bool_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool__ = value;
}

// -------------------------------------------------------------------

// TestValidatorMessage

// string ID = 1 [json_name = "ID"];
inline void TestValidatorMessage::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& TestValidatorMessage::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1.TestValidatorMessage.ID)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestValidatorMessage::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1.TestValidatorMessage.ID)
}
inline std::string* TestValidatorMessage::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:api.v1.TestValidatorMessage.ID)
  return _s;
}
inline const std::string& TestValidatorMessage::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void TestValidatorMessage::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* TestValidatorMessage::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* TestValidatorMessage::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1.TestValidatorMessage.ID)
  return _impl_.id_.Release();
}
inline void TestValidatorMessage::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:api.v1.TestValidatorMessage.ID)
}

// int32 mcc = 2 [json_name = "mcc"];
inline void TestValidatorMessage::clear_mcc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcc_ = 0;
}
inline ::int32_t TestValidatorMessage::mcc() const {
  // @@protoc_insertion_point(field_get:api.v1.TestValidatorMessage.mcc)
  return _internal_mcc();
}
inline void TestValidatorMessage::set_mcc(::int32_t value) {
  _internal_set_mcc(value);
  // @@protoc_insertion_point(field_set:api.v1.TestValidatorMessage.mcc)
}
inline ::int32_t TestValidatorMessage::_internal_mcc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mcc_;
}
inline void TestValidatorMessage::_internal_set_mcc(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mcc_ = value;
}

// int32 mnc = 3 [json_name = "mnc"];
inline void TestValidatorMessage::clear_mnc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_ = 0;
}
inline ::int32_t TestValidatorMessage::mnc() const {
  // @@protoc_insertion_point(field_get:api.v1.TestValidatorMessage.mnc)
  return _internal_mnc();
}
inline void TestValidatorMessage::set_mnc(::int32_t value) {
  _internal_set_mnc(value);
  // @@protoc_insertion_point(field_set:api.v1.TestValidatorMessage.mnc)
}
inline ::int32_t TestValidatorMessage::_internal_mnc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mnc_;
}
inline void TestValidatorMessage::_internal_set_mnc(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mnc_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace api


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::api::v1::TestEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::api::v1::TestEnum>() {
  return ::api::v1::TestEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_api_2fv1_2ftest_5ffixtures_2eproto_2epb_2eh
