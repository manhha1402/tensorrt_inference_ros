// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/type/postal_address.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2ftype_2fpostal_5faddress_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2ftype_2fpostal_5faddress_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2ftype_2fpostal_5faddress_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2ftype_2fpostal_5faddress_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2ftype_2fpostal_5faddress_2eproto;
namespace google {
namespace type {
class PostalAddress;
struct PostalAddressDefaultTypeInternal;
extern PostalAddressDefaultTypeInternal _PostalAddress_default_instance_;
}  // namespace type
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace google {
namespace type {

// ===================================================================


// -------------------------------------------------------------------

class PostalAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.type.PostalAddress) */ {
 public:
  inline PostalAddress() : PostalAddress(nullptr) {}
  ~PostalAddress() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostalAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostalAddress(const PostalAddress& from) : PostalAddress(nullptr, from) {}
  inline PostalAddress(PostalAddress&& from) noexcept
      : PostalAddress(nullptr, std::move(from)) {}
  inline PostalAddress& operator=(const PostalAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostalAddress& operator=(PostalAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostalAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostalAddress* internal_default_instance() {
    return reinterpret_cast<const PostalAddress*>(
        &_PostalAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PostalAddress& a, PostalAddress& b) { a.Swap(&b); }
  inline void Swap(PostalAddress* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostalAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostalAddress* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PostalAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostalAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostalAddress& from) { PostalAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PostalAddress* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.type.PostalAddress"; }

 protected:
  explicit PostalAddress(::google::protobuf::Arena* arena);
  PostalAddress(::google::protobuf::Arena* arena, const PostalAddress& from);
  PostalAddress(::google::protobuf::Arena* arena, PostalAddress&& from) noexcept
      : PostalAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressLinesFieldNumber = 9,
    kRecipientsFieldNumber = 10,
    kRegionCodeFieldNumber = 2,
    kLanguageCodeFieldNumber = 3,
    kPostalCodeFieldNumber = 4,
    kSortingCodeFieldNumber = 5,
    kAdministrativeAreaFieldNumber = 6,
    kLocalityFieldNumber = 7,
    kSublocalityFieldNumber = 8,
    kOrganizationFieldNumber = 11,
    kRevisionFieldNumber = 1,
  };
  // repeated string address_lines = 9 [json_name = "addressLines"];
  int address_lines_size() const;
  private:
  int _internal_address_lines_size() const;

  public:
  void clear_address_lines() ;
  const std::string& address_lines(int index) const;
  std::string* mutable_address_lines(int index);
  void set_address_lines(int index, const std::string& value);
  void set_address_lines(int index, std::string&& value);
  void set_address_lines(int index, const char* value);
  void set_address_lines(int index, const char* value, std::size_t size);
  void set_address_lines(int index, absl::string_view value);
  std::string* add_address_lines();
  void add_address_lines(const std::string& value);
  void add_address_lines(std::string&& value);
  void add_address_lines(const char* value);
  void add_address_lines(const char* value, std::size_t size);
  void add_address_lines(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& address_lines() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_address_lines();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_address_lines() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_address_lines();

  public:
  // repeated string recipients = 10 [json_name = "recipients"];
  int recipients_size() const;
  private:
  int _internal_recipients_size() const;

  public:
  void clear_recipients() ;
  const std::string& recipients(int index) const;
  std::string* mutable_recipients(int index);
  void set_recipients(int index, const std::string& value);
  void set_recipients(int index, std::string&& value);
  void set_recipients(int index, const char* value);
  void set_recipients(int index, const char* value, std::size_t size);
  void set_recipients(int index, absl::string_view value);
  std::string* add_recipients();
  void add_recipients(const std::string& value);
  void add_recipients(std::string&& value);
  void add_recipients(const char* value);
  void add_recipients(const char* value, std::size_t size);
  void add_recipients(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& recipients() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_recipients();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_recipients() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_recipients();

  public:
  // string region_code = 2 [json_name = "regionCode"];
  void clear_region_code() ;
  const std::string& region_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_region_code(Arg_&& arg, Args_... args);
  std::string* mutable_region_code();
  PROTOBUF_NODISCARD std::string* release_region_code();
  void set_allocated_region_code(std::string* value);

  private:
  const std::string& _internal_region_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_region_code(
      const std::string& value);
  std::string* _internal_mutable_region_code();

  public:
  // string language_code = 3 [json_name = "languageCode"];
  void clear_language_code() ;
  const std::string& language_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_language_code(Arg_&& arg, Args_... args);
  std::string* mutable_language_code();
  PROTOBUF_NODISCARD std::string* release_language_code();
  void set_allocated_language_code(std::string* value);

  private:
  const std::string& _internal_language_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_language_code(
      const std::string& value);
  std::string* _internal_mutable_language_code();

  public:
  // string postal_code = 4 [json_name = "postalCode"];
  void clear_postal_code() ;
  const std::string& postal_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_postal_code(Arg_&& arg, Args_... args);
  std::string* mutable_postal_code();
  PROTOBUF_NODISCARD std::string* release_postal_code();
  void set_allocated_postal_code(std::string* value);

  private:
  const std::string& _internal_postal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_postal_code(
      const std::string& value);
  std::string* _internal_mutable_postal_code();

  public:
  // string sorting_code = 5 [json_name = "sortingCode"];
  void clear_sorting_code() ;
  const std::string& sorting_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sorting_code(Arg_&& arg, Args_... args);
  std::string* mutable_sorting_code();
  PROTOBUF_NODISCARD std::string* release_sorting_code();
  void set_allocated_sorting_code(std::string* value);

  private:
  const std::string& _internal_sorting_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sorting_code(
      const std::string& value);
  std::string* _internal_mutable_sorting_code();

  public:
  // string administrative_area = 6 [json_name = "administrativeArea"];
  void clear_administrative_area() ;
  const std::string& administrative_area() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_administrative_area(Arg_&& arg, Args_... args);
  std::string* mutable_administrative_area();
  PROTOBUF_NODISCARD std::string* release_administrative_area();
  void set_allocated_administrative_area(std::string* value);

  private:
  const std::string& _internal_administrative_area() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_administrative_area(
      const std::string& value);
  std::string* _internal_mutable_administrative_area();

  public:
  // string locality = 7 [json_name = "locality"];
  void clear_locality() ;
  const std::string& locality() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_locality(Arg_&& arg, Args_... args);
  std::string* mutable_locality();
  PROTOBUF_NODISCARD std::string* release_locality();
  void set_allocated_locality(std::string* value);

  private:
  const std::string& _internal_locality() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locality(
      const std::string& value);
  std::string* _internal_mutable_locality();

  public:
  // string sublocality = 8 [json_name = "sublocality"];
  void clear_sublocality() ;
  const std::string& sublocality() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sublocality(Arg_&& arg, Args_... args);
  std::string* mutable_sublocality();
  PROTOBUF_NODISCARD std::string* release_sublocality();
  void set_allocated_sublocality(std::string* value);

  private:
  const std::string& _internal_sublocality() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sublocality(
      const std::string& value);
  std::string* _internal_mutable_sublocality();

  public:
  // string organization = 11 [json_name = "organization"];
  void clear_organization() ;
  const std::string& organization() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_organization(Arg_&& arg, Args_... args);
  std::string* mutable_organization();
  PROTOBUF_NODISCARD std::string* release_organization();
  void set_allocated_organization(std::string* value);

  private:
  const std::string& _internal_organization() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_organization(
      const std::string& value);
  std::string* _internal_mutable_organization();

  public:
  // int32 revision = 1 [json_name = "revision"];
  void clear_revision() ;
  ::int32_t revision() const;
  void set_revision(::int32_t value);

  private:
  ::int32_t _internal_revision() const;
  void _internal_set_revision(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:google.type.PostalAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      162, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PostalAddress_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostalAddress& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> address_lines_;
    ::google::protobuf::RepeatedPtrField<std::string> recipients_;
    ::google::protobuf::internal::ArenaStringPtr region_code_;
    ::google::protobuf::internal::ArenaStringPtr language_code_;
    ::google::protobuf::internal::ArenaStringPtr postal_code_;
    ::google::protobuf::internal::ArenaStringPtr sorting_code_;
    ::google::protobuf::internal::ArenaStringPtr administrative_area_;
    ::google::protobuf::internal::ArenaStringPtr locality_;
    ::google::protobuf::internal::ArenaStringPtr sublocality_;
    ::google::protobuf::internal::ArenaStringPtr organization_;
    ::int32_t revision_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2ftype_2fpostal_5faddress_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PostalAddress

// int32 revision = 1 [json_name = "revision"];
inline void PostalAddress::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = 0;
}
inline ::int32_t PostalAddress::revision() const {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.revision)
  return _internal_revision();
}
inline void PostalAddress::set_revision(::int32_t value) {
  _internal_set_revision(value);
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.revision)
}
inline ::int32_t PostalAddress::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_;
}
inline void PostalAddress::_internal_set_revision(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = value;
}

// string region_code = 2 [json_name = "regionCode"];
inline void PostalAddress::clear_region_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_code_.ClearToEmpty();
}
inline const std::string& PostalAddress::region_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.region_code)
  return _internal_region_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_region_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.region_code)
}
inline std::string* PostalAddress::mutable_region_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_region_code();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.region_code)
  return _s;
}
inline const std::string& PostalAddress::_internal_region_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_code_.Get();
}
inline void PostalAddress::_internal_set_region_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_code_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_region_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.region_code_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_region_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.region_code)
  return _impl_.region_code_.Release();
}
inline void PostalAddress::set_allocated_region_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.region_code_.IsDefault()) {
          _impl_.region_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.region_code)
}

// string language_code = 3 [json_name = "languageCode"];
inline void PostalAddress::clear_language_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_code_.ClearToEmpty();
}
inline const std::string& PostalAddress::language_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.language_code)
  return _internal_language_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_language_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.language_code)
}
inline std::string* PostalAddress::mutable_language_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_language_code();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.language_code)
  return _s;
}
inline const std::string& PostalAddress::_internal_language_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.language_code_.Get();
}
inline void PostalAddress::_internal_set_language_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_code_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_language_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.language_code_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_language_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.language_code)
  return _impl_.language_code_.Release();
}
inline void PostalAddress::set_allocated_language_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.language_code_.IsDefault()) {
          _impl_.language_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.language_code)
}

// string postal_code = 4 [json_name = "postalCode"];
inline void PostalAddress::clear_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.ClearToEmpty();
}
inline const std::string& PostalAddress::postal_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.postal_code)
  return _internal_postal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_postal_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.postal_code)
}
inline std::string* PostalAddress::mutable_postal_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_postal_code();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.postal_code)
  return _s;
}
inline const std::string& PostalAddress::_internal_postal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.postal_code_.Get();
}
inline void PostalAddress::_internal_set_postal_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.postal_code_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_postal_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.postal_code)
  return _impl_.postal_code_.Release();
}
inline void PostalAddress::set_allocated_postal_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.postal_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.postal_code_.IsDefault()) {
          _impl_.postal_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.postal_code)
}

// string sorting_code = 5 [json_name = "sortingCode"];
inline void PostalAddress::clear_sorting_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sorting_code_.ClearToEmpty();
}
inline const std::string& PostalAddress::sorting_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.sorting_code)
  return _internal_sorting_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_sorting_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sorting_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.sorting_code)
}
inline std::string* PostalAddress::mutable_sorting_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sorting_code();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.sorting_code)
  return _s;
}
inline const std::string& PostalAddress::_internal_sorting_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sorting_code_.Get();
}
inline void PostalAddress::_internal_set_sorting_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sorting_code_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_sorting_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sorting_code_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_sorting_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.sorting_code)
  return _impl_.sorting_code_.Release();
}
inline void PostalAddress::set_allocated_sorting_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sorting_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sorting_code_.IsDefault()) {
          _impl_.sorting_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.sorting_code)
}

// string administrative_area = 6 [json_name = "administrativeArea"];
inline void PostalAddress::clear_administrative_area() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.administrative_area_.ClearToEmpty();
}
inline const std::string& PostalAddress::administrative_area() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.administrative_area)
  return _internal_administrative_area();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_administrative_area(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.administrative_area_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.administrative_area)
}
inline std::string* PostalAddress::mutable_administrative_area() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_administrative_area();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.administrative_area)
  return _s;
}
inline const std::string& PostalAddress::_internal_administrative_area() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.administrative_area_.Get();
}
inline void PostalAddress::_internal_set_administrative_area(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.administrative_area_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_administrative_area() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.administrative_area_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_administrative_area() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.administrative_area)
  return _impl_.administrative_area_.Release();
}
inline void PostalAddress::set_allocated_administrative_area(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.administrative_area_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.administrative_area_.IsDefault()) {
          _impl_.administrative_area_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.administrative_area)
}

// string locality = 7 [json_name = "locality"];
inline void PostalAddress::clear_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locality_.ClearToEmpty();
}
inline const std::string& PostalAddress::locality() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.locality)
  return _internal_locality();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_locality(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locality_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.locality)
}
inline std::string* PostalAddress::mutable_locality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_locality();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.locality)
  return _s;
}
inline const std::string& PostalAddress::_internal_locality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locality_.Get();
}
inline void PostalAddress::_internal_set_locality(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locality_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.locality_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_locality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.locality)
  return _impl_.locality_.Release();
}
inline void PostalAddress::set_allocated_locality(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locality_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.locality_.IsDefault()) {
          _impl_.locality_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.locality)
}

// string sublocality = 8 [json_name = "sublocality"];
inline void PostalAddress::clear_sublocality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sublocality_.ClearToEmpty();
}
inline const std::string& PostalAddress::sublocality() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.sublocality)
  return _internal_sublocality();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_sublocality(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sublocality_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.sublocality)
}
inline std::string* PostalAddress::mutable_sublocality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sublocality();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.sublocality)
  return _s;
}
inline const std::string& PostalAddress::_internal_sublocality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sublocality_.Get();
}
inline void PostalAddress::_internal_set_sublocality(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sublocality_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_sublocality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sublocality_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_sublocality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.sublocality)
  return _impl_.sublocality_.Release();
}
inline void PostalAddress::set_allocated_sublocality(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sublocality_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sublocality_.IsDefault()) {
          _impl_.sublocality_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.sublocality)
}

// repeated string address_lines = 9 [json_name = "addressLines"];
inline int PostalAddress::_internal_address_lines_size() const {
  return _internal_address_lines().size();
}
inline int PostalAddress::address_lines_size() const {
  return _internal_address_lines_size();
}
inline void PostalAddress::clear_address_lines() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_lines_.Clear();
}
inline std::string* PostalAddress::add_address_lines()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_address_lines()->Add();
  // @@protoc_insertion_point(field_add_mutable:google.type.PostalAddress.address_lines)
  return _s;
}
inline const std::string& PostalAddress::address_lines(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.address_lines)
  return _internal_address_lines().Get(index);
}
inline std::string* PostalAddress::mutable_address_lines(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.address_lines)
  return _internal_mutable_address_lines()->Mutable(index);
}
inline void PostalAddress::set_address_lines(int index, const std::string& value) {
  _internal_mutable_address_lines()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::set_address_lines(int index, std::string&& value) {
  _internal_mutable_address_lines()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::set_address_lines(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_address_lines()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::set_address_lines(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_address_lines()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::set_address_lines(int index, absl::string_view value) {
  _internal_mutable_address_lines()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::add_address_lines(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_address_lines()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::add_address_lines(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_address_lines()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::add_address_lines(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_address_lines()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::add_address_lines(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_address_lines()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.type.PostalAddress.address_lines)
}
inline void PostalAddress::add_address_lines(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_address_lines()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:google.type.PostalAddress.address_lines)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PostalAddress::address_lines() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:google.type.PostalAddress.address_lines)
  return _internal_address_lines();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PostalAddress::mutable_address_lines() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:google.type.PostalAddress.address_lines)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_address_lines();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PostalAddress::_internal_address_lines() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_lines_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PostalAddress::_internal_mutable_address_lines() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.address_lines_;
}

// repeated string recipients = 10 [json_name = "recipients"];
inline int PostalAddress::_internal_recipients_size() const {
  return _internal_recipients().size();
}
inline int PostalAddress::recipients_size() const {
  return _internal_recipients_size();
}
inline void PostalAddress::clear_recipients() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipients_.Clear();
}
inline std::string* PostalAddress::add_recipients()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_recipients()->Add();
  // @@protoc_insertion_point(field_add_mutable:google.type.PostalAddress.recipients)
  return _s;
}
inline const std::string& PostalAddress::recipients(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.recipients)
  return _internal_recipients().Get(index);
}
inline std::string* PostalAddress::mutable_recipients(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.recipients)
  return _internal_mutable_recipients()->Mutable(index);
}
inline void PostalAddress::set_recipients(int index, const std::string& value) {
  _internal_mutable_recipients()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.recipients)
}
inline void PostalAddress::set_recipients(int index, std::string&& value) {
  _internal_mutable_recipients()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.recipients)
}
inline void PostalAddress::set_recipients(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_recipients()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.type.PostalAddress.recipients)
}
inline void PostalAddress::set_recipients(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_recipients()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.type.PostalAddress.recipients)
}
inline void PostalAddress::set_recipients(int index, absl::string_view value) {
  _internal_mutable_recipients()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:google.type.PostalAddress.recipients)
}
inline void PostalAddress::add_recipients(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_recipients()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.type.PostalAddress.recipients)
}
inline void PostalAddress::add_recipients(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_recipients()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.type.PostalAddress.recipients)
}
inline void PostalAddress::add_recipients(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_recipients()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.type.PostalAddress.recipients)
}
inline void PostalAddress::add_recipients(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_recipients()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.type.PostalAddress.recipients)
}
inline void PostalAddress::add_recipients(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_recipients()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:google.type.PostalAddress.recipients)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PostalAddress::recipients() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:google.type.PostalAddress.recipients)
  return _internal_recipients();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PostalAddress::mutable_recipients() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:google.type.PostalAddress.recipients)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_recipients();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PostalAddress::_internal_recipients() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recipients_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PostalAddress::_internal_mutable_recipients() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.recipients_;
}

// string organization = 11 [json_name = "organization"];
inline void PostalAddress::clear_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_.ClearToEmpty();
}
inline const std::string& PostalAddress::organization() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.type.PostalAddress.organization)
  return _internal_organization();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostalAddress::set_organization(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.type.PostalAddress.organization)
}
inline std::string* PostalAddress::mutable_organization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_organization();
  // @@protoc_insertion_point(field_mutable:google.type.PostalAddress.organization)
  return _s;
}
inline const std::string& PostalAddress::_internal_organization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.organization_.Get();
}
inline void PostalAddress::_internal_set_organization(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_.Set(value, GetArena());
}
inline std::string* PostalAddress::_internal_mutable_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.organization_.Mutable( GetArena());
}
inline std::string* PostalAddress::release_organization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.type.PostalAddress.organization)
  return _impl_.organization_.Release();
}
inline void PostalAddress::set_allocated_organization(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.organization_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.organization_.IsDefault()) {
          _impl_.organization_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.type.PostalAddress.organization)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace google


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2ftype_2fpostal_5faddress_2eproto_2epb_2eh
