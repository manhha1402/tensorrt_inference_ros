// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/bytestream/bytestream.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fbytestream_2fbytestream_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fbytestream_2fbytestream_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fbytestream_2fbytestream_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fbytestream_2fbytestream_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fbytestream_2fbytestream_2eproto;
namespace google {
namespace bytestream {
class QueryWriteStatusRequest;
struct QueryWriteStatusRequestDefaultTypeInternal;
extern QueryWriteStatusRequestDefaultTypeInternal _QueryWriteStatusRequest_default_instance_;
class QueryWriteStatusResponse;
struct QueryWriteStatusResponseDefaultTypeInternal;
extern QueryWriteStatusResponseDefaultTypeInternal _QueryWriteStatusResponse_default_instance_;
class ReadRequest;
struct ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class ReadResponse;
struct ReadResponseDefaultTypeInternal;
extern ReadResponseDefaultTypeInternal _ReadResponse_default_instance_;
class WriteRequest;
struct WriteRequestDefaultTypeInternal;
extern WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
class WriteResponse;
struct WriteResponseDefaultTypeInternal;
extern WriteResponseDefaultTypeInternal _WriteResponse_default_instance_;
}  // namespace bytestream
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace google {
namespace bytestream {

// ===================================================================


// -------------------------------------------------------------------

class WriteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.bytestream.WriteResponse) */ {
 public:
  inline WriteResponse() : WriteResponse(nullptr) {}
  ~WriteResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteResponse(const WriteResponse& from) : WriteResponse(nullptr, from) {}
  inline WriteResponse(WriteResponse&& from) noexcept
      : WriteResponse(nullptr, std::move(from)) {}
  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteResponse& operator=(WriteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteResponse* internal_default_instance() {
    return reinterpret_cast<const WriteResponse*>(
        &_WriteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(WriteResponse& a, WriteResponse& b) { a.Swap(&b); }
  inline void Swap(WriteResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<WriteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteResponse& from) { WriteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WriteResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.bytestream.WriteResponse"; }

 protected:
  explicit WriteResponse(::google::protobuf::Arena* arena);
  WriteResponse(::google::protobuf::Arena* arena, const WriteResponse& from);
  WriteResponse(::google::protobuf::Arena* arena, WriteResponse&& from) noexcept
      : WriteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommittedSizeFieldNumber = 1,
  };
  // int64 committed_size = 1 [json_name = "committedSize"];
  void clear_committed_size() ;
  ::int64_t committed_size() const;
  void set_committed_size(::int64_t value);

  private:
  ::int64_t _internal_committed_size() const;
  void _internal_set_committed_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:google.bytestream.WriteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WriteResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteResponse& from_msg);
    ::int64_t committed_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class WriteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.bytestream.WriteRequest) */ {
 public:
  inline WriteRequest() : WriteRequest(nullptr) {}
  ~WriteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteRequest(const WriteRequest& from) : WriteRequest(nullptr, from) {}
  inline WriteRequest(WriteRequest&& from) noexcept
      : WriteRequest(nullptr, std::move(from)) {}
  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteRequest& operator=(WriteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRequest*>(
        &_WriteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(WriteRequest& a, WriteRequest& b) { a.Swap(&b); }
  inline void Swap(WriteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<WriteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteRequest& from) { WriteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WriteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.bytestream.WriteRequest"; }

 protected:
  explicit WriteRequest(::google::protobuf::Arena* arena);
  WriteRequest(::google::protobuf::Arena* arena, const WriteRequest& from);
  WriteRequest(::google::protobuf::Arena* arena, WriteRequest&& from) noexcept
      : WriteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResourceNameFieldNumber = 1,
    kDataFieldNumber = 10,
    kWriteOffsetFieldNumber = 2,
    kFinishWriteFieldNumber = 3,
  };
  // string resource_name = 1 [json_name = "resourceName"];
  void clear_resource_name() ;
  const std::string& resource_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_name(Arg_&& arg, Args_... args);
  std::string* mutable_resource_name();
  PROTOBUF_NODISCARD std::string* release_resource_name();
  void set_allocated_resource_name(std::string* value);

  private:
  const std::string& _internal_resource_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_name(
      const std::string& value);
  std::string* _internal_mutable_resource_name();

  public:
  // bytes data = 10 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int64 write_offset = 2 [json_name = "writeOffset"];
  void clear_write_offset() ;
  ::int64_t write_offset() const;
  void set_write_offset(::int64_t value);

  private:
  ::int64_t _internal_write_offset() const;
  void _internal_set_write_offset(::int64_t value);

  public:
  // bool finish_write = 3 [json_name = "finishWrite"];
  void clear_finish_write() ;
  bool finish_write() const;
  void set_finish_write(bool value);

  private:
  bool _internal_finish_write() const;
  void _internal_set_finish_write(bool value);

  public:
  // @@protoc_insertion_point(class_scope:google.bytestream.WriteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WriteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr resource_name_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int64_t write_offset_;
    bool finish_write_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class ReadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.bytestream.ReadResponse) */ {
 public:
  inline ReadResponse() : ReadResponse(nullptr) {}
  ~ReadResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadResponse(const ReadResponse& from) : ReadResponse(nullptr, from) {}
  inline ReadResponse(ReadResponse&& from) noexcept
      : ReadResponse(nullptr, std::move(from)) {}
  inline ReadResponse& operator=(const ReadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadResponse& operator=(ReadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadResponse* internal_default_instance() {
    return reinterpret_cast<const ReadResponse*>(
        &_ReadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ReadResponse& a, ReadResponse& b) { a.Swap(&b); }
  inline void Swap(ReadResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadResponse& from) { ReadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.bytestream.ReadResponse"; }

 protected:
  explicit ReadResponse(::google::protobuf::Arena* arena);
  ReadResponse(::google::protobuf::Arena* arena, const ReadResponse& from);
  ReadResponse(::google::protobuf::Arena* arena, ReadResponse&& from) noexcept
      : ReadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 10,
  };
  // bytes data = 10 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:google.bytestream.ReadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReadResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class ReadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.bytestream.ReadRequest) */ {
 public:
  inline ReadRequest() : ReadRequest(nullptr) {}
  ~ReadRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadRequest(const ReadRequest& from) : ReadRequest(nullptr, from) {}
  inline ReadRequest(ReadRequest&& from) noexcept
      : ReadRequest(nullptr, std::move(from)) {}
  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
        &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ReadRequest& a, ReadRequest& b) { a.Swap(&b); }
  inline void Swap(ReadRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadRequest& from) { ReadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.bytestream.ReadRequest"; }

 protected:
  explicit ReadRequest(::google::protobuf::Arena* arena);
  ReadRequest(::google::protobuf::Arena* arena, const ReadRequest& from);
  ReadRequest(::google::protobuf::Arena* arena, ReadRequest&& from) noexcept
      : ReadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResourceNameFieldNumber = 1,
    kReadOffsetFieldNumber = 2,
    kReadLimitFieldNumber = 3,
  };
  // string resource_name = 1 [json_name = "resourceName"];
  void clear_resource_name() ;
  const std::string& resource_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_name(Arg_&& arg, Args_... args);
  std::string* mutable_resource_name();
  PROTOBUF_NODISCARD std::string* release_resource_name();
  void set_allocated_resource_name(std::string* value);

  private:
  const std::string& _internal_resource_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_name(
      const std::string& value);
  std::string* _internal_mutable_resource_name();

  public:
  // int64 read_offset = 2 [json_name = "readOffset"];
  void clear_read_offset() ;
  ::int64_t read_offset() const;
  void set_read_offset(::int64_t value);

  private:
  ::int64_t _internal_read_offset() const;
  void _internal_set_read_offset(::int64_t value);

  public:
  // int64 read_limit = 3 [json_name = "readLimit"];
  void clear_read_limit() ;
  ::int64_t read_limit() const;
  void set_read_limit(::int64_t value);

  private:
  ::int64_t _internal_read_limit() const;
  void _internal_set_read_limit(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:google.bytestream.ReadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReadRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr resource_name_;
    ::int64_t read_offset_;
    ::int64_t read_limit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class QueryWriteStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.bytestream.QueryWriteStatusResponse) */ {
 public:
  inline QueryWriteStatusResponse() : QueryWriteStatusResponse(nullptr) {}
  ~QueryWriteStatusResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryWriteStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryWriteStatusResponse(const QueryWriteStatusResponse& from) : QueryWriteStatusResponse(nullptr, from) {}
  inline QueryWriteStatusResponse(QueryWriteStatusResponse&& from) noexcept
      : QueryWriteStatusResponse(nullptr, std::move(from)) {}
  inline QueryWriteStatusResponse& operator=(const QueryWriteStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryWriteStatusResponse& operator=(QueryWriteStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryWriteStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryWriteStatusResponse* internal_default_instance() {
    return reinterpret_cast<const QueryWriteStatusResponse*>(
        &_QueryWriteStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryWriteStatusResponse& a, QueryWriteStatusResponse& b) { a.Swap(&b); }
  inline void Swap(QueryWriteStatusResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryWriteStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryWriteStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryWriteStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryWriteStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryWriteStatusResponse& from) { QueryWriteStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryWriteStatusResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.bytestream.QueryWriteStatusResponse"; }

 protected:
  explicit QueryWriteStatusResponse(::google::protobuf::Arena* arena);
  QueryWriteStatusResponse(::google::protobuf::Arena* arena, const QueryWriteStatusResponse& from);
  QueryWriteStatusResponse(::google::protobuf::Arena* arena, QueryWriteStatusResponse&& from) noexcept
      : QueryWriteStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommittedSizeFieldNumber = 1,
    kCompleteFieldNumber = 2,
  };
  // int64 committed_size = 1 [json_name = "committedSize"];
  void clear_committed_size() ;
  ::int64_t committed_size() const;
  void set_committed_size(::int64_t value);

  private:
  ::int64_t _internal_committed_size() const;
  void _internal_set_committed_size(::int64_t value);

  public:
  // bool complete = 2 [json_name = "complete"];
  void clear_complete() ;
  bool complete() const;
  void set_complete(bool value);

  private:
  bool _internal_complete() const;
  void _internal_set_complete(bool value);

  public:
  // @@protoc_insertion_point(class_scope:google.bytestream.QueryWriteStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryWriteStatusResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryWriteStatusResponse& from_msg);
    ::int64_t committed_size_;
    bool complete_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};
// -------------------------------------------------------------------

class QueryWriteStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.bytestream.QueryWriteStatusRequest) */ {
 public:
  inline QueryWriteStatusRequest() : QueryWriteStatusRequest(nullptr) {}
  ~QueryWriteStatusRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryWriteStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryWriteStatusRequest(const QueryWriteStatusRequest& from) : QueryWriteStatusRequest(nullptr, from) {}
  inline QueryWriteStatusRequest(QueryWriteStatusRequest&& from) noexcept
      : QueryWriteStatusRequest(nullptr, std::move(from)) {}
  inline QueryWriteStatusRequest& operator=(const QueryWriteStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryWriteStatusRequest& operator=(QueryWriteStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryWriteStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryWriteStatusRequest* internal_default_instance() {
    return reinterpret_cast<const QueryWriteStatusRequest*>(
        &_QueryWriteStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryWriteStatusRequest& a, QueryWriteStatusRequest& b) { a.Swap(&b); }
  inline void Swap(QueryWriteStatusRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryWriteStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryWriteStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<QueryWriteStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryWriteStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryWriteStatusRequest& from) { QueryWriteStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryWriteStatusRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "google.bytestream.QueryWriteStatusRequest"; }

 protected:
  explicit QueryWriteStatusRequest(::google::protobuf::Arena* arena);
  QueryWriteStatusRequest(::google::protobuf::Arena* arena, const QueryWriteStatusRequest& from);
  QueryWriteStatusRequest(::google::protobuf::Arena* arena, QueryWriteStatusRequest&& from) noexcept
      : QueryWriteStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResourceNameFieldNumber = 1,
  };
  // string resource_name = 1 [json_name = "resourceName"];
  void clear_resource_name() ;
  const std::string& resource_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_name(Arg_&& arg, Args_... args);
  std::string* mutable_resource_name();
  PROTOBUF_NODISCARD std::string* release_resource_name();
  void set_allocated_resource_name(std::string* value);

  private:
  const std::string& _internal_resource_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_name(
      const std::string& value);
  std::string* _internal_mutable_resource_name();

  public:
  // @@protoc_insertion_point(class_scope:google.bytestream.QueryWriteStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryWriteStatusRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryWriteStatusRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr resource_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fbytestream_2fbytestream_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ReadRequest

// string resource_name = 1 [json_name = "resourceName"];
inline void ReadRequest::clear_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.ClearToEmpty();
}
inline const std::string& ReadRequest::resource_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.resource_name)
  return _internal_resource_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadRequest::set_resource_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.resource_name)
}
inline std::string* ReadRequest::mutable_resource_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_name();
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadRequest.resource_name)
  return _s;
}
inline const std::string& ReadRequest::_internal_resource_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_name_.Get();
}
inline void ReadRequest::_internal_set_resource_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.Set(value, GetArena());
}
inline std::string* ReadRequest::_internal_mutable_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resource_name_.Mutable( GetArena());
}
inline std::string* ReadRequest::release_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.bytestream.ReadRequest.resource_name)
  return _impl_.resource_name_.Release();
}
inline void ReadRequest::set_allocated_resource_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_name_.IsDefault()) {
          _impl_.resource_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadRequest.resource_name)
}

// int64 read_offset = 2 [json_name = "readOffset"];
inline void ReadRequest::clear_read_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_offset_ = ::int64_t{0};
}
inline ::int64_t ReadRequest::read_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_offset)
  return _internal_read_offset();
}
inline void ReadRequest::set_read_offset(::int64_t value) {
  _internal_set_read_offset(value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_offset)
}
inline ::int64_t ReadRequest::_internal_read_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.read_offset_;
}
inline void ReadRequest::_internal_set_read_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_offset_ = value;
}

// int64 read_limit = 3 [json_name = "readLimit"];
inline void ReadRequest::clear_read_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_limit_ = ::int64_t{0};
}
inline ::int64_t ReadRequest::read_limit() const {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadRequest.read_limit)
  return _internal_read_limit();
}
inline void ReadRequest::set_read_limit(::int64_t value) {
  _internal_set_read_limit(value);
  // @@protoc_insertion_point(field_set:google.bytestream.ReadRequest.read_limit)
}
inline ::int64_t ReadRequest::_internal_read_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.read_limit_;
}
inline void ReadRequest::_internal_set_read_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_limit_ = value;
}

// -------------------------------------------------------------------

// ReadResponse

// bytes data = 10 [json_name = "data"];
inline void ReadResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ReadResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.bytestream.ReadResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.bytestream.ReadResponse.data)
}
inline std::string* ReadResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:google.bytestream.ReadResponse.data)
  return _s;
}
inline const std::string& ReadResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ReadResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ReadResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ReadResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.bytestream.ReadResponse.data)
  return _impl_.data_.Release();
}
inline void ReadResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.ReadResponse.data)
}

// -------------------------------------------------------------------

// WriteRequest

// string resource_name = 1 [json_name = "resourceName"];
inline void WriteRequest::clear_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.ClearToEmpty();
}
inline const std::string& WriteRequest::resource_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.resource_name)
  return _internal_resource_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteRequest::set_resource_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.resource_name)
}
inline std::string* WriteRequest::mutable_resource_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_name();
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.resource_name)
  return _s;
}
inline const std::string& WriteRequest::_internal_resource_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_name_.Get();
}
inline void WriteRequest::_internal_set_resource_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.Set(value, GetArena());
}
inline std::string* WriteRequest::_internal_mutable_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resource_name_.Mutable( GetArena());
}
inline std::string* WriteRequest::release_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.resource_name)
  return _impl_.resource_name_.Release();
}
inline void WriteRequest::set_allocated_resource_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_name_.IsDefault()) {
          _impl_.resource_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.resource_name)
}

// int64 write_offset = 2 [json_name = "writeOffset"];
inline void WriteRequest::clear_write_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_offset_ = ::int64_t{0};
}
inline ::int64_t WriteRequest::write_offset() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.write_offset)
  return _internal_write_offset();
}
inline void WriteRequest::set_write_offset(::int64_t value) {
  _internal_set_write_offset(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.write_offset)
}
inline ::int64_t WriteRequest::_internal_write_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.write_offset_;
}
inline void WriteRequest::_internal_set_write_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_offset_ = value;
}

// bool finish_write = 3 [json_name = "finishWrite"];
inline void WriteRequest::clear_finish_write() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finish_write_ = false;
}
inline bool WriteRequest::finish_write() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.finish_write)
  return _internal_finish_write();
}
inline void WriteRequest::set_finish_write(bool value) {
  _internal_set_finish_write(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.finish_write)
}
inline bool WriteRequest::_internal_finish_write() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finish_write_;
}
inline void WriteRequest::_internal_set_finish_write(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finish_write_ = value;
}

// bytes data = 10 [json_name = "data"];
inline void WriteRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& WriteRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.bytestream.WriteRequest.data)
}
inline std::string* WriteRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:google.bytestream.WriteRequest.data)
  return _s;
}
inline const std::string& WriteRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void WriteRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* WriteRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* WriteRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.bytestream.WriteRequest.data)
  return _impl_.data_.Release();
}
inline void WriteRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.WriteRequest.data)
}

// -------------------------------------------------------------------

// WriteResponse

// int64 committed_size = 1 [json_name = "committedSize"];
inline void WriteResponse::clear_committed_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.committed_size_ = ::int64_t{0};
}
inline ::int64_t WriteResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.WriteResponse.committed_size)
  return _internal_committed_size();
}
inline void WriteResponse::set_committed_size(::int64_t value) {
  _internal_set_committed_size(value);
  // @@protoc_insertion_point(field_set:google.bytestream.WriteResponse.committed_size)
}
inline ::int64_t WriteResponse::_internal_committed_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.committed_size_;
}
inline void WriteResponse::_internal_set_committed_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.committed_size_ = value;
}

// -------------------------------------------------------------------

// QueryWriteStatusRequest

// string resource_name = 1 [json_name = "resourceName"];
inline void QueryWriteStatusRequest::clear_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.ClearToEmpty();
}
inline const std::string& QueryWriteStatusRequest::resource_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusRequest.resource_name)
  return _internal_resource_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryWriteStatusRequest::set_resource_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusRequest.resource_name)
}
inline std::string* QueryWriteStatusRequest::mutable_resource_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_name();
  // @@protoc_insertion_point(field_mutable:google.bytestream.QueryWriteStatusRequest.resource_name)
  return _s;
}
inline const std::string& QueryWriteStatusRequest::_internal_resource_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_name_.Get();
}
inline void QueryWriteStatusRequest::_internal_set_resource_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.Set(value, GetArena());
}
inline std::string* QueryWriteStatusRequest::_internal_mutable_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resource_name_.Mutable( GetArena());
}
inline std::string* QueryWriteStatusRequest::release_resource_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:google.bytestream.QueryWriteStatusRequest.resource_name)
  return _impl_.resource_name_.Release();
}
inline void QueryWriteStatusRequest::set_allocated_resource_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_name_.IsDefault()) {
          _impl_.resource_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.bytestream.QueryWriteStatusRequest.resource_name)
}

// -------------------------------------------------------------------

// QueryWriteStatusResponse

// int64 committed_size = 1 [json_name = "committedSize"];
inline void QueryWriteStatusResponse::clear_committed_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.committed_size_ = ::int64_t{0};
}
inline ::int64_t QueryWriteStatusResponse::committed_size() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.committed_size)
  return _internal_committed_size();
}
inline void QueryWriteStatusResponse::set_committed_size(::int64_t value) {
  _internal_set_committed_size(value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.committed_size)
}
inline ::int64_t QueryWriteStatusResponse::_internal_committed_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.committed_size_;
}
inline void QueryWriteStatusResponse::_internal_set_committed_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.committed_size_ = value;
}

// bool complete = 2 [json_name = "complete"];
inline void QueryWriteStatusResponse::clear_complete() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.complete_ = false;
}
inline bool QueryWriteStatusResponse::complete() const {
  // @@protoc_insertion_point(field_get:google.bytestream.QueryWriteStatusResponse.complete)
  return _internal_complete();
}
inline void QueryWriteStatusResponse::set_complete(bool value) {
  _internal_set_complete(value);
  // @@protoc_insertion_point(field_set:google.bytestream.QueryWriteStatusResponse.complete)
}
inline bool QueryWriteStatusResponse::_internal_complete() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.complete_;
}
inline void QueryWriteStatusResponse::_internal_set_complete(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.complete_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bytestream
}  // namespace google


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fbytestream_2fbytestream_2eproto_2epb_2eh
